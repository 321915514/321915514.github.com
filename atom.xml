<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>philxling</title>
  <icon>https://www.gravatar.com/avatar/295a5284129a41f836e900ffd2bcd96b</icon>
  <subtitle>Sometimes,Nowhere means &quot;Now&quot;&quot;Here&quot;</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://philxling.cn/"/>
  <updated>2020-04-02T14:52:34.960Z</updated>
  <id>http://philxling.cn/</id>
  
  <author>
    <name>philxling</name>
    <email>321915514wx@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常用算法和排序</title>
    <link href="http://philxling.cn/[object%20Object]/2020/04/20/c++/7-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E5%92%8C%E6%8E%92%E5%BA%8F/"/>
    <id>http://philxling.cn/[object%20Object]/2020/04/20/c++/7-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E5%92%8C%E6%8E%92%E5%BA%8F/</id>
    <published>2020-04-20T15:27:01.000Z</published>
    <updated>2020-04-02T14:52:34.960Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>函数对象</p><p><img src="/[object%20Object]/2020/04/20/c++/7-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E5%92%8C%E6%8E%92%E5%BA%8F/image-20200325053739130.png" alt="image-20200325053739130"></p><a id="more"></a><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myAdd</span>{</span> <span class="comment">// 函数对象 </span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">myAdd(){</span><br><span class="line"><span class="keyword">this</span>->count=<span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>{</span><br><span class="line"><span class="keyword">this</span>->count++;</span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line">} </span><br><span class="line"><span class="comment">//使用属性记录对象调用次数</span></span><br><span class="line"><span class="keyword">int</span> count; </span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>{</span><br><span class="line">myAdd myadd;</span><br><span class="line"><span class="built_in">cout</span><< myadd(<span class="number">12</span>,<span class="number">43</span>) <<<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span><< myadd(<span class="number">12</span>,<span class="number">43</span>) <<<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span><<myadd.count<<<span class="built_in">endl</span>; <span class="comment">// 2</span></span><br><span class="line">}</span><br><span class="line"> <span class="comment">// 可以作为参数传递</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">doAdd</span><span class="params">(myAdd &myadd,<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<myadd(a,b)<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">test2</span><span class="params">()</span></span>{</span><br><span class="line">myAdd myadd;</span><br><span class="line">doAdd(myadd,<span class="number">12</span>,<span class="number">44</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="comment">//test1();</span></span><br><span class="line">test2();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>谓词</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><algorithm></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><vector></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 仿函数 返回值是bool类型, 成为谓词 </span></span><br><span class="line"><span class="comment">// 一元谓词 ,接收一个参数 </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GreatorFind</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">int</span> val)</span></span>{ <span class="comment">// 一元谓词 </span></span><br><span class="line"><span class="keyword">return</span> val><span class="number">5</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}; </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myCompare</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>{ <span class="comment">// 二元谓词 谓词指的是返回bool 二元指的是参数</span></span><br><span class="line"><span class="keyword">return</span> a>b;</span><br><span class="line">}</span><br><span class="line">}; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">10</span>;i++){</span><br><span class="line">v.push_back(i);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>>::iterator it=find_if(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),GreatorFind());</span><br><span class="line"><span class="built_in">cout</span><<*it<<<span class="built_in">endl</span>;</span><br><span class="line">sort(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),myCompare());</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">vector</span><<span class="keyword">int</span>>::iterator it=v.<span class="built_in">begin</span>();it!=v.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">cout</span><<*it<<<span class="string">" "</span>;</span><br><span class="line">} </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">6</span></span><br><span class="line"><span class="comment">9 8 7 6 5 4 3 2 1 0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>内建仿函数</p><p><img src="/[object%20Object]/2020/04/20/c++/7-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E5%92%8C%E6%8E%92%E5%BA%8F/image-20200325062750741.png" alt="image-20200325062750741"></p><p><img src="/[object%20Object]/2020/04/20/c++/7-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E5%92%8C%E6%8E%92%E5%BA%8F/image-20200325063143207.png" alt="image-20200325063143207"></p><p>关系仿函数</p><p><img src="/[object%20Object]/2020/04/20/c++/7-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E5%92%8C%E6%8E%92%E5%BA%8F/image-20200325063930278.png" alt="image-20200325063930278"></p><p>逻辑仿函数</p><p><img src="/[object%20Object]/2020/04/20/c++/7-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E5%92%8C%E6%8E%92%E5%BA%8F/image-20200325064755552.png" alt="image-20200325064755552"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><functional> // 算数仿函数头文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><vector></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><algorithm> </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>{</span><br><span class="line">plus<<span class="keyword">int</span>> p;</span><br><span class="line">negate<<span class="keyword">int</span>> n; </span><br><span class="line"><span class="built_in">cout</span><<p(<span class="number">12</span>,<span class="number">43</span>)<<<span class="built_in">endl</span>; <span class="comment">// 不支持匿名 </span></span><br><span class="line"><span class="built_in">cout</span><<n(<span class="number">129</span>)<<<span class="built_in">endl</span>; <span class="comment">//取反 </span></span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">9</span>;i++){</span><br><span class="line">v.push_back(i);</span><br><span class="line">}</span><br><span class="line">sort(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),greater<<span class="keyword">int</span>>()); <span class="comment">//关系仿函数  </span></span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">vector</span><<span class="keyword">int</span>>::iterator it=v.<span class="built_in">begin</span>();it!=v.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">cout</span><<*it<<<span class="string">" "</span>;  </span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>; </span><br><span class="line"><span class="comment">// 逻辑运算符</span></span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">bool</span>> v1;</span><br><span class="line">v1.push_back(<span class="literal">true</span>);</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">bool</span>> v2;</span><br><span class="line">v2.resize(v1.<span class="built_in">size</span>());</span><br><span class="line">transform(v1.<span class="built_in">begin</span>(),v1.<span class="built_in">end</span>(),v2.<span class="built_in">begin</span>(),logical_not<<span class="keyword">bool</span>>());</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">vector</span><<span class="keyword">bool</span>>::iterator it=v2.<span class="built_in">begin</span>();it!=v2.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">cout</span><<*it<<<span class="string">" "</span>;  </span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">55</span></span><br><span class="line"><span class="comment">-129</span></span><br><span class="line"><span class="comment">8 7 6 5 4 3 2 1 0</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test1();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>常用算法</p><p><img src="/[object%20Object]/2020/04/20/c++/7-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E5%92%8C%E6%8E%92%E5%BA%8F/image-20200325070307861.png" alt="image-20200325070307861"></p><p>常用的遍历算法</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for_each(begin,end,func)</span><br><span class="line">transform()</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/04/20/c++/7-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E5%92%8C%E6%8E%92%E5%BA%8F/image-20200325072344750.png" alt="image-20200325072344750"></p><p><img src="/[object%20Object]/2020/04/20/c++/7-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E5%92%8C%E6%8E%92%E5%BA%8F/image-20200325090358265.png" alt="image-20200325090358265"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><algorithm></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><vector></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">print1</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">int</span> val)</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<val<<<span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line">Person(<span class="built_in">string</span> name,<span class="keyword">int</span> age){</span><br><span class="line"><span class="keyword">this</span>->age=age;</span><br><span class="line"><span class="keyword">this</span>->name=name;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Person&p){ <span class="comment">//比较规则 </span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>->name==p.name&&<span class="keyword">this</span>->age==p.age){</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> val)</span></span>{</span><br><span class="line"><span class="built_in">cout</span><< val <<<span class="string">" "</span>; </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>{</span><br><span class="line"><span class="comment">// for_each</span></span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">9</span>;i++){</span><br><span class="line">v.push_back(i);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">for_each(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),<span class="built_in">print</span>); <span class="comment">//遍历</span></span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">for_each(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),print1()); <span class="comment">//遍历</span></span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//常用的查找算法</span></span><br><span class="line"><span class="comment">// find</span></span><br><span class="line"><span class="built_in">vector</span><Person> p;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="string">"12"</span>,<span class="number">32</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="string">"43"</span>,<span class="number">32</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(<span class="string">"45"</span>,<span class="number">32</span>)</span></span>;</span><br><span class="line">p.push_back(p1);</span><br><span class="line">p.push_back(p2);</span><br><span class="line">p.push_back(p3);</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>>::iterator it=<span class="built_in">find</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),<span class="number">5</span>); <span class="comment">// 必返回一个迭代器,如果没找到,就返回end </span></span><br><span class="line"><span class="built_in">cout</span><<*it<<<span class="built_in">endl</span>; </span><br><span class="line"><span class="built_in">vector</span><Person>::iterator itp=<span class="built_in">find</span>(p.<span class="built_in">begin</span>(),p.<span class="built_in">end</span>(),p1); <span class="comment">//查找自定义数据类型 </span></span><br><span class="line"><span class="built_in">cout</span><<itp->name<<<span class="string">" "</span><<itp->age<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">// find_if</span></span><br><span class="line"><span class="comment">// adjacent_find 查找相邻重复的元素</span></span><br><span class="line"><span class="comment">// binary_search 二分查找 返回值是true 和false  查找的元素必须为有序序列 </span></span><br><span class="line"><span class="built_in">cout</span><<binary_search(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),<span class="number">6</span>)<<<span class="built_in">endl</span>; </span><br><span class="line"><span class="comment">// count 统计 </span></span><br><span class="line"><span class="built_in">cout</span><<count(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),<span class="number">1</span>)<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">// count_if</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test1();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/04/20/c++/7-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E5%92%8C%E6%8E%92%E5%BA%8F/image-20200327005701055.png" alt="image-20200327005701055"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><vector></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><algorithm></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><ctime></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> val)</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<val<<<span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">9</span>;i++){</span><br><span class="line">v.push_back(i);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>>  v2;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">4</span>;i++){</span><br><span class="line">v2.push_back(i);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v3;</span><br><span class="line">v3.resize(v.<span class="built_in">size</span>()+v2.<span class="built_in">size</span>());</span><br><span class="line">merge(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),v2.<span class="built_in">begin</span>(),v2.<span class="built_in">end</span>(),v3.<span class="built_in">begin</span>()); <span class="comment">// merge 合并, 将两个容器合并放到第三个容器中. 且两个容器是有序的,合并后也是有序的 </span></span><br><span class="line">for_each(v3.<span class="built_in">begin</span>(),v3.<span class="built_in">end</span>(),<span class="built_in">print</span>);  </span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">reverse(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>());</span><br><span class="line">for_each(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),<span class="built_in">print</span>);</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">random_shuffle(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>()); <span class="comment">// random_shuffle 洗牌,将有序变无序 </span></span><br><span class="line">for_each(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),<span class="built_in">print</span>);</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>; </span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/04/20/c++/7-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E5%92%8C%E6%8E%92%E5%BA%8F/image-20200327163741378.png" alt="image-20200327163741378"></p><p>copy算法</p><p>replace替换,将所有相同的都替换</p><p>swap交换同种类型的容器</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// copy(v.begin(),v.end(),v2.begin()); copy </span></span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v;</span><br><span class="line">v.push_back(<span class="number">10</span>);</span><br><span class="line">v.push_back(<span class="number">23</span>);</span><br><span class="line">v.push_back(<span class="number">23</span>);</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v2;</span><br><span class="line">v2.resize(v.<span class="built_in">size</span>());</span><br><span class="line">copy(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),v2.<span class="built_in">begin</span>());</span><br><span class="line">for_each(v2.<span class="built_in">begin</span>(),v2.<span class="built_in">end</span>(),<span class="built_in">print</span>);</span><br><span class="line"><span class="comment">// replace;</span></span><br><span class="line">replace(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),<span class="number">23</span>,<span class="number">2000</span>);</span><br><span class="line">copy(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),v2.<span class="built_in">begin</span>());</span><br><span class="line">for_each(v2.<span class="built_in">begin</span>(),v2.<span class="built_in">end</span>(),<span class="built_in">print</span>);</span><br></pre></td></tr></tbody></table></figure><p>算术生成算法</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><vector></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><numeric> // 头文件 </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>>v;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<=<span class="number">100</span>;i++){</span><br><span class="line">v.push_back(i);</span><br><span class="line">}</span><br><span class="line"><span class="comment">// 第三个参数是累加起始值. </span></span><br><span class="line"><span class="built_in">cout</span><<accumulate(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),<span class="number">0</span>)<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">// fill() 填充新值</span></span><br><span class="line"><span class="comment">//fill()</span></span><br><span class="line"> </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>集合算法</p><p><img src="/[object%20Object]/2020/04/20/c++/7-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E5%92%8C%E6%8E%92%E5%BA%8F/image-20200327181910889.png" alt="image-20200327181910889"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><vector></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><algorithm></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> val)</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<val<<<span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v;</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v2;</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v3;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">10</span>;i++){</span><br><span class="line">v.push_back(i);</span><br><span class="line">v2.push_back(i+<span class="number">5</span>);</span><br><span class="line">} </span><br><span class="line">v3.resize(<span class="built_in">min</span>(v.<span class="built_in">size</span>(),v2.<span class="built_in">size</span>()));</span><br><span class="line"><span class="comment">// 交集 </span></span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>>::iterator it=set_intersection(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),v2.<span class="built_in">begin</span>(),v2.<span class="built_in">end</span>(),v3.<span class="built_in">begin</span>());</span><br><span class="line">for_each(v3.<span class="built_in">begin</span>(),it,<span class="built_in">print</span>); <span class="comment">// 注意 </span></span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>; </span><br><span class="line"><span class="comment">// 并集</span></span><br><span class="line">v3.resize(v.<span class="built_in">size</span>()+v2.<span class="built_in">size</span>());</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>>::iterator vit=set_union(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),v2.<span class="built_in">begin</span>(),v2.<span class="built_in">end</span>(),v3.<span class="built_in">begin</span>());</span><br><span class="line">for_each(v3.<span class="built_in">begin</span>(),vit,<span class="built_in">print</span>); <span class="comment">// 注意 </span></span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">// 补集</span></span><br><span class="line">v3.resize(<span class="built_in">max</span>(v.<span class="built_in">size</span>(),v2.<span class="built_in">size</span>()));</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>>::iterator vdit=set_difference(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),v2.<span class="built_in">begin</span>(),v2.<span class="built_in">end</span>(),v3.<span class="built_in">begin</span>());</span><br><span class="line">for_each(v3.<span class="built_in">begin</span>(),vdit,<span class="built_in">print</span>); <span class="comment">// 注意 </span></span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">v3.resize(<span class="built_in">max</span>(v.<span class="built_in">size</span>(),v2.<span class="built_in">size</span>()));</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>>::iterator vmaxit=set_difference(v2.<span class="built_in">begin</span>(),v2.<span class="built_in">end</span>(),v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),v3.<span class="built_in">begin</span>());</span><br><span class="line">for_each(v3.<span class="built_in">begin</span>(),vmaxit,<span class="built_in">print</span>); <span class="comment">// 注意 </span></span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">5 6 7 8 9</span></span><br><span class="line"><span class="comment">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14</span></span><br><span class="line"><span class="comment">0 1 2 3 4</span></span><br><span class="line"><span class="comment">10 11 12 13 14</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;函数对象&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/[object%20Object]/2020/04/20/c++/7-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E5%92%8C%E6%8E%92%E5%BA%8F/image-20200325053739130.png&quot; alt=&quot;image-20200325053739130&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="c++" scheme="http://philxling.cn/categories/c/"/>
    
    
      <category term="c++" scheme="http://philxling.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>员工分类案例</title>
    <link href="http://philxling.cn/[object%20Object]/2020/04/17/c++/6-%E5%91%98%E5%B7%A5%E5%88%86%E7%B1%BB%E6%A1%88%E4%BE%8B/"/>
    <id>http://philxling.cn/[object%20Object]/2020/04/17/c++/6-%E5%91%98%E5%B7%A5%E5%88%86%E7%B1%BB%E6%A1%88%E4%BE%8B/</id>
    <published>2020-04-17T15:24:57.000Z</published>
    <updated>2020-04-02T14:52:19.203Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h3 id="员工分类案例"><a href="#员工分类案例" class="headerlink" title="员工分类案例"></a>员工分类案例</h3><a id="more"></a><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><vector></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><map> </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><cstdio></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><cstdlib></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><ctime></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">有十个员工,将这些员工随机分配到每个岗位,然后输出每个岗位的人员信息</span></span><br><span class="line"><span class="comment">将10个人放在vector中,然后遍历vector将人随机分配到multimap的容器中</span></span><br><span class="line"><span class="comment">分部门显示员工信息</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Worker</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> Salary;</span><br><span class="line"><span class="comment">//Worker(string name,int Salary){</span></span><br><span class="line"><span class="comment">//this->name=name;</span></span><br><span class="line"><span class="comment">//this->Salary=Salary;</span></span><br><span class="line"><span class="comment">//}</span></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createWorker</span><span class="params">(<span class="built_in">vector</span><Worker> &worker)</span></span>{</span><br><span class="line"><span class="built_in">string</span> name_seed = <span class="string">"ABCDEFGHIJ"</span>; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">10</span>;i++){</span><br><span class="line">Worker w;</span><br><span class="line">w.name=<span class="string">"员工"</span>;</span><br><span class="line">w.name+=name_seed[i];</span><br><span class="line">w.Salary= rand()%<span class="number">10000</span>+<span class="number">10000</span>; <span class="comment">// 坑 , 一句还执行不了  worker.push_back(Worker("员工"+name_seed[i],rand()%10000+10000));</span></span><br><span class="line">worker.push_back(w); <span class="comment">// 10000-19999</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//for(vector<Worker>::iterator it=worker.begin();it!=Worker.end();it++){</span></span><br><span class="line"><span class="comment">//itWorker()</span></span><br><span class="line"><span class="comment">//}</span></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printVector</span><span class="params">(<span class="built_in">vector</span><Worker> &worker)</span></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">vector</span><Worker>::iterator it=worker.<span class="built_in">begin</span>();it!=worker.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"姓名:"</span><< it->name<<<span class="string">" "</span><<<span class="string">"工资:"</span><<it->Salary<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setGroup</span><span class="params">(<span class="built_in">vector</span><Worker> &worker,<span class="built_in">multimap</span><<span class="keyword">int</span>,Worker> &mworker)</span></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">vector</span><Worker>::iterator it=worker.<span class="built_in">begin</span>();it!=worker.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="keyword">int</span> dept = rand()%<span class="number">3</span>; <span class="comment">// 0 1 2 </span></span><br><span class="line">mworker.insert(make_pair(dept,*it));</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printMworker</span><span class="params">(<span class="built_in">multimap</span><<span class="keyword">int</span>,Worker>&worker)</span></span>{ <span class="comment">//  0 A B C  1 F G  2 D E </span></span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"美术--------------"</span><<<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">multimap</span><<span class="keyword">int</span>,Worker>::iterator it=worker.<span class="built_in">begin</span>();it!=worker.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="keyword">if</span>((*it).first==<span class="number">0</span>){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"姓名:"</span><< it->second.name<<<span class="string">" "</span><<<span class="string">"工资:"</span><< it->second.Salary<<<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">} </span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"设计--------------"</span><<<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">multimap</span><<span class="keyword">int</span>,Worker>::iterator it=worker.<span class="built_in">begin</span>();it!=worker.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="keyword">if</span>((*it).first==<span class="number">1</span>){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"姓名:"</span><< it->second.name<<<span class="string">" "</span><<<span class="string">"工资:"</span><< it->second.Salary<<<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">} </span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"开发---------------"</span><<<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">multimap</span><<span class="keyword">int</span>,Worker>::iterator it=worker.<span class="built_in">begin</span>();it!=worker.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="keyword">if</span>((*it).first==<span class="number">2</span>){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"姓名:"</span><< it->second.name<<<span class="string">" "</span><<<span class="string">"工资:"</span><< it->second.Salary<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">int</span> )time(<span class="literal">NULL</span>));</span><br><span class="line"><span class="built_in">vector</span><Worker> vWorker;</span><br><span class="line">createWorker(vWorker);</span><br><span class="line">printVector(vWorker);</span><br><span class="line"><span class="comment">// 员工分组</span></span><br><span class="line"><span class="built_in">multimap</span><<span class="keyword">int</span>,Worker> mWorker;</span><br><span class="line">setGroup(vWorker,mWorker);</span><br><span class="line">printMworker(mWorker);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">姓名:员工A 工资:15799</span></span><br><span class="line"><span class="comment">姓名:员工B 工资:19029</span></span><br><span class="line"><span class="comment">姓名:员工C 工资:14589</span></span><br><span class="line"><span class="comment">姓名:员工D 工资:11870</span></span><br><span class="line"><span class="comment">姓名:员工E 工资:11106</span></span><br><span class="line"><span class="comment">姓名:员工F 工资:16145</span></span><br><span class="line"><span class="comment">姓名:员工G 工资:12290</span></span><br><span class="line"><span class="comment">姓名:员工H 工资:15171</span></span><br><span class="line"><span class="comment">姓名:员工I 工资:13026</span></span><br><span class="line"><span class="comment">姓名:员工J 工资:19923</span></span><br><span class="line"><span class="comment">美术--------------</span></span><br><span class="line"><span class="comment">姓名:员工B 工资:19029</span></span><br><span class="line"><span class="comment">姓名:员工C 工资:14589</span></span><br><span class="line"><span class="comment">姓名:员工D 工资:11870</span></span><br><span class="line"><span class="comment">姓名:员工F 工资:16145</span></span><br><span class="line"><span class="comment">设计--------------</span></span><br><span class="line"><span class="comment">姓名:员工A 工资:15799</span></span><br><span class="line"><span class="comment">姓名:员工E 工资:11106</span></span><br><span class="line"><span class="comment">姓名:员工J 工资:19923</span></span><br><span class="line"><span class="comment">开发---------------</span></span><br><span class="line"><span class="comment">姓名:员工G 工资:12290</span></span><br><span class="line"><span class="comment">姓名:员工H 工资:15171</span></span><br><span class="line"><span class="comment">姓名:员工I 工资:13026</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;员工分类案例&quot;&gt;&lt;a href=&quot;#员工分类案例&quot; class=&quot;headerlink&quot; title=&quot;员工分类案例&quot;&gt;&lt;/a&gt;员工分类案例&lt;/h3&gt;
    
    </summary>
    
    
      <category term="c++" scheme="http://philxling.cn/categories/c/"/>
    
    
      <category term="c++" scheme="http://philxling.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>容器</title>
    <link href="http://philxling.cn/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/"/>
    <id>http://philxling.cn/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/</id>
    <published>2020-04-15T15:20:00.000Z</published>
    <updated>2020-04-02T14:51:46.418Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h3 id="vector容器"><a href="#vector容器" class="headerlink" title="vector容器"></a>vector容器</h3><p>vector存放自定义类型数据</p><a id="more"></a><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><vector></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><algorithm></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(<span class="keyword">int</span> age,<span class="built_in">string</span> name){</span><br><span class="line"><span class="keyword">this</span>->age=age;</span><br><span class="line"><span class="keyword">this</span>->name=name;</span><br><span class="line">} </span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">12</span>,<span class="string">"java"</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">13</span>,<span class="string">"c++"</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(<span class="number">1</span>,<span class="string">"c"</span>)</span></span>;</span><br><span class="line"><span class="built_in">vector</span><Person*> v;</span><br><span class="line">v.push_back(&p1);</span><br><span class="line">v.push_back(&p2);</span><br><span class="line">v.push_back(&p3);</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">vector</span><Person*>::iterator it=v.<span class="built_in">begin</span>();it!=v.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">cout</span><<(*it)->age<<(*it)->name<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>string容器</p><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20191219202604459.png" alt="image-20191219202604459"></p><p>string赋值</p><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20191219203111427.png" alt="image-20191219203111427"></p><p>string拼接</p><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20191219203050386.png" alt="image-20191219203050386"></p><p>容器嵌套容器</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><vector></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">vector</span><<span class="built_in">vector</span><<span class="keyword">int</span>> >v; <span class="comment">//这里右边>>必须分开写 </span></span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v1;</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v2;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">4</span>;i++){</span><br><span class="line">v1.push_back(i);</span><br><span class="line">v2.push_back(i+<span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line">v.push_back(v1);</span><br><span class="line">v.push_back(v2);</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">vector</span><<span class="built_in">vector</span><<span class="keyword">int</span>> >::iterator it = v.<span class="built_in">begin</span>();it!=v.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="comment">// *it 指的是vector<int></span></span><br><span class="line"><span class="comment">//再次遍历</span></span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">vector</span><<span class="keyword">int</span>>::iterator vit=(*it).<span class="built_in">begin</span>();vit!=(*it).<span class="built_in">end</span>();vit++){</span><br><span class="line"><span class="built_in">cout</span><<*(vit)<<<span class="string">" "</span>;</span><br><span class="line">} </span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>string字符串拼接</p><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20200321163725406.png" alt="image-20200321163725406"></p><p>string 查找和替换</p><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20200321163810944.png" alt="image-20200321163810944"></p><p>注意替换replace(),三个参数是指从第几个开始,替换几个,会将新的字符串全部加进去</p><p>如</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> str=<span class="string">"cd"</span>;</span><br><span class="line">str.replace(<span class="number">1</span>,<span class="number">3</span>,<span class="string">"dasdddas"</span>)</span><br><span class="line"> <span class="comment">// cdasdddas</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><iostream> </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">string</span> str=<span class="string">"hello"</span>;</span><br><span class="line">str.append(<span class="string">"world"</span>); <span class="comment">//添加 </span></span><br><span class="line">str+=<span class="string">"i"</span>;</span><br><span class="line"><span class="built_in">string</span> str1=<span class="string">"cdwewewf"</span>;</span><br><span class="line">str1.replace(<span class="number">1</span>,<span class="number">3</span>,<span class="string">"das"</span>); <span class="comment">//字符替换 </span></span><br><span class="line"><span class="built_in">cout</span><<str1;</span><br><span class="line"><span class="built_in">string</span> str3=<span class="string">"hello"</span>;</span><br><span class="line"><span class="built_in">string</span> str2=<span class="string">"xello"</span> ;</span><br><span class="line"><span class="keyword">if</span>(str3.compare(str2)==<span class="number">0</span>){ <span class="comment">//字符串比较 </span></span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"相等"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"不相等"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//string字符存取</span></span><br><span class="line"><span class="built_in">string</span> str4=<span class="string">"hello"</span>;</span><br><span class="line"><span class="comment">//访问字符</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<str4.<span class="built_in">size</span>();i++){</span><br><span class="line"><span class="built_in">cout</span><<str4[i]<<<span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<str4.<span class="built_in">size</span>();i++){</span><br><span class="line"><span class="built_in">cout</span><<str4.at(i)<<<span class="string">" "</span>;</span><br><span class="line">} </span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">// string 插入删除</span></span><br><span class="line"><span class="comment">// insert()</span></span><br><span class="line"><span class="comment">// erase(int pos,int n=npos);</span></span><br><span class="line">str2.erase(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">cout</span><<str2<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">// 子串</span></span><br><span class="line"><span class="comment">// substr(int pos,int n=npos)</span></span><br><span class="line"> <span class="built_in">string</span> str5=str3.substr(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"> <span class="built_in">cout</span><<str5<<<span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="built_in">string</span> email = <span class="string">"zhangsan@sina.com"</span>; <span class="comment">//截取邮箱 </span></span><br><span class="line"> <span class="keyword">int</span> pos = email.<span class="built_in">find</span>(<span class="string">"@"</span>);</span><br><span class="line"> <span class="built_in">cout</span><<email.substr(<span class="number">0</span>,pos)<<<span class="built_in">endl</span>;</span><br><span class="line">} </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    test();</span><br><span class="line">    </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>vector 容器 动态扩展</p><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20200321214940482.png" alt="image-20200321214940482"></p><p>vector赋值操作</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><vector></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printVector</span><span class="params">(<span class="built_in">vector</span><<span class="keyword">int</span>> &v)</span></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">vector</span><<span class="keyword">int</span>>::iterator it=v.<span class="built_in">begin</span>();it!=v.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">cout</span><<*it<<<span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v1;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">4</span>;i++){</span><br><span class="line">v1.push_back(i);</span><br><span class="line">}</span><br><span class="line">printVector(v1);</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v2;</span><br><span class="line">v2=v1; <span class="comment">//拷贝构造 </span></span><br><span class="line">printVector(v2);</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v3;</span><br><span class="line">v3.assign(v1.<span class="built_in">begin</span>(),v1.<span class="built_in">end</span>());</span><br><span class="line">printVector(v3);</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v4;</span><br><span class="line">v4.assign(<span class="number">10</span>,<span class="number">100</span>); <span class="comment">//赋值 </span></span><br><span class="line">printVector(v4);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>vector容量和大小</p><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20200321220704981.png" alt="image-20200321220704981"></p><p>插入和删除</p><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20200321211635313.png" alt="image-20200321211635313"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><vector></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printVector</span><span class="params">(<span class="built_in">vector</span><<span class="keyword">int</span>>&v)</span></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">vector</span><<span class="keyword">int</span>>::iterator it=v.<span class="built_in">begin</span>();it!=v.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">cout</span><<*it<<<span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v1;</span><br><span class="line"><span class="built_in">cout</span><<v1.capacity()<<<span class="built_in">endl</span>;<span class="comment">// 为空的时候 容量为0 </span></span><br><span class="line">v1.push_back(<span class="number">1</span>);</span><br><span class="line">v1.push_back(<span class="number">2</span>);</span><br><span class="line">v1.push_back(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">cout</span><<v1.capacity()<<<span class="built_in">endl</span>;<span class="comment">//</span></span><br><span class="line"> <span class="comment">// 插入和删除</span></span><br><span class="line"><span class="comment">// 尾删</span></span><br><span class="line">printVector(v1);</span><br><span class="line">v1.pop_back();</span><br><span class="line">printVector(v1);</span><br><span class="line"><span class="comment">// insert()</span></span><br><span class="line">v1.insert(v1.<span class="built_in">begin</span>(),<span class="number">100</span>);</span><br><span class="line">printVector(v1);</span><br><span class="line">v1.insert(v1.<span class="built_in">begin</span>(),<span class="number">2</span>,<span class="number">1000</span>);</span><br><span class="line">printVector(v1);</span><br><span class="line">v1.erase(v1.<span class="built_in">begin</span>());</span><br><span class="line">printVector(v1);</span><br><span class="line">v1.erase(v1.<span class="built_in">begin</span>(),v1.<span class="built_in">end</span>()); <span class="comment">//相等于清空 </span></span><br><span class="line">printVector(v1);</span><br><span class="line">v1.<span class="built_in">clear</span>(); <span class="comment">//清空 </span></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20200321213530726.png" alt="image-20200321213530726"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><vector></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printVector</span><span class="params">(<span class="built_in">vector</span><<span class="keyword">int</span>> &v1)</span></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">vector</span><<span class="keyword">int</span>>::iterator it=v1.<span class="built_in">begin</span>();it!=v1.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">cout</span><<*it<<<span class="string">" "</span>; </span><br><span class="line">} </span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v1;</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v2;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">10</span>;i++){</span><br><span class="line">v1.push_back(i);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i><span class="number">0</span>;i--){</span><br><span class="line">v2.push_back(i);</span><br><span class="line">}</span><br><span class="line"><span class="comment">//cout<<*v1<<endl; // 不被允许 </span></span><br><span class="line"><span class="comment">// 数组方式遍历vector</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<v1.<span class="built_in">size</span>();i++){</span><br><span class="line"><span class="built_in">cout</span><<v1[i]<<<span class="string">" "</span>;</span><br><span class="line">} </span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<v1.<span class="built_in">size</span>();i++){</span><br><span class="line"><span class="built_in">cout</span><<v1.at(i)<<<span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">// 获取第一个元素</span></span><br><span class="line"><span class="built_in">cout</span><<v1.front()<<<span class="built_in">endl</span>; </span><br><span class="line"><span class="comment">//互换容器</span></span><br><span class="line">v1.swap(v2);</span><br><span class="line">printVector(v1);</span><br><span class="line">printVector(v2);</span><br><span class="line"> <span class="comment">// 实际用途,收缩内存空间 </span></span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v4;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用reserve预留空间,可以减少内存开辟次数</span></span><br><span class="line">v4.reserve(<span class="number">100000</span>); </span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>; </span><br><span class="line"><span class="keyword">int</span> *p=<span class="literal">NULL</span>;  </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">100000</span>;i++){</span><br><span class="line"> v4.push_back(i);</span><br><span class="line"> <span class="keyword">if</span>(p!=&v4[<span class="number">0</span>]){</span><br><span class="line"> p=&v4[<span class="number">0</span>];</span><br><span class="line"> num++;</span><br><span class="line"> }</span><br><span class="line">} </span><br><span class="line"><span class="built_in">cout</span><<num<<<span class="built_in">endl</span>; <span class="comment">//num 用来统计开辟了多少次内存  18 次 </span></span><br><span class="line"><span class="built_in">cout</span><<v4.capacity()<<<span class="built_in">endl</span>;</span><br><span class="line">v4.resize(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>>(v4).swap(v4); <span class="comment">//匿名对象 ,回收内存 </span></span><br><span class="line"><span class="built_in">cout</span><<v4.capacity()<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">// 预留空间</span></span><br><span class="line"> </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>deque 双端数组</p><p>与vector的区别</p><p>vector对于头部的插入删除效率低,数据量越大,效率越低</p><p>deque相对而言,对头部的插入删除速度比vector快</p><p>vector访问元素的速度会比deque快</p><p>deque内部工作原理,deque内部有中控器,维护每段缓冲区的内容,缓冲区中存放真实数据</p><p>中控器维护的是每一个缓冲区的地址,是的每个deque像一片连续的地址</p><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20200321220121820.png" alt="image-20200321220121820"></p><p>注意: deque没有容量的概念</p><p>判断为空—empty</p><p>返回元素个数—-size</p><p>重新指定个数—-resize</p><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20200321211749654.png" alt="image-20200321211749654"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><deque></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><algorithm></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">// deque容器的插入和删除 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printDeque</span><span class="params">(<span class="keyword">const</span> <span class="built_in">deque</span><<span class="keyword">int</span>>&d)</span></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">deque</span><<span class="keyword">int</span>>::const_iterator it=d.<span class="built_in">begin</span>();it!=d.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">cout</span><<*it<<<span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">deque</span><<span class="keyword">int</span>> d;</span><br><span class="line">d.push_back(<span class="number">12</span>);</span><br><span class="line">d.push_back(<span class="number">100</span>);</span><br><span class="line">d.push_front(<span class="number">120</span>);</span><br><span class="line">printDeque(d);</span><br><span class="line"><span class="comment">// 尾删</span></span><br><span class="line">d.pop_back();</span><br><span class="line">d.pop_front();</span><br><span class="line">printDeque(d);</span><br><span class="line"><span class="comment">// 指定位置插入删除</span></span><br><span class="line">d.insert(d.<span class="built_in">begin</span>(),<span class="number">10000</span>);</span><br><span class="line">printDeque(d); </span><br><span class="line"><span class="comment">// 在指定区间</span></span><br><span class="line"><span class="built_in">deque</span><<span class="keyword">int</span>> d2;</span><br><span class="line">d2.push_back(<span class="number">1</span>);</span><br><span class="line">d2.push_back(<span class="number">2</span>);</span><br><span class="line">d2.push_back(<span class="number">3</span>);</span><br><span class="line"><span class="comment">// </span></span><br><span class="line">d.insert(d.<span class="built_in">begin</span>(),d2.<span class="built_in">begin</span>(),d2.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">printDeque(d); </span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line">d.erase(d.<span class="built_in">begin</span>());</span><br><span class="line"><span class="built_in">deque</span><<span class="keyword">int</span>>::iterator it=d.<span class="built_in">begin</span>();</span><br><span class="line">it++;</span><br><span class="line">d.erase(it); </span><br><span class="line">printDeque(d);</span><br><span class="line">sort(d.<span class="built_in">begin</span>(),d.<span class="built_in">end</span>()); <span class="comment">// 排序算法</span></span><br><span class="line">printDeque(d);</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">120 12 100</span></span><br><span class="line"><span class="comment">12</span></span><br><span class="line"><span class="comment">10000 12</span></span><br><span class="line"><span class="comment">1 2 3 10000 12</span></span><br><span class="line"><span class="comment">2 10000 12</span></span><br><span class="line"><span class="comment">2 12 10000</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>案例</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><deque></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><vector></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><algorithm></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><ctime></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> score;</span><br><span class="line">Person(<span class="built_in">string</span> name,<span class="keyword">int</span> score){</span><br><span class="line"><span class="keyword">this</span>->name=name;</span><br><span class="line"><span class="keyword">this</span>->score=score;</span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">const</span> <span class="built_in">vector</span><Person>&v)</span></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">vector</span><Person>::const_iterator it=v.<span class="built_in">begin</span>();it!=v.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">cout</span><<(*it).name<<<span class="string">":"</span><<<span class="string">"分数"</span><<(*it).score<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createPerson</span><span class="params">(<span class="built_in">vector</span><Person> &v)</span></span>{</span><br><span class="line"><span class="built_in">string</span> stringSeed=<span class="string">"ABCDE"</span>;</span><br><span class="line"><span class="keyword">int</span> score=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">5</span>;i++){</span><br><span class="line"><span class="built_in">string</span> name =<span class="string">"选手"</span>;</span><br><span class="line">name+=stringSeed[i];</span><br><span class="line"><span class="function">Person <span class="title">p</span><span class="params">(name,score)</span></span>;</span><br><span class="line">v.push_back(p); <span class="comment">//创建5名对象 </span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setScore</span><span class="params">(<span class="built_in">vector</span><Person>&v)</span></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">vector</span><Person>::iterator it=v.<span class="built_in">begin</span>();it!=v.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">deque</span><<span class="keyword">int</span>> d;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">10</span>;i++){</span><br><span class="line"><span class="keyword">int</span> score=rand()%<span class="number">41</span>+<span class="number">60</span>; <span class="comment">//60-100</span></span><br><span class="line">d.push_back(score);</span><br><span class="line"><span class="built_in">cout</span><<(*it).name<<<span class="string">":"</span><<score<<<span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">sort(d.<span class="built_in">begin</span>(),d.<span class="built_in">end</span>()); <span class="comment">// 排序</span></span><br><span class="line">d.pop_front();</span><br><span class="line">d.pop_back(); <span class="comment">//去掉分数</span></span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">deque</span><<span class="keyword">int</span>>::iterator it=d.<span class="built_in">begin</span>();it!=d.<span class="built_in">end</span>();it++){</span><br><span class="line">sum+=*it;</span><br><span class="line">}</span><br><span class="line">(*it).score=sum/d.<span class="built_in">size</span>();</span><br><span class="line">}</span><br><span class="line">} </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="comment">//随机数种子</span></span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>)); </span><br><span class="line"><span class="comment">// 创建5名选手</span></span><br><span class="line"><span class="built_in">vector</span><Person> v;</span><br><span class="line">createPerson(v);</span><br><span class="line"><span class="comment">// 给5名选手打分</span></span><br><span class="line">setScore(v);</span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="built_in">print</span>(v);</span><br><span class="line"><span class="built_in">cout</span><<rand()<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>stack容器</p><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20200322014757939.png" alt="image-20200322014757939"></p><p>queue容器</p><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20200322015602691.png" alt="image-20200322015602691"></p><p>list容器</p><p>list赋值和交换</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><list></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printList</span><span class="params">(<span class="keyword">const</span> <span class="built_in">list</span><<span class="keyword">int</span>>&L)</span></span>{</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">list</span><<span class="keyword">int</span>>::const_iterator it=L.<span class="built_in">begin</span>();it!=L.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">cout</span><<*it<<<span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">} </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">list</span><<span class="keyword">int</span>> L1;</span><br><span class="line"><span class="built_in">list</span><<span class="keyword">int</span>> L2;</span><br><span class="line">L1.push_back(<span class="number">100</span>);</span><br><span class="line">L1.push_back(<span class="number">20</span>);</span><br><span class="line">L1.push_back(<span class="number">12</span>);</span><br><span class="line">L2.assign(<span class="number">10</span>,<span class="number">100</span>);</span><br><span class="line">printList(L1);</span><br><span class="line">printList(L2);</span><br><span class="line">L1.swap(L2); <span class="comment">//交换 </span></span><br><span class="line">printList(L1);</span><br><span class="line">printList(L2);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20200324233345500.png" alt="image-20200324233345500"></p><p>list排序案例</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><list></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">// list 容器的排序案例 </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">height</span>;</span><br><span class="line">Person(<span class="built_in">string</span> name,<span class="keyword">int</span> age, <span class="keyword">int</span> <span class="built_in">height</span>){</span><br><span class="line"><span class="keyword">this</span>->name=name;</span><br><span class="line"><span class="keyword">this</span>->age=age;</span><br><span class="line"><span class="keyword">this</span>-><span class="built_in">height</span>=<span class="built_in">height</span>;</span><br><span class="line">}</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printPerson</span><span class="params">(<span class="keyword">const</span> <span class="built_in">list</span><Person>&L)</span></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">list</span><Person>::const_iterator it=L.<span class="built_in">begin</span>();it!=L.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">cout</span><<(*it).name<<<span class="string">" "</span><<(*it).age<<<span class="string">" "</span><<(*it).<span class="built_in">height</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">myCompare</span><span class="params">(Person &p1, Person &p2 )</span></span>{ <span class="comment">// 自定义数据类型的排序规则 </span></span><br><span class="line"><span class="keyword">if</span>(p1.age==p2.age){</span><br><span class="line"><span class="keyword">return</span> p1.<span class="built_in">height</span><p2.<span class="built_in">height</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> p1.age<p2.age;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">list</span><Person> L;</span><br><span class="line">L.push_back(Person(<span class="string">"zhangsan"</span>,<span class="number">23</span>,<span class="number">180</span>));</span><br><span class="line">L.push_back(Person(<span class="string">"lisi"</span>,<span class="number">43</span>,<span class="number">290</span>));</span><br><span class="line">L.push_back(Person(<span class="string">"wangwu"</span>,<span class="number">43</span>,<span class="number">90</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 容器用年龄排序,如果年龄相同,用身高排序</span></span><br><span class="line">printPerson(L);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">L.sort(myCompare);</span><br><span class="line"></span><br><span class="line">printPerson(L);</span><br><span class="line">} </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>set集合(没有重复元素,并且自动排序)</p><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20200325004617027.png" alt="image-20200325004617027"></p><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20200325011034860.png" alt="image-20200325011034860"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><set></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printSet</span><span class="params">(<span class="keyword">const</span> <span class="built_in">set</span><<span class="keyword">int</span>> &s)</span></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">set</span><<span class="keyword">int</span>>::const_iterator it=s.<span class="built_in">begin</span>();it!=s.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">cout</span><<*it<<<span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">} </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">set</span><<span class="keyword">int</span>> s;</span><br><span class="line">s.insert(<span class="number">23</span>);</span><br><span class="line">s.insert(<span class="number">43</span>);</span><br><span class="line">printSet(s);</span><br><span class="line"><span class="comment">// find 返回迭代器</span></span><br><span class="line"><span class="keyword">if</span>(s.<span class="built_in">find</span>(<span class="number">43</span>)!=s.<span class="built_in">end</span>()){</span><br><span class="line"><span class="built_in">cout</span><<*(s.<span class="built_in">find</span>(<span class="number">43</span>))<<<span class="built_in">endl</span>; <span class="comment">// 返回迭代器 *(s.find(23))</span></span><br><span class="line">} </span><br><span class="line"><span class="built_in">cout</span><<s.count(<span class="number">23</span>)<<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>pair对组(和元组很像)</p><p>paie的创建方式</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pair<<span class="built_in">string</span>,<span class="keyword">int</span>>p(<span class="string">"tom"</span>,<span class="number">23</span>);</span><br><span class="line">pair<<span class="built_in">string</span>,<span class="keyword">int</span>> p2 =make_pair(<span class="string">"zhangsan"</span>,<span class="number">43</span>);</span><br></pre></td></tr></tbody></table></figure><p>利用仿函数重载排序规则</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">compare</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">int</span> v1,<span class="keyword">int</span> v2)</span></span>{</span><br><span class="line"><span class="keyword">return</span> v1>v2;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">};</span><br><span class="line"><span class="built_in">set</span><<span class="keyword">int</span>,compare> s;</span><br><span class="line">s.insert(<span class="number">23</span>);</span><br><span class="line">s.insert(<span class="number">43</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">set</span><<span class="keyword">int</span>,compare>::iterator it=s.<span class="built_in">begin</span>();it!=s.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">cout</span><<*it<<<span class="string">" "</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>map容器(高效率)(会按照key排序)</p><p><img src="/[object%20Object]/2020/04/15/c++/5-%E5%AE%B9%E5%99%A8/image-20200325015540130.png" alt="image-20200325015540130"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">map</span><<span class="built_in">string</span>,<span class="keyword">int</span>> m;</span><br><span class="line">m.insert(pair<<span class="built_in">string</span>,<span class="keyword">int</span>>(<span class="string">"zhangsan"</span>,<span class="number">23</span>));</span><br><span class="line">m.insert(pair<<span class="built_in">string</span>,<span class="keyword">int</span>>(<span class="string">"lisi"</span>,<span class="number">34</span>));</span><br><span class="line">m.insert(pair<<span class="built_in">string</span>,<span class="keyword">int</span>>(<span class="string">"wangwu"</span>,<span class="number">343</span>));</span><br><span class="line">m.insert(make_pair(<span class="string">"wangmazi"</span>,<span class="number">89</span>));</span><br><span class="line">m.insert(<span class="built_in">map</span><<span class="built_in">string</span>,<span class="keyword">int</span>>::value_type(<span class="string">"啦啦啦"</span>,<span class="number">43</span>));</span><br><span class="line"><span class="built_in">cout</span><<m[<span class="string">"zhangsan"</span>]<<<span class="built_in">endl</span>; <span class="comment">// 中括号适合访问,不适合插入</span></span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">map</span><<span class="built_in">string</span>,<span class="keyword">int</span>>::iterator it=m.<span class="built_in">begin</span>();it!=m.<span class="built_in">end</span>();it++){</span><br><span class="line"><span class="built_in">cout</span><<it->first<<it->second<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;vector容器&quot;&gt;&lt;a href=&quot;#vector容器&quot; class=&quot;headerlink&quot; title=&quot;vector容器&quot;&gt;&lt;/a&gt;vector容器&lt;/h3&gt;&lt;p&gt;vector存放自定义类型数据&lt;/p&gt;
    
    </summary>
    
    
      <category term="c++" scheme="http://philxling.cn/categories/c/"/>
    
    
      <category term="c++" scheme="http://philxling.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>继承和多态</title>
    <link href="http://philxling.cn/[object%20Object]/2020/04/10/c++/4-%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/"/>
    <id>http://philxling.cn/[object%20Object]/2020/04/10/c++/4-%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/</id>
    <published>2020-04-10T15:15:56.000Z</published>
    <updated>2020-04-02T14:51:03.383Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>继承的构造和析构的循序:先父类再子类,然后子类析构父类析构</p><p>访问同名的成员变量需要加作用域其为:</p><a id="more"></a><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line">Base(){</span><br><span class="line">a=<span class="number">100</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"父类同名函数"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> a)</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"父类同名函数"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line">}; </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span><span class="keyword">public</span> Base{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">A(){</span><br><span class="line">a=<span class="number">23</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"子类同名函数"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>:</span><span class="keyword">protected</span> Base{</span><br><span class="line">}; </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span><span class="keyword">private</span> Base{</span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line">A a1;</span><br><span class="line"><span class="built_in">cout</span><<a1.a<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span><<a1.Base::a<<<span class="built_in">endl</span>;</span><br><span class="line">a1.fun();</span><br><span class="line">a1.Base::fun();</span><br><span class="line"><span class="comment">//若想访问到父类的同名成员函数加作用域 </span></span><br><span class="line">a1.Base::fun(<span class="number">1000</span>); </span><br><span class="line">    <span class="comment">//访问静态成员</span></span><br><span class="line">    <span class="comment">//子类::父类::静态变量;表示通过类名访问父类作用域下的静态变量</span></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>多继承</p><p>子类:继承方式 父类,继承方式 父类…</p><p>菱形继承问题</p><p><img src="/[object%20Object]/2020/04/10/c++/4-%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/image-20191117222518708.png" alt="image-20191117222518708"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span><span class="keyword">virtual</span> <span class="keyword">public</span> Base{</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>:</span><span class="keyword">virtual</span> <span class="keyword">public</span> Base{</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span><span class="keyword">public</span> A,<span class="keyword">public</span> B{</span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line">C c;</span><br><span class="line">c.age=<span class="number">100</span>;</span><br><span class="line">c.age=<span class="number">23</span>;</span><br><span class="line"><span class="built_in">cout</span><<c.age<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><p>多态的条件: 1 继承 2 子类覆写父类的方法 </p><p>使用 父类的引用指向子类的对象</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Annimal</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span>{ <span class="comment">//虚函数实现多态</span></span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"动物在说话"</span><<<span class="built_in">endl</span>;</span><br><span class="line">} </span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span><span class="keyword">public</span> Annimal{</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"小猫在说话"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line">}; </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>:</span><span class="keyword">public</span> Annimal{</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"小狗在说话"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line">}; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">doSpeak</span><span class="params">(Annimal &annimal)</span></span>{</span><br><span class="line">annimal.speak();</span><br><span class="line">} </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line">Cat cat;</span><br><span class="line">doSpeak(cat);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>纯虚函数和抽象类</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span>=<span class="number">0</span>;有了纯虚函数我们城为抽象类,无法实例化对象</span><br><span class="line">子类必须重写父类的方法;</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AbstractDrinking</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//煮水 </span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Boil</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//冲泡</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Brew</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//倒入杯中</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PourInCup</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//加料 </span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PutSomething</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">makeDrink</span><span class="params">()</span></span>{</span><br><span class="line">Boil();</span><br><span class="line">Brew();</span><br><span class="line">PourInCup();</span><br><span class="line">PutSomething();</span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coffee</span>:</span><span class="keyword">public</span> AbstractDrinking{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//煮水 </span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Boil</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"煮水"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="comment">//冲泡</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Brew</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"冲泡"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="comment">//倒入杯中</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PourInCup</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"导入杯中"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="comment">//加料 </span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PutSomething</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"加料"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line">}; </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tea</span>:</span><span class="keyword">public</span> AbstractDrinking{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//煮水 </span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Boil</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"煮水"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="comment">//冲泡</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Brew</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"冲泡茶叶"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="comment">//倒入杯中</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PourInCup</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"导入杯中"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="comment">//加料 </span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PutSomething</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"加料"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line">}; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">doWork</span><span class="params">(AbstractDrinking *<span class="built_in">abs</span>)</span></span>{</span><br><span class="line"><span class="built_in">abs</span>->makeDrink();</span><br><span class="line"><span class="keyword">delete</span> <span class="built_in">abs</span>; </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line">doWork(<span class="keyword">new</span> Coffee);</span><br><span class="line">doWork(<span class="keyword">new</span> Tea);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>纯虚析构需要声明也需要实现</p><p><img src="/[object%20Object]/2020/04/10/c++/4-%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/image-20191121160323393.png" alt="image-20191121160323393"></p><p><img src="/[object%20Object]/2020/04/10/c++/4-%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/image-20191121160358800.png" alt="image-20191121160358800"></p><p><img src="/[object%20Object]/2020/04/10/c++/4-%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/image-20191121160431500.png" alt="image-20191121160431500"></p><p><img src="/[object%20Object]/2020/04/10/c++/4-%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/image-20191121160500114.png" alt="image-20191121160500114"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cpu</span>{</span></span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">caculate</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VideoCard</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Memory</span>{</span></span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">storage</span><span class="params">()</span></span>=<span class="number">0</span>; </span><br><span class="line">}; </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Computer</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Computer(Cpu *cpu,VideoCard *videoCard,Memory *memory){</span><br><span class="line"><span class="keyword">this</span>->cpu=cpu;</span><br><span class="line"><span class="keyword">this</span>->videoCard=videoCard;</span><br><span class="line"><span class="keyword">this</span>->memory=memory;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Work</span><span class="params">()</span></span>{</span><br><span class="line">cpu->caculate();</span><br><span class="line">videoCard-><span class="built_in">display</span>();</span><br><span class="line">memory->storage();</span><br><span class="line">}</span><br><span class="line">~Computer(){</span><br><span class="line"><span class="keyword">if</span>(cpu!=<span class="literal">NULL</span>){</span><br><span class="line"><span class="keyword">delete</span> cpu;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(videoCard!=<span class="literal">NULL</span>){</span><br><span class="line"><span class="keyword">delete</span> videoCard;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(memory!=<span class="literal">NULL</span>){</span><br><span class="line"><span class="keyword">delete</span> memory;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Cpu *cpu;</span><br><span class="line">VideoCard *videoCard;</span><br><span class="line">Memory *memory;</span><br><span class="line"></span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntelCpu</span>:</span><span class="keyword">public</span> Cpu{</span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">caculate</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"Intel的cpu"</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntelVideoCard</span>:</span><span class="keyword">public</span> VideoCard{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"Intel的显示器"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntelMemory</span>:</span><span class="keyword">public</span> Memory{</span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">storage</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"Intel的内存"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LenovoCpu</span>:</span><span class="keyword">public</span> Cpu{</span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">caculate</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"Lenovo的cpu"</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LenovoVideoCard</span>:</span><span class="keyword">public</span> VideoCard{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"Lenovo的显示器"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LenovoMemory</span>:</span><span class="keyword">public</span> Memory{</span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">storage</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"Lenovo的内存"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line">Computer *com=<span class="keyword">new</span> Computer(<span class="keyword">new</span> IntelCpu,<span class="keyword">new</span> LenovoVideoCard,<span class="keyword">new</span> IntelMemory);</span><br><span class="line">com->Work();</span><br><span class="line"><span class="keyword">delete</span> com; </span><br><span class="line">} </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>文件操作</p><p><img src="/[object%20Object]/2020/04/10/c++/4-%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/image-20191121164144152.png" alt="image-20191121164144152"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><fstream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">()</span></span>{</span><br><span class="line">ofstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(<span class="string">"test.txt"</span>,ios::app);</span><br><span class="line">ofs<<<span class="string">"张三"</span><<<span class="built_in">endl</span>;</span><br><span class="line">ofs<<<span class="string">"李四"</span><<<span class="built_in">endl</span>;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line">} </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>{</span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(<span class="string">"test.txt"</span>,ios::in);</span><br><span class="line"><span class="keyword">if</span>(!ifs.is_open()){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"文件打开失败"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="comment">//四种方式读取</span></span><br><span class="line"><span class="comment">//1</span></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">1024</span>]={<span class="number">0</span>};</span><br><span class="line"><span class="keyword">while</span>(ifs>>buf){</span><br><span class="line"><span class="built_in">cout</span><<buf<<<span class="built_in">endl</span>;</span><br><span class="line">} </span><br><span class="line"><span class="comment">//2</span></span><br><span class="line"><span class="keyword">char</span> buf2[<span class="number">1024</span>]={<span class="number">0</span>};</span><br><span class="line"><span class="keyword">while</span>(ifs.getline(buf2,<span class="keyword">sizeof</span>(buf2))){</span><br><span class="line"><span class="built_in">cout</span><<buf2<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//3</span></span><br><span class="line"><span class="built_in">string</span> <span class="built_in">buffer</span>;</span><br><span class="line"><span class="keyword">while</span>(getline(ifs,<span class="built_in">buffer</span>)){</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">buffer</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//4单个读取</span></span><br><span class="line"> <span class="keyword">char</span> c;</span><br><span class="line"> <span class="keyword">while</span>(c=ifs.<span class="built_in">get</span>()!=EOF){</span><br><span class="line"> <span class="built_in">cout</span><<c<<<span class="built_in">endl</span>;</span><br><span class="line"> } </span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">write</span>();</span><br><span class="line"><span class="built_in">read</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>模板必须推导出数据类型才可以使用</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span><<span class="class"><span class="keyword">class</span> <span class="title">T</span>></span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">add</span>(<span class="title">T</span> <span class="title">a</span>,<span class="title">T</span> <span class="title">b</span>){</span></span><br><span class="line"><span class="built_in">cout</span><<a+b<<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line">add<<span class="keyword">int</span>>(<span class="number">23</span>,<span class="number">12</span>);<span class="comment">//显示</span></span><br><span class="line">add(<span class="number">12.2</span>,<span class="number">34.2</span>);<span class="comment">//自动类型推导</span></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>普通函数与函数模板的区别</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myadd01</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>{</span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">template</span><<span class="class"><span class="keyword">class</span> <span class="title">T</span>></span></span><br><span class="line"><span class="class"><span class="title">T</span> <span class="title">myadd</span>(<span class="title">T</span> <span class="title">a</span>,<span class="title">T</span> <span class="title">b</span>){</span></span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">12</span>,b=<span class="number">23</span>;</span><br><span class="line"><span class="keyword">char</span> c=<span class="string">'a'</span>;</span><br><span class="line"><span class="built_in">cout</span><<myadd01(a,b)<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span><<myadd01(a,c)<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span><<myadd(a,b)<<<span class="built_in">endl</span>;<span class="comment">//函数模板自动类型推导,不会发生自动类型转换 </span></span><br><span class="line"><span class="built_in">cout</span><<myadd<<span class="keyword">int</span>>(a,c)<<<span class="built_in">endl</span>;<span class="comment">//不能类型转换,需要指定类型 </span></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/04/10/c++/4-%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/image-20191205175241874.png" alt="image-20191205175241874"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过空模板参数调用函数模板</span></span><br><span class="line"><span class="comment">//函数模板也能发生函数重载</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span><<span class="class"><span class="keyword">class</span> <span class="title">T</span>></span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">add</span>(<span class="title">T</span> <span class="title">a</span>,<span class="title">T</span> <span class="title">b</span>){</span></span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"函数模板1"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="keyword">template</span><<span class="class"><span class="keyword">class</span> <span class="title">T</span>></span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">add</span>(<span class="title">T</span> <span class="title">a</span>,<span class="title">T</span> <span class="title">b</span>,<span class="title">T</span> <span class="title">c</span>){</span></span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"函数模板2"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"普通函数"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line">add(<span class="number">12</span>,<span class="number">30</span>);</span><br><span class="line">add<>(<span class="number">12</span>,<span class="number">30</span>);</span><br><span class="line">add(<span class="number">12</span>,<span class="number">30</span>,<span class="number">23</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>函数模板的类对象的对比</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(<span class="keyword">int</span> age,<span class="built_in">string</span> name){</span><br><span class="line"><span class="keyword">this</span>->age=age;</span><br><span class="line"><span class="keyword">this</span>->name=name;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line">};</span><br><span class="line"><span class="keyword">template</span><<span class="class"><span class="keyword">class</span> <span class="title">T</span>></span></span><br><span class="line"><span class="class"><span class="title">bool</span> <span class="title">mycompare</span>(<span class="title">T</span> &<span class="title">a</span>,<span class="title">T</span> &<span class="title">b</span>){</span></span><br><span class="line"><span class="keyword">if</span>(a==b){</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">template</span><> <span class="keyword">bool</span> <span class="title">mycompare</span><span class="params">(Person &a,Person &b)</span></span>{</span><br><span class="line"><span class="keyword">if</span>(a.age==b.age&&a.name==b.name){</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">12</span>,<span class="string">"java"</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">12</span>,<span class="string">"java"</span>)</span></span>;</span><br><span class="line"><span class="built_in">cout</span><<mycompare(p1,p2)<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>类模板</p><p>语法</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span><<span class="class"><span class="keyword">class</span> <span class="title">T</span>></span></span><br><span class="line"><span class="class">类</span></span><br></pre></td></tr></tbody></table></figure><p>类模板与函数模板的区别</p><p><img src="/[object%20Object]/2020/04/10/c++/4-%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/image-20191205183118841.png" alt="image-20191205183118841"></p><p>类模板中成员函数的创建时机是模板调用时才创建</p><p>类模板的对象作为函数参数</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><typeinfo></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span><<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="title">class</span> <span class="title">T2</span>></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(T1 name,T2 age){</span><br><span class="line"><span class="keyword">this</span>->name=name;</span><br><span class="line"><span class="keyword">this</span>->age=age;</span><br><span class="line">}</span><br><span class="line">T1 name;</span><br><span class="line">T2 age;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showPerson</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="keyword">this</span>->name<<<span class="string">" "</span><<<span class="keyword">this</span>->age<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"><span class="comment">//1 指定传入类型 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printPerson</span><span class="params">(Person<<span class="built_in">string</span>,<span class="keyword">int</span>> &p)</span></span>{<span class="comment">//1 指定传入类型 </span></span><br><span class="line">p.showPerson();</span><br><span class="line">}</span><br><span class="line"><span class="comment">//2 参数模板化</span></span><br><span class="line"><span class="keyword">template</span><<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="title">class</span> <span class="title">T2</span>> </span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">printPerson2</span>(<span class="title">Person</span><T1,T2> &<span class="title">p</span>){</span><span class="comment">//1 指定传入类型 </span></span><br><span class="line">p.showPerson();</span><br><span class="line">}</span><br><span class="line"><span class="comment">//3 整个类模板化</span></span><br><span class="line"><span class="keyword">template</span><<span class="class"><span class="keyword">class</span> <span class="title">T</span>></span></span><br><span class="line"><span class="class"><span class="title">void</span>  <span class="title">printPerson3</span>(<span class="title">T</span> &<span class="title">p</span>){</span></span><br><span class="line">p.showPerson();</span><br><span class="line"><span class="built_in">cout</span><<<span class="keyword">typeid</span>(T).name()<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{<span class="comment">//类模板的对象做函数的参数 </span></span><br><span class="line">Person<string,int> p1("java",12);</span><br><span class="line">printPerson(p1);</span><br><span class="line">printPerson2(p1);</span><br><span class="line">printPerson3(p1);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>类模板与继承</p><p><img src="/[object%20Object]/2020/04/10/c++/4-%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/image-20191205205213805.png" alt="image-20191205205213805"></p><p>类模板成员函数类外实现</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span><<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="title">class</span> <span class="title">T2</span>></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(T1 name,T2 age);</span><br><span class="line">T1 name;</span><br><span class="line">T2 age;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showPerson</span><span class="params">()</span></span>;</span><br><span class="line">};</span><br><span class="line"><span class="keyword">template</span><<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="title">class</span> <span class="title">T2</span>></span></span><br><span class="line"><span class="class"><span class="title">Person</span><T1,T2>:</span>:Person(T1 name,T2 age){<span class="comment">//类模板构造函数类外实现 </span></span><br><span class="line"><span class="keyword">this</span>->name=name;</span><br><span class="line"><span class="keyword">this</span>->age=age;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">template</span><<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="title">class</span> <span class="title">T2</span>></span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">Person</span><T1,T2>:</span>:showPerson(){<span class="comment">//模板类成员函数类外实现 </span></span><br><span class="line"><span class="built_in">cout</span><<<span class="keyword">this</span>->name<<<span class="keyword">this</span>->age<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line">Person<string,int> p1("c++",12);</span><br><span class="line">p1.showPerson();</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>类模板的的分文件编写</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//将类模板和实现放在同一个文件中并命名为.hpp的文件,然后再.cpp中包含.hpp文件.</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/04/10/c++/4-%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/image-20191205213840891.png" alt="image-20191205213840891"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"person.hpp"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line">Person<string,int> p1("java",12);</span><br><span class="line">p1.showPerson();</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>全局函数类外实现</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span><<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="title">class</span> <span class="title">T2</span>>//声明模板 </span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">Person</span>;</span> <span class="comment">//声明类 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span><<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="title">class</span> <span class="title">T2</span>>//声明这个函数 </span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">showPerson1</span>(<span class="title">Person</span><T1,T2> <span class="title">p</span>){</span></span><br><span class="line"><span class="built_in">cout</span><<p.name<<p.age<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span><<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="title">class</span> <span class="title">T2</span>></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">showPerson</span><span class="params">(Person<T1,T2> p)</span></span>{<span class="comment">//全局函数类内实现</span></span><br><span class="line"><span class="built_in">cout</span><<p.name<<p.age<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//加空参数列表 </span></span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">void</span> showPerson1<>(Person<T1,T2> p);</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">T1 name;</span><br><span class="line">T2 age;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(T1 name,T2 age){</span><br><span class="line"><span class="keyword">this</span>->name=name;</span><br><span class="line"><span class="keyword">this</span>->age=age;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line">Person<string,int> p1("c++",12);</span><br><span class="line">showPerson(p1);</span><br><span class="line">showPerson1(p1);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id><a href="#" class="headerlink" title></a></h3></body></html>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;继承&quot;&gt;&lt;a href=&quot;#继承&quot; class=&quot;headerlink&quot; title=&quot;继承&quot;&gt;&lt;/a&gt;继承&lt;/h3&gt;&lt;p&gt;继承的构造和析构的循序:先父类再子类,然后子类析构父类析构&lt;/p&gt;
&lt;p&gt;访问同名的成员变量需要加作用域其为:&lt;/p&gt;
    
    </summary>
    
    
      <category term="c++" scheme="http://philxling.cn/categories/c/"/>
    
    
      <category term="c++" scheme="http://philxling.cn/tags/c/"/>
    
      <category term="面向对象" scheme="http://philxling.cn/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>运算符重载</title>
    <link href="http://philxling.cn/[object%20Object]/2020/04/05/c++/3-%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/"/>
    <id>http://philxling.cn/[object%20Object]/2020/04/05/c++/3-%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/</id>
    <published>2020-04-05T15:11:21.000Z</published>
    <updated>2020-04-02T14:50:45.137Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>运算符重载</p><a id="more"></a><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//加号运算符重载</span></span><br><span class="line"><span class="comment">//全局函数重载加号</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="comment">//Person operator+(Person &p){//成员函数的本质 </span></span><br><span class="line"><span class="comment">//Person temp;</span></span><br><span class="line"><span class="comment">//temp.a=p.a+this->a;</span></span><br><span class="line"><span class="comment">//temp.b=p.b+this->b;</span></span><br><span class="line"><span class="comment">//return temp;</span></span><br><span class="line"><span class="comment">//}</span></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">Person <span class="keyword">operator</span>+(Person &p1,Person &p2){</span><br><span class="line">Person temp;</span><br><span class="line">temp.a=p1.a+p2.a;</span><br><span class="line">temp.b=p1.b+p2.b;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">} </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">Person p1;</span><br><span class="line">Person p2;</span><br><span class="line">p2.a=<span class="number">12</span>;</span><br><span class="line">p2.b=<span class="number">23</span>;</span><br><span class="line">p1.a=<span class="number">10</span>;</span><br><span class="line">p1.b=<span class="number">10</span>;</span><br><span class="line">Person p3=p1+p2;</span><br><span class="line"><span class="built_in">cout</span><<p3.a<<<span class="string">"------------"</span><<p3.b<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>左移运算符重载</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">friend</span> ostream & <span class="keyword">operator</span><<(ostream &<span class="built_in">cout</span>,Person &p);</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(<span class="keyword">int</span> a,<span class="keyword">int</span> b){</span><br><span class="line"><span class="keyword">this</span>->a=a;</span><br><span class="line"><span class="keyword">this</span>->b=b;</span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">ostream & <span class="keyword">operator</span><<(ostream &<span class="built_in">cout</span>,Person &p){</span><br><span class="line"><span class="built_in">cout</span><<p.a<<<span class="string">"-----------"</span><<p.b;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">12</span>,<span class="number">23</span>)</span></span>;</span><br><span class="line"><span class="built_in">cout</span><<p1<<<span class="built_in">endl</span>;<span class="comment">//直接输出对象</span></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>递增运算符重载</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自增运算符重载 </span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyInteger</span>{</span></span><br><span class="line"><span class="keyword">friend</span> ostream & <span class="keyword">operator</span><<(ostream &<span class="built_in">cout</span>,MyInteger Integer);<span class="comment">//为什么不传引用 </span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">MyInteger(){</span><br><span class="line">num=<span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">MyInteger& <span class="keyword">operator</span>++(){<span class="comment">//前置++</span></span><br><span class="line">num++;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">MyInteger <span class="keyword">operator</span>++(<span class="keyword">int</span>){<span class="comment">//后置++</span></span><br><span class="line">MyInteger temp=*<span class="keyword">this</span>;</span><br><span class="line">num++;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">}; </span><br><span class="line">ostream & <span class="keyword">operator</span><<(ostream &<span class="built_in">cout</span>,MyInteger Integer){</span><br><span class="line"><span class="built_in">cout</span><<Integer.num;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">cout</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//重载++运算符</span></span><br><span class="line"> <span class="comment">//前置++,后置++;</span></span><br><span class="line"> </span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"> MyInteger myint;</span><br><span class="line"><span class="built_in">cout</span><<myint++<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span><<myint<<<span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line"> }</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">MyInteger num;</span><br><span class="line"><span class="built_in">cout</span><<num<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span><<++num<<<span class="built_in">endl</span>; </span><br><span class="line"><span class="built_in">cout</span><<num<<<span class="built_in">endl</span>;</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>赋值运算符重载</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> *a;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(<span class="keyword">int</span> age){</span><br><span class="line">a=<span class="keyword">new</span> <span class="keyword">int</span>(age);</span><br><span class="line">}</span><br><span class="line">~Person(){</span><br><span class="line"><span class="keyword">if</span>(a!=<span class="literal">NULL</span>){</span><br><span class="line"><span class="keyword">delete</span>(a);</span><br><span class="line">a=<span class="literal">NULL</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">Person & <span class="keyword">operator</span>=(Person &p){</span><br><span class="line"><span class="keyword">if</span>(a!=<span class="literal">NULL</span>){</span><br><span class="line"><span class="keyword">delete</span>(a);</span><br><span class="line">} </span><br><span class="line">a=<span class="keyword">new</span> <span class="keyword">int</span>(*p.a);<span class="comment">//深拷贝 </span></span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>; </span><br><span class="line">} </span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">p3=p2=p1;</span><br><span class="line"><span class="built_in">cout</span><< *p2.a<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span><< *p3.a<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>关系运算符重载</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(<span class="keyword">int</span> age,<span class="built_in">string</span> name){</span><br><span class="line"><span class="keyword">this</span>->age=age;</span><br><span class="line"><span class="keyword">this</span>->name=name;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>==(Person &p){</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>->age==p.age&&<span class="keyword">this</span>->name==p.name){</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">12</span>,<span class="string">"java"</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">12</span>,<span class="string">"java"</span>)</span></span>;</span><br><span class="line"><span class="keyword">if</span>(p1==p2){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"p1=p2"</span><<<span class="built_in">endl</span>;</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"p1!=p2"</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>仿函数</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="built_in">string</span> <span class="built_in">text</span>)</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">text</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">Person p1;</span><br><span class="line">p1(<span class="string">"Hello world"</span>);</span><br><span class="line">    Person()(<span class="string">"123"</span>);<span class="comment">//匿名对象 </span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;运算符重载&lt;/p&gt;
    
    </summary>
    
    
      <category term="c++" scheme="http://philxling.cn/categories/c/"/>
    
    
      <category term="c++" scheme="http://philxling.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>c++面向对象</title>
    <link href="http://philxling.cn/[object%20Object]/2020/04/02/c++/2-c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <id>http://philxling.cn/[object%20Object]/2020/04/02/c++/2-c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</id>
    <published>2020-04-02T15:05:41.000Z</published>
    <updated>2020-04-02T14:53:49.424Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h3 id="c-面向对象"><a href="#c-面向对象" class="headerlink" title="c++面向对象"></a>c++面向对象</h3><a id="more"></a><p><img src="/[object%20Object]/2020/04/02/c++/2-c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20191108170627836.png" alt="image-20191108170627836"></p><p><img src="/[object%20Object]/2020/04/02/c++/2-c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20191108171009756.png" alt="image-20191108171009756"></p><p><img src="/[object%20Object]/2020/04/02/c++/2-c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20191108171843986.png" alt="image-20191108171843986"></p><p><img src="/[object%20Object]/2020/04/02/c++/2-c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20191108172250542.png" alt="image-20191108172250542"></p><p>引用是指针常量</p><p>如:</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> &b=a;</span><br></pre></td></tr></tbody></table></figure><p>即:</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> *<span class="keyword">const</span> b=&a;</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/04/02/c++/2-c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20191108205932273.png" alt="image-20191108205932273"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> ,<span class="keyword">int</span> =<span class="number">10</span>)</span></span>;<span class="comment">//占位参数,且可以有默认参数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>{</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b=<span class="number">10000</span>,<span class="keyword">int</span> c=<span class="number">100</span>)</span></span>{<span class="comment">//若我们自己传入数据,就用自己的数据,如果没有,就用默认值 </span></span><br><span class="line"><span class="keyword">return</span> a+b+c;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//注意事项,若某个位置有了默认参数,那么从这个位置后的参数都必须要有默认值</span></span><br><span class="line"><span class="comment">//如果函数声明和函数实现只能有一个有默认参数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<fun(<span class="number">10</span>,<span class="number">20</span>)<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>函数重载</strong></p><p>1 必须在同一个作用域下</p><p>2 函数名称相同</p><p>3 函数参数类型不同,或者个数不同,或者顺序不同</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="built_in">cout</span><<<span class="string">"fun"</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span>)</span></span>{</span><br><span class="line">    <span class="built_in">cout</span><<<span class="string">"fun!"</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//返回值不能作为函数重载的条件</span></span><br><span class="line"><span class="comment">//注意事项</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1 引用作为重载的条件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> &a)</span></span>{</span><br><span class="line">    <span class="built_in">cout</span><<<span class="string">"引用作为重载"</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &a)</span></span>{</span><br><span class="line">    <span class="built_in">cout</span><<<span class="string">"const int &a作为重载"</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">func(a);<span class="comment">//调用的是func(int &a)</span></span><br><span class="line">func(<span class="number">10</span>);<span class="comment">//调用的是func(const int &a)</span></span><br><span class="line"><span class="comment">//2 函数重载作为默认参数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func2</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b=<span class="number">10</span>)</span></span>{</span><br><span class="line">    <span class="built_in">cout</span><<<span class="string">"func2(int a,int b=10)"</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func2</span><span class="params">(<span class="keyword">int</span> a)</span></span>{</span><br><span class="line">    <span class="built_in">cout</span><<<span class="string">"func2(int a)"</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//出现歧义</span></span><br><span class="line"><span class="comment">//应该避免这种情况</span></span><br></pre></td></tr></tbody></table></figure><h3 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//圆类</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI=<span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span>{</span></span><br><span class="line"><span class="keyword">public</span>:<span class="comment">//权限,访问权限:public protected,private</span></span><br><span class="line"><span class="keyword">int</span> r ;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">calculateZC</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span>*PI*r;</span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="comment">//创建对象</span></span><br><span class="line"> Circle c1;</span><br><span class="line"> c1.r=<span class="number">3</span>;</span><br><span class="line"> <span class="built_in">cout</span><<<span class="string">"圆的周长:"</span><<c1.calculateZC()<<<span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line">} </span><br><span class="line"><span class="comment">//struct和class的区别:</span></span><br><span class="line"><span class="comment">//struct默认权限是public</span></span><br><span class="line"><span class="comment">//class默认权限是private</span></span><br></pre></td></tr></tbody></table></figure><p>构造函数</p><p>1 构造函数没有返回值,不用写void</p><p>2 函数名与类名相同</p><p>3 构造函数可以有参数,可以发生重载</p><p>4 创建对象的时候,构造函数会自动调用,且只调用一次</p><p>1 析构函数 进行清理的操作</p><p>2 没有返回值,不写void</p><p>3 函数名与类名相同,在名称前加~</p><p>4 对象在销毁前会自动调用析构函数,且只会调用一次</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(<span class="keyword">int</span> a){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"person构造函数的调用"</span><<<span class="built_in">endl</span>; </span><br><span class="line"><span class="built_in">cout</span><<a<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line">~Person(){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"析构函数的调用"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">12</span>)</span></span>;<span class="comment">//在栈上的数据 </span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>拷贝构造</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数的分类和调用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"无参"</span><<<span class="built_in">endl</span>; </span><br><span class="line">};<span class="comment">//无参构造 </span></span><br><span class="line">Person(<span class="keyword">int</span> a){<span class="comment">//有参构造 </span></span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"有参"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="comment">//拷贝构造函数</span></span><br><span class="line">Person(<span class="keyword">const</span> Person &p){</span><br><span class="line"><span class="comment">//将传入的对象的所有属性拷贝到自己身上.</span></span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"拷贝构造"</span><<<span class="built_in">endl</span>; </span><br><span class="line">} </span><br><span class="line">~Person(){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"析构"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line">}; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="comment">//括号法</span></span><br><span class="line">Person p1;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">12</span>)</span></span>; </span><br><span class="line"><span class="comment">//调用拷贝构造函数</span></span><br><span class="line"><span class="function">Person  <span class="title">p3</span><span class="params">(p1)</span></span>;</span><br><span class="line"><span class="comment">//注意事项:</span></span><br><span class="line"><span class="comment">//不能用Person p1()调用,编译器会认为一个函数,不会认为是创建对象 </span></span><br><span class="line"><span class="comment">//显示法</span></span><br><span class="line">Person p4=p1; </span><br><span class="line">Person(<span class="number">10</span>);<span class="comment">//匿名对象 ,当前行执行结束,系统会立即回收掉匿名对象 </span></span><br><span class="line"><span class="comment">//不要利用拷贝构造函数初始化匿名对象如: Person(p1); 编译器会认为Person (p1)==Person p1 ,对象声明 </span></span><br><span class="line"><span class="comment">//隐式转换法 </span></span><br><span class="line">Person  p5=<span class="number">10</span>;<span class="comment">//等价于 Person p5=Person(10); 有参构造 </span></span><br><span class="line">Person p6=p5;<span class="comment">//拷贝 </span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>拷贝构造函数使用时机</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//拷贝构造函数调用时机 </span></span><br><span class="line"><span class="comment">//1 使用一个已经创建的对象来初始化一个新对象 </span></span><br><span class="line"><span class="comment">//2 值传递的方式给函数传值</span></span><br><span class="line"><span class="comment">//3 值返回局部对象</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"默认"</span><<<span class="built_in">endl</span>; </span><br><span class="line">};</span><br><span class="line">Person(<span class="keyword">const</span> Person &p){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"拷贝构造"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line">~Person(){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"析构"</span><<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line">}; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>{</span><br><span class="line">Person p1;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(p1)</span></span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dowork</span><span class="params">(Person p)</span></span>{</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span>{</span><br><span class="line">Person p3;</span><br><span class="line">dowork(p3);</span><br><span class="line">}</span><br><span class="line"><span class="function">Person <span class="title">dowork1</span><span class="params">()</span></span>{</span><br><span class="line">Person p4;</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"p4--"</span><<(<span class="keyword">int</span>*)&p4<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> p4;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span></span>{</span><br><span class="line">Person p5=dowork1();</span><br><span class="line"><span class="built_in">cout</span><<(<span class="keyword">int</span>*)&p5<<<span class="built_in">endl</span>;</span><br><span class="line">} </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test1();</span><br><span class="line">test2();</span><br><span class="line">test3();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">} </span><br><span class="line"><span class="comment">/*默认</span></span><br><span class="line"><span class="comment">拷贝构造</span></span><br><span class="line"><span class="comment">析构</span></span><br><span class="line"><span class="comment">析构</span></span><br><span class="line"><span class="comment">默认</span></span><br><span class="line"><span class="comment">拷贝构造</span></span><br><span class="line"><span class="comment">析构</span></span><br><span class="line"><span class="comment">析构</span></span><br><span class="line"><span class="comment">默认</span></span><br><span class="line"><span class="comment">p4--0019FE64</span></span><br><span class="line"><span class="comment">拷贝构造</span></span><br><span class="line"><span class="comment">析构</span></span><br><span class="line"><span class="comment">0019FECC</span></span><br><span class="line"><span class="comment">析构</span></span><br><span class="line"><span class="comment">Press any key to continue</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//如果写了有参构造,编译器不提供无参</span></span><br><span class="line"><span class="comment">//写了拷贝构造,不提供其他构造函数</span></span><br></pre></td></tr></tbody></table></figure><p>深拷贝浅拷贝</p><p>浅拷贝:简单的赋值拷贝操作</p><p>深拷贝:在堆区重新申请空间,进行拷贝操作</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//深拷贝,浅拷贝</span></span><br><span class="line"><span class="class"><span class="keyword">class</span>  <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(){</span><br><span class="line">}</span><br><span class="line">~Person(){</span><br><span class="line"><span class="comment">//将堆区开辟的数据释放</span></span><br><span class="line"> <span class="keyword">if</span>(P_height!=<span class="literal">NULL</span>){</span><br><span class="line"> <span class="keyword">delete</span> P_height;</span><br><span class="line"> P_height=<span class="literal">NULL</span>;</span><br><span class="line"> } </span><br><span class="line">}</span><br><span class="line">Person(<span class="keyword">int</span> age,<span class="keyword">int</span> <span class="built_in">height</span>){</span><br><span class="line">P_height=<span class="keyword">new</span> <span class="keyword">int</span>(<span class="built_in">height</span>);</span><br><span class="line">P_age=age;</span><br><span class="line">}</span><br><span class="line">Person(<span class="keyword">const</span> Person &p){</span><br><span class="line">P_age=p.P_age;</span><br><span class="line"><span class="comment">//p_height=p.P_height;编译器执行的是这种</span></span><br><span class="line"><span class="comment">//用深拷贝解决</span></span><br><span class="line"> P_height=<span class="keyword">new</span> <span class="keyword">int</span>(*p.P_height); </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> P_age;</span><br><span class="line"><span class="keyword">int</span> *P_height;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Test1</span><span class="params">()</span></span>{</span><br><span class="line"><span class="function">Person <span class="title">p</span><span class="params">(<span class="number">12</span>,<span class="number">150</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(p)</span></span>;</span><br><span class="line"><span class="built_in">cout</span><<p.P_age<<*p.P_height<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span><<p1.P_age<<*p1.P_height<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">Test1();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>初始化列表</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span>  <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c):a(a),b(b),c(c){<span class="comment">//初始化列表 </span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="function">Person <span class="title">p</span><span class="params">(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span></span>;</span><br><span class="line"><span class="built_in">cout</span><<p.a<<p.b<<<span class="string">" "</span><<p.c<<<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>对象成员</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><string></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Phone</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Phone(<span class="built_in">string</span> Phone_name):name(Phone_name){ </span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"Phone的构造"</span>; </span><br><span class="line">}</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(<span class="built_in">string</span> name,<span class="keyword">int</span> id):phone(name),P_id(id){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"Person的构造"</span>; </span><br><span class="line">}</span><br><span class="line">Phone phone;</span><br><span class="line"><span class="keyword">int</span> P_id;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="function">Person <span class="title">p</span><span class="params">(<span class="string">"apple"</span>,<span class="number">12</span>)</span></span>;</span><br><span class="line"><span class="built_in">cout</span><<p.phone.name<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">test();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">} </span><br><span class="line"><span class="comment">//Phone的构造 Person的构造 apple</span></span><br><span class="line"><span class="comment">//先初始化Phone再初始化Person</span></span><br></pre></td></tr></tbody></table></figure><p>static成员</p><p>静态成员函数:所有对象共享,只能访问静态变量</p><p>静态成员变量:所有对象共有,类内声明,类外定义</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"静态成员函数"</span><<<span class="built_in">endl</span>; </span><br><span class="line"><span class="built_in">cout</span><<a++<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> a; </span><br><span class="line"></span><br><span class="line">};</span><br><span class="line"><span class="keyword">int</span> Person::a=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="comment">//对象访问</span></span><br><span class="line">Person p;</span><br><span class="line">p.fun(); </span><br><span class="line">Person::fun();<span class="comment">//类访问 </span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>只有非静态成员变量属于对象</p><p>空对象的内存占用为1个字节</p><p>this指针: this指针指向被调用的成员函数所属的对象,this指针是指针常量其指向不可以修改</p><p>1 可以解决名称冲突</p><p>2 返回此对象 return *this;</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line">Person(<span class="keyword">int</span> age):age(age){</span><br><span class="line">}</span><br><span class="line"><span class="function">Person& <span class="title">addPersonAge</span><span class="params">(Person &p)</span></span>{</span><br><span class="line"><span class="keyword">this</span>->age+=p.age;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">p2.addPersonAge(p1).addPersonAge(p1).addPersonAge(p1);</span><br><span class="line"><span class="built_in">cout</span><<p1.age<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span><<p2.age<<<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>常函数 :不能修改指针指向和值.</p><p>常对象:只能调用常函数</p><p><img src="/[object%20Object]/2020/04/02/c++/2-c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20191110010838064.png" alt="image-20191110010838064"></p><p><img src="/[object%20Object]/2020/04/02/c++/2-c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20191110011503286.png" alt="image-20191110011503286"></p><p>友元函数</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span>{</span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">visit</span><span class="params">(Building &b)</span></span>;<span class="comment">//友元函数//友元类 firend class GoodGay;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">string</span> sittingRoom;</span><br><span class="line">Building(){</span><br><span class="line">sittingRoom=<span class="string">"客厅"</span>;</span><br><span class="line">bedRoom=<span class="string">"卧室"</span>; </span><br><span class="line">}</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="built_in">string</span> bedRoom; </span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">(Building &b)</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<b.sittingRoom<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span><<b.bedRoom<<<span class="built_in">endl</span>;</span><br><span class="line">} </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">Building b;</span><br><span class="line">visit(b);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span>{</span></span><br><span class="line"><span class="keyword">friend</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodGay</span>;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">string</span> sittingRoom;</span><br><span class="line">Building(); </span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="built_in">string</span> bedRoom; </span><br><span class="line">};</span><br><span class="line">Building::Building(){</span><br><span class="line">sittingRoom=<span class="string">"客厅"</span>;</span><br><span class="line">bedRoom=<span class="string">"卧室"</span>; </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodGay</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">GoodGay();</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">()</span></span>;</span><br><span class="line">Building *building; </span><br><span class="line">}; </span><br><span class="line">GoodGay::GoodGay(){</span><br><span class="line">building=<span class="keyword">new</span> Building;</span><br><span class="line">} </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<building->sittingRoom<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span><<building->bedRoom<<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">GoodGay gay;</span><br><span class="line">gay.visit();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>成员函数做友元</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="comment">//此处若要将哪个类的成员函数做右元,其类应放在前面,此乃大坑</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodGay</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">GoodGay();</span><br><span class="line">Building *building;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">()</span></span>;</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span>{</span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span></span>;<span class="comment">//将GoodGay类的visit作为BUilding的友元,GoodGay应该先定义.注意与友元类的区别</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Building();</span><br><span class="line"><span class="built_in">string</span> sitRoom;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="built_in">string</span> bedRoom;</span><br><span class="line"></span><br><span class="line">}; </span><br><span class="line">Building::Building(){</span><br><span class="line">sitRoom=<span class="string">"客厅"</span>;</span><br><span class="line">bedRoom=<span class="string">"卧室"</span>; </span><br><span class="line">}</span><br><span class="line">GoodGay::GoodGay(){</span><br><span class="line">building=<span class="keyword">new</span> Building;</span><br><span class="line">} </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cout</span><<building->sitRoom<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span><<building->bedRoom<<<span class="built_in">endl</span>; </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">GoodGay gay;</span><br><span class="line">gay.visit();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;c-面向对象&quot;&gt;&lt;a href=&quot;#c-面向对象&quot; class=&quot;headerlink&quot; title=&quot;c++面向对象&quot;&gt;&lt;/a&gt;c++面向对象&lt;/h3&gt;
    
    </summary>
    
    
      <category term="c++" scheme="http://philxling.cn/categories/c/"/>
    
    
      <category term="c++" scheme="http://philxling.cn/tags/c/"/>
    
      <category term="面向对象" scheme="http://philxling.cn/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式和re模块</title>
    <link href="http://philxling.cn/[object%20Object]/2020/03/24/python%E7%88%AC%E8%99%AB/6-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8Cre%E6%A8%A1%E5%9D%97/"/>
    <id>http://philxling.cn/[object%20Object]/2020/03/24/python%E7%88%AC%E8%99%AB/6-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8Cre%E6%A8%A1%E5%9D%97/</id>
    <published>2020-03-24T05:56:23.000Z</published>
    <updated>2020-04-02T15:13:29.141Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="3-正则表达式和re模块"><a href="#3-正则表达式和re模块" class="headerlink" title="3-正则表达式和re模块"></a>3-正则表达式和re模块</h1><h2 id="什么是正则表达式："><a href="#什么是正则表达式：" class="headerlink" title="什么是正则表达式："></a>什么是正则表达式：</h2><p>通俗理解：按照一定的规则，从某个字符串中匹配出想要的数据。这个规则就是正则表达式。<br>标准答案：<a href="https://baike.baidu.com/item/正则表达式/1700215?fr=aladdin" target="_blank" rel="noopener">https://baike.baidu.com/item/正则表达式/1700215?fr=aladdin</a></p><h2 id="一个段子："><a href="#一个段子：" class="headerlink" title="一个段子："></a>一个段子：</h2><p>世界是分为两种人，一种是懂正则表达式的，一种是不懂正则表达式的.</p><a id="more"></a><h2 id="正则表达式常用匹配规则："><a href="#正则表达式常用匹配规则：" class="headerlink" title="正则表达式常用匹配规则："></a>正则表达式常用匹配规则：</h2><h3 id="匹配某个字符串："><a href="#匹配某个字符串：" class="headerlink" title="匹配某个字符串："></a>匹配某个字符串：</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">'hello'</span></span><br><span class="line">ret = re.match(<span class="string">'he'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> he</span><br></pre></td></tr></tbody></table></figure><p>以上便可以在<code>hello</code>中，匹配出<code>he</code>。</p><h3 id="点（-）匹配任意的字符："><a href="#点（-）匹配任意的字符：" class="headerlink" title="点（.）匹配任意的字符："></a>点（.）匹配任意的字符：</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"ab"</span></span><br><span class="line">ret = re.match(<span class="string">'.'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> a</span><br></pre></td></tr></tbody></table></figure><p>但是点（.）不能匹配不到换行符。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"ab"</span></span><br><span class="line">ret = re.match(<span class="string">'.'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> AttributeError: <span class="string">'NoneType'</span> object has no attribute <span class="string">'group'</span></span><br></pre></td></tr></tbody></table></figure><h3 id="d匹配任意的数字："><a href="#d匹配任意的数字：" class="headerlink" title="\d匹配任意的数字："></a>\d匹配任意的数字：</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"123"</span></span><br><span class="line">ret = re.match(<span class="string">'\d'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure><h3 id="D匹配任意的非数字："><a href="#D匹配任意的非数字：" class="headerlink" title="\D匹配任意的非数字："></a>\D匹配任意的非数字：</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"a"</span></span><br><span class="line">ret = re.match(<span class="string">'\D'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> a</span><br></pre></td></tr></tbody></table></figure><p>而如果text是等于一个数字，那么就匹配不成功了。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"1"</span></span><br><span class="line">ret = re.match(<span class="string">'\D'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> AttributeError: <span class="string">'NoneType'</span> object has no attribute <span class="string">'group'</span></span><br></pre></td></tr></tbody></table></figure><h3 id="s匹配的是空白字符（包括：-n，-t，-r和空格）："><a href="#s匹配的是空白字符（包括：-n，-t，-r和空格）：" class="headerlink" title="\s匹配的是空白字符（包括：\n，\t，\r和空格）："></a>\s匹配的是空白字符（包括：\n，\t，\r和空格）：</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"\t"</span></span><br><span class="line">ret = re.match(<span class="string">'\s'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> 空白</span><br></pre></td></tr></tbody></table></figure><h3 id="w匹配的是a-z和A-Z以及数字和下划线："><a href="#w匹配的是a-z和A-Z以及数字和下划线：" class="headerlink" title="\w匹配的是a-z和A-Z以及数字和下划线："></a>\w匹配的是<code>a-z</code>和<code>A-Z</code>以及数字和下划线：</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"_"</span></span><br><span class="line">ret = re.match(<span class="string">'\w'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> _</span><br></pre></td></tr></tbody></table></figure><p>而如果要匹配一个其他的字符，那么就匹配不到。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"+"</span></span><br><span class="line">ret = re.match(<span class="string">'\w'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> AttributeError: <span class="string">'NoneType'</span> object has no attribute</span><br></pre></td></tr></tbody></table></figure><h3 id="W匹配的是和-w相反的："><a href="#W匹配的是和-w相反的：" class="headerlink" title="\W匹配的是和\w相反的："></a>\W匹配的是和\w相反的：</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"+"</span></span><br><span class="line">ret = re.match(<span class="string">'\W'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> +</span><br></pre></td></tr></tbody></table></figure><p>而如果你的text是一个下划线或者英文字符，那么就匹配不到了。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"_"</span></span><br><span class="line">ret = re.match(<span class="string">'\W'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> AttributeError: <span class="string">'NoneType'</span> object has no attribute</span><br></pre></td></tr></tbody></table></figure><h3 id="组合的方式，只要满足中括号中的某一项都算匹配成功："><a href="#组合的方式，只要满足中括号中的某一项都算匹配成功：" class="headerlink" title="[]组合的方式，只要满足中括号中的某一项都算匹配成功："></a>[]组合的方式，只要满足中括号中的某一项都算匹配成功：</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"0731-88888888"</span></span><br><span class="line">ret = re.match(<span class="string">'[\d\-]+'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> <span class="number">0731</span><span class="number">-88888888</span></span><br></pre></td></tr></tbody></table></figure><p>之前讲到的几种匹配规则，其实可以使用中括号的形式来进行替代：</p><ul><li>\d：[0-9]</li><li>\D：<a href="#fn_0-9">0-9</a></li><li>\w：[0-9a-zA-Z_]</li><li>\W：[^0-9a-zA-Z_]</li></ul><h3 id="匹配多个字符："><a href="#匹配多个字符：" class="headerlink" title="匹配多个字符："></a>匹配多个字符：</h3><ol><li><p><code>*</code>：可以匹配0或者任意多个字符。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"0731"</span></span><br><span class="line">ret = re.match(<span class="string">'\d*'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> <span class="number">0731</span></span><br></pre></td></tr></tbody></table></figure><p>以上因为匹配的要求是<code>\d</code>，那么就要求是数字，后面跟了一个星号，就可以匹配到0731这四个字符。</p></li><li><p><code>+</code>：可以匹配1个或者多个字符。最少一个。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"abc"</span></span><br><span class="line">ret = re.match(<span class="string">'\w+'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> abc</span><br></pre></td></tr></tbody></table></figure><p>因为匹配的是<code>\w</code>，那么就要求是英文字符，后面跟了一个加号，意味着最少要有一个满足<code>\w</code>的字符才能够匹配到。如果text是一个空白字符或者是一个不满足\w的字符，那么就会报错。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">""</span></span><br><span class="line">ret = re.match(<span class="string">'\w+'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> AttributeError: <span class="string">'NoneType'</span> object has no attribute</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>?</code>：匹配的字符可以出现一次或者不出现（0或者1）。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"123"</span></span><br><span class="line">ret = re.match(<span class="string">'\d?'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure></li><li><p><code>{m}</code>：匹配m个字符。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"123"</span></span><br><span class="line">ret = re.match(<span class="string">'\d{2}'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> <span class="number">12</span></span><br></pre></td></tr></tbody></table></figure></li><li><p><code>{m,n}</code>：匹配m-n个字符。在这中间的字符都可以匹配到。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"123"</span></span><br><span class="line">ret = re.match(<span class="string">'\d{1,2}'</span>,text)</span><br><span class="line">prit(ret.group())</span><br><span class="line">>> <span class="number">12</span></span><br></pre></td></tr></tbody></table></figure><p>如果text只有一个字符，那么也可以匹配出来。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"1"</span></span><br><span class="line">ret = re.match(<span class="string">'\d{1,2}'</span>,text)</span><br><span class="line">prit(ret.group())</span><br><span class="line">>> <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure></li></ol><h3 id="小案例："><a href="#小案例：" class="headerlink" title="小案例："></a>小案例：</h3><ol><li><p>验证手机号码：手机号码的规则是以<code>1</code>开头，第二位可以是<code>34587</code>，后面那9位就可以随意了。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"18570631587"</span></span><br><span class="line">ret = re.match(<span class="string">'1[34587]\d{9}'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> <span class="number">18570631587</span></span><br></pre></td></tr></tbody></table></figure><p>而如果是个不满足条件的手机号码。那么就匹配不到了。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"1857063158"</span></span><br><span class="line">ret = re.match(<span class="string">'1[34587]\d{9}'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> AttributeError: <span class="string">'NoneType'</span> object has no attribute</span><br></pre></td></tr></tbody></table></figure></li><li><p>验证邮箱：邮箱的规则是邮箱名称是用<code>数字、数字、下划线</code>组成的，然后是<code>@</code>符号，后面就是域名了。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"hynever@163.com"</span></span><br><span class="line">ret = re.match(<span class="string">'\w+@\w+\.[a-zA-Z\.]+'</span>,text)</span><br><span class="line">print(ret.group())</span><br></pre></td></tr></tbody></table></figure></li><li><p>验证URL：URL的规则是前面是<code>http</code>或者<code>https</code>或者是<code>ftp</code>然后再加上一个冒号，再加上一个斜杠，再后面就是可以出现任意非空白字符了。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"http://www.baidu.com/"</span></span><br><span class="line">ret = re.match(<span class="string">'(http|https|ftp)://[^\s]+'</span>,text)</span><br><span class="line">print(ret.group())</span><br></pre></td></tr></tbody></table></figure></li><li><p>验证身份证：身份证的规则是，总共有18位，前面17位都是数字，后面一位可以是数字，也可以是小写的x，也可以是大写的X。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"3113111890812323X"</span></span><br><span class="line">ret = re.match(<span class="string">'\d{17}[\dxX]'</span>,text)</span><br><span class="line">print(ret.group())</span><br></pre></td></tr></tbody></table></figure></li></ol><h3 id="（脱字号）：表示以…开始："><a href="#（脱字号）：表示以…开始：" class="headerlink" title="^（脱字号）：表示以…开始："></a>^（脱字号）：表示以…开始：</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"hello"</span></span><br><span class="line">ret = re.match(<span class="string">'^h'</span>,text)</span><br><span class="line">print(ret.group())</span><br></pre></td></tr></tbody></table></figure><p>如果是在中括号中，那么代表的是取反操作.</p><h3 id="：表示以…结束："><a href="#：表示以…结束：" class="headerlink" title="$：表示以…结束："></a>$：表示以…结束：</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配163.com的邮箱</span></span><br><span class="line">text = <span class="string">"xxx@163.com"</span></span><br><span class="line">ret = re.search(<span class="string">'\w+@163\.com$'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> xxx@<span class="number">163.</span>com</span><br></pre></td></tr></tbody></table></figure><h3 id="：匹配多个表达式或者字符串："><a href="#：匹配多个表达式或者字符串：" class="headerlink" title="|：匹配多个表达式或者字符串："></a>|：匹配多个表达式或者字符串：</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"hello|world"</span></span><br><span class="line">ret = re.search(<span class="string">'hello'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> hello</span><br></pre></td></tr></tbody></table></figure><h3 id="贪婪模式和非贪婪模式："><a href="#贪婪模式和非贪婪模式：" class="headerlink" title="贪婪模式和非贪婪模式："></a>贪婪模式和非贪婪模式：</h3><p>贪婪模式：正则表达式会匹配尽量多的字符。默认是贪婪模式。<br>非贪婪模式：正则表达式会尽量少的匹配字符。<br>示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"0123456"</span></span><br><span class="line">ret = re.match(<span class="string">'\d+'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line"><span class="comment"># 因为默认采用贪婪模式，所以会输出0123456</span></span><br><span class="line">>> <span class="number">0123456</span></span><br></pre></td></tr></tbody></table></figure><p>可以改成非贪婪模式，那么就只会匹配到0。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"0123456"</span></span><br><span class="line">ret = re.match(<span class="string">'\d+?'</span>,text)</span><br><span class="line">print(ret.group())</span><br></pre></td></tr></tbody></table></figure><h3 id="案例：匹配0-100之间的数字："><a href="#案例：匹配0-100之间的数字：" class="headerlink" title="案例：匹配0-100之间的数字："></a>案例：匹配<code>0-100</code>之间的数字：</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">'99'</span></span><br><span class="line">ret = re.match(<span class="string">'[1-9]?\d$|100$'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> <span class="number">99</span></span><br></pre></td></tr></tbody></table></figure><p>而如果<code>text=101</code>，那么就会抛出一个异常。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">'101'</span></span><br><span class="line">ret = re.match(<span class="string">'[1-9]?\d$|100$'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> AttributeError: <span class="string">'NoneType'</span> object has no attribute <span class="string">'group'</span></span><br></pre></td></tr></tbody></table></figure><h3 id="转义字符和原生字符串："><a href="#转义字符和原生字符串：" class="headerlink" title="转义字符和原生字符串："></a>转义字符和原生字符串：</h3><p>在正则表达式中，有些字符是有特殊意义的字符。因此如果想要匹配这些字符，那么就必须使用反斜杠进行转义。比如<code>$</code>代表的是以…结尾，如果想要匹配<code>$</code>，那么就必须使用<code>\$</code>。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"apple price is \$99,orange paice is $88"</span></span><br><span class="line">ret = re.search(<span class="string">'\$(\d+)'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> $<span class="number">99</span></span><br></pre></td></tr></tbody></table></figure><p>原生字符串：<br>在正则表达式中，<code>\</code>是专门用来做转义的。在Python中<code>\</code>也是用来做转义的。因此如果想要在普通的字符串中匹配出<code>\</code>，那么要给出四个<code>\</code>。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"apple \c"</span></span><br><span class="line">ret = re.search(<span class="string">'\\\\c'</span>,text)</span><br><span class="line">print(ret.group())</span><br></pre></td></tr></tbody></table></figure><p>因此要使用原生字符串就可以解决这个问题：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"apple \c"</span></span><br><span class="line">ret = re.search(<span class="string">r'\\c'</span>,text)</span><br><span class="line">print(ret.group())</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="re模块中常用函数："><a href="#re模块中常用函数：" class="headerlink" title="re模块中常用函数："></a>re模块中常用函数：</h2><h3 id="match："><a href="#match：" class="headerlink" title="match："></a>match：</h3><p>从开始的位置进行匹配。如果开始的位置没有匹配到。就直接失败了。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">'hello'</span></span><br><span class="line">ret = re.match(<span class="string">'h'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> h</span><br></pre></td></tr></tbody></table></figure><p>如果第一个字母不是<code>h</code>，那么就会失败。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">'ahello'</span></span><br><span class="line">ret = re.match(<span class="string">'h'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> AttributeError: <span class="string">'NoneType'</span> object has no attribute <span class="string">'group'</span></span><br></pre></td></tr></tbody></table></figure><p>如果想要匹配换行的数据，那么就要传入一个<code>flag=re.DOTALL</code>，就可以匹配换行符了。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"abc\nabc"</span></span><br><span class="line">ret = re.match(<span class="string">'abc.*abc'</span>,text,re.DOTALL)</span><br><span class="line">print(ret.group())</span><br></pre></td></tr></tbody></table></figure><h3 id="search："><a href="#search：" class="headerlink" title="search："></a>search：</h3><p>在字符串中找满足条件的字符。如果找到，就返回。说白了，就是只会找到第一个满足条件的。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">'apple price $99 orange price $88'</span></span><br><span class="line">ret = re.search(<span class="string">'\d+'</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">>> <span class="number">99</span></span><br></pre></td></tr></tbody></table></figure><h3 id="分组："><a href="#分组：" class="headerlink" title="分组："></a>分组：</h3><p>在正则表达式中，可以对过滤到的字符串进行分组。分组使用圆括号的方式。</p><ol><li><code>group</code>：和<code>group(0)</code>是等价的，返回的是整个满足条件的字符串。</li><li><code>groups</code>：返回的是里面的子组。索引从1开始。</li><li><code>group(1)</code>：返回的是第一个子组，可以传入多个。<br>示例代码如下：</li></ol><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"apple price is $99,orange price is $10"</span></span><br><span class="line">ret = re.search(<span class="string">r".*(\$\d+).*(\$\d+)"</span>,text)</span><br><span class="line">print(ret.group())</span><br><span class="line">print(ret.group(<span class="number">0</span>))</span><br><span class="line">print(ret.group(<span class="number">1</span>))</span><br><span class="line">print(ret.group(<span class="number">2</span>))</span><br><span class="line">print(ret.groups())</span><br></pre></td></tr></tbody></table></figure><h3 id="findall："><a href="#findall：" class="headerlink" title="findall："></a>findall：</h3><p>找出所有满足条件的，返回的是一个列表。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">'apple price $99 orange price $88'</span></span><br><span class="line">ret = re.findall(<span class="string">'\d+'</span>,text)</span><br><span class="line">print(ret)</span><br><span class="line">>> [<span class="string">'99'</span>, <span class="string">'88'</span>]</span><br></pre></td></tr></tbody></table></figure><h3 id="sub："><a href="#sub：" class="headerlink" title="sub："></a>sub：</h3><p>用来替换字符串。将匹配到的字符串替换为其他字符串。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">'apple price $99 orange price $88'</span></span><br><span class="line">ret = re.sub(<span class="string">'\d+'</span>,<span class="string">'0'</span>,text)</span><br><span class="line">print(ret)</span><br><span class="line">>> apple price $<span class="number">0</span> orange price $<span class="number">0</span></span><br></pre></td></tr></tbody></table></figure><p><code>sub</code>函数的案例，获取拉勾网中的数据：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="string">"""</span></span><br><span class="line"><span class="string"><div></span></span><br><span class="line"><span class="string"><p>基本要求：</p></span></span><br><span class="line"><span class="string"><p>1、精通HTML5、CSS3、 JavaScript等Web前端开发技术，对html5页面适配充分了解，熟悉不同浏览器间的差异，熟练写出兼容各种浏览器的代码；</p></span></span><br><span class="line"><span class="string"><p>2、熟悉运用常见JS开发框架，如JQuery、vue、angular，能快速高效实现各种交互效果；</p></span></span><br><span class="line"><span class="string"><p>3、熟悉编写能够自动适应HTML5界面，能让网页格式自动适应各款各大小的手机；</p></span></span><br><span class="line"><span class="string"><p>4、利用HTML5相关技术开发移动平台、PC终端的前端页面，实现HTML5模板化；</p></span></span><br><span class="line"><span class="string"><p>5、熟悉手机端和PC端web实现的差异，有移动平台web前端开发经验，了解移动互联网产品和行业，有在Android,iOS等平台下HTML5+CSS+JavaScript（或移动JS框架）开发经验者优先考虑；6、良好的沟通能力和团队协作精神，对移动互联网行业有浓厚兴趣，有较强的研究能力和学习能力；</p></span></span><br><span class="line"><span class="string"><p>7、能够承担公司前端培训工作，对公司各业务线的前端（HTML5\CSS3）工作进行支撑和指导。</p></span></span><br><span class="line"><span class="string"><p><br></p></span></span><br><span class="line"><span class="string"><p>岗位职责：</p></span></span><br><span class="line"><span class="string"><p>1、利用html5及相关技术开发移动平台、微信、APP等前端页面，各类交互的实现；</p></span></span><br><span class="line"><span class="string"><p>2、持续的优化前端体验和页面响应速度，并保证兼容性和执行效率；</p></span></span><br><span class="line"><span class="string"><p>3、根据产品需求，分析并给出最优的页面前端结构解决方案；</p></span></span><br><span class="line"><span class="string"><p>4、协助后台及客户端开发人员完成功能开发和调试；</p></span></span><br><span class="line"><span class="string"><p>5、移动端主流浏览器的适配、移动端界面自适应研发。</p></span></span><br><span class="line"><span class="string"></div></span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">ret = re.sub(<span class="string">'</?[a-zA-Z0-9]+>'</span>,<span class="string">""</span>,html)</span><br><span class="line">print(ret)</span><br></pre></td></tr></tbody></table></figure><h3 id="split："><a href="#split：" class="headerlink" title="split："></a>split：</h3><p>使用正则表达式来分割字符串。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"hello world ni hao"</span></span><br><span class="line">ret = re.split(<span class="string">'\W'</span>,text)</span><br><span class="line">print(ret)</span><br><span class="line">>> [<span class="string">"hello"</span>,<span class="string">"world"</span>,<span class="string">"ni"</span>,<span class="string">"hao"</span>]</span><br></pre></td></tr></tbody></table></figure><h3 id="compile："><a href="#compile：" class="headerlink" title="compile："></a>compile：</h3><p>对于一些经常要用到的正则表达式，可以使用<code>compile</code>进行编译，后期再使用的时候可以直接拿过来用，执行效率会更快。而且<code>compile</code>还可以指定<code>flag=re.VERBOSE</code>，在写正则表达式的时候可以做好注释。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">"the number is 20.50"</span></span><br><span class="line">r = re.compile(<span class="string">r"""</span></span><br><span class="line"><span class="string">                \d+ # 小数点前面的数字</span></span><br><span class="line"><span class="string">                \.? # 小数点</span></span><br><span class="line"><span class="string">                \d* # 小数点后面的数字</span></span><br><span class="line"><span class="string">                """</span>,re.VERBOSE)</span><br><span class="line">ret = re.search(r,text)</span><br><span class="line">print(ret.group())</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;3-正则表达式和re模块&quot;&gt;&lt;a href=&quot;#3-正则表达式和re模块&quot; class=&quot;headerlink&quot; title=&quot;3-正则表达式和re模块&quot;&gt;&lt;/a&gt;3-正则表达式和re模块&lt;/h1&gt;&lt;h2 id=&quot;什么是正则表达式：&quot;&gt;&lt;a href=&quot;#什么是正则表达式：&quot; class=&quot;headerlink&quot; title=&quot;什么是正则表达式：&quot;&gt;&lt;/a&gt;什么是正则表达式：&lt;/h2&gt;&lt;p&gt;通俗理解：按照一定的规则，从某个字符串中匹配出想要的数据。这个规则就是正则表达式。&lt;br&gt;标准答案：&lt;a href=&quot;https://baike.baidu.com/item/正则表达式/1700215?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://baike.baidu.com/item/正则表达式/1700215?fr=aladdin&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;一个段子：&quot;&gt;&lt;a href=&quot;#一个段子：&quot; class=&quot;headerlink&quot; title=&quot;一个段子：&quot;&gt;&lt;/a&gt;一个段子：&lt;/h2&gt;&lt;p&gt;世界是分为两种人，一种是懂正则表达式的，一种是不懂正则表达式的.&lt;/p&gt;
    
    </summary>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/categories/python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/tags/python%E7%88%AC%E8%99%AB/"/>
    
      <category term="python" scheme="http://philxling.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>xpath语法与lxml库</title>
    <link href="http://philxling.cn/[object%20Object]/2020/03/24/python%E7%88%AC%E8%99%AB/5-xpath%E8%AF%AD%E6%B3%95%E4%B8%8Elxml%E5%BA%93/"/>
    <id>http://philxling.cn/[object%20Object]/2020/03/24/python%E7%88%AC%E8%99%AB/5-xpath%E8%AF%AD%E6%B3%95%E4%B8%8Elxml%E5%BA%93/</id>
    <published>2020-03-24T04:43:56.000Z</published>
    <updated>2020-04-02T15:13:16.758Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="xpath语法与lxml库"><a href="#xpath语法与lxml库" class="headerlink" title="xpath语法与lxml库"></a>xpath语法与lxml库</h1><h2 id="什么是XPath？"><a href="#什么是XPath？" class="headerlink" title="什么是XPath？"></a>什么是XPath？</h2><p>xpath（XML Path Language）是一门在XML和HTML文档中查找信息的语言，可用来在XML和HTML文档中对元素和属性进行遍历。</p><a id="more"></a><h2 id="XPath开发工具"><a href="#XPath开发工具" class="headerlink" title="XPath开发工具"></a>XPath开发工具</h2><ol><li>Chrome插件XPath Helper。</li><li>Firefox插件Try XPath。</li></ol><h2 id="XPath语法"><a href="#XPath语法" class="headerlink" title="XPath语法"></a>XPath语法</h2><h3 id="选取节点："><a href="#选取节点：" class="headerlink" title="选取节点："></a>选取节点：</h3><p>XPath 使用路径表达式来选取 XML 文档中的节点或者节点集。这些路径表达式和我们在常规的电脑文件系统中看到的表达式非常相似。</p><table><thead><tr><th>表达式</th><th>描述</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>nodename</td><td>选取此节点的所有子节点</td><td>bookstore</td><td>选取bookstore下所有的子节点</td></tr><tr><td>/</td><td>如果是在最前面，代表从根节点选取。否则选择某节点下的某个节点</td><td>/bookstore</td><td>选取根元素下所有的bookstore节点</td></tr><tr><td>//</td><td>从全局节点中选择节点，随便在哪个位置</td><td>//book</td><td>从全局节点中找到所有的book节点</td></tr><tr><td>@</td><td>选取某个节点的属性</td><td>//book[@price]</td><td>选择所有拥有price属性的book节点</td></tr><tr><td>.</td><td>当前节点</td><td>./a</td><td>选取当前节点下的a标签</td></tr></tbody></table><h3 id="谓语："><a href="#谓语：" class="headerlink" title="谓语："></a>谓语：</h3><p>谓语用来查找某个特定的节点或者包含某个指定的值的节点，被嵌在方括号中。<br>在下面的表格中，我们列出了带有谓语的一些路径表达式，以及表达式的结果：</p><table><thead><tr><th>路径表达式</th><th>描述</th></tr></thead><tbody><tr><td>/bookstore/book[1]</td><td>选取bookstore下的第一个子元素</td></tr><tr><td>/bookstore/book[last()]</td><td>选取bookstore下的倒数第二个book元素。</td></tr><tr><td>bookstore/book[position()<3]</td><td>选取bookstore下前面两个子元素。</td></tr><tr><td>//book[@price]</td><td>选取拥有price属性的book元素</td></tr><tr><td>//book[@price=10]</td><td>选取所有属性price等于10的book元素</td></tr></tbody></table><h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><p>*表示通配符。</p><table><thead><tr><th align="left">通配符</th><th align="left">描述</th><th align="left">示例</th><th align="left">结果</th></tr></thead><tbody><tr><td align="left">*</td><td align="left">匹配任意节点</td><td align="left">/bookstore/*</td><td align="left">选取bookstore下的所有子元素。</td></tr><tr><td align="left">@*</td><td align="left">匹配节点中的任何属性</td><td align="left">//book[@*]</td><td align="left">选取所有带有属性的book元素。</td></tr></tbody></table><h3 id="选取多个路径："><a href="#选取多个路径：" class="headerlink" title="选取多个路径："></a>选取多个路径：</h3><p>通过在路径表达式中使用“|”运算符，可以选取若干个路径。<br>示例如下：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//bookstore/book | //book/title</span><br><span class="line"># 选取所有book元素以及book元素下所有的title元素</span><br></pre></td></tr></tbody></table></figure><h3 id="运算符："><a href="#运算符：" class="headerlink" title="运算符："></a>运算符：</h3><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th><th align="left">返回值</th></tr></thead><tbody><tr><td align="left">|</td><td align="left">计算两个节点集</td><td align="left">//book | //cd</td><td align="left">返回所有拥有 book 和 cd 元素的节点集</td></tr><tr><td align="left">+</td><td align="left">加法</td><td align="left">6 + 4</td><td align="left">10</td></tr><tr><td align="left">-</td><td align="left">减法</td><td align="left">6 - 4</td><td align="left">2</td></tr><tr><td align="left">*</td><td align="left">乘法</td><td align="left">6 * 4</td><td align="left">24</td></tr><tr><td align="left">div</td><td align="left">除法</td><td align="left">8 div 4</td><td align="left">2</td></tr><tr><td align="left">=</td><td align="left">等于</td><td align="left">price=9.80</td><td align="left">如果 price 是 9.80，则返回 true。如果 price 是 9.90，则返回 false。</td></tr><tr><td align="left">!=</td><td align="left">不等于</td><td align="left">price!=9.80</td><td align="left">如果 price 是 9.90，则返回 true。如果 price 是 9.80，则返回 false。</td></tr><tr><td align="left"><</td><td align="left">小于</td><td align="left">price<9.80</td><td align="left">如果 price 是 9.00，则返回 true。如果 price 是 9.90，则返回 false。</td></tr><tr><td align="left"><=</td><td align="left">小于或等于</td><td align="left">price<=9.80</td><td align="left">如果 price 是 9.00，则返回 true。如果 price 是 9.90，则返回 false。</td></tr><tr><td align="left">></td><td align="left">大于</td><td align="left">price>9.80</td><td align="left">如果 price 是 9.90，则返回 true。如果 price 是 9.80，则返回 false。</td></tr><tr><td align="left">>=</td><td align="left">大于或等于</td><td align="left">price>=9.80</td><td align="left">如果 price 是 9.90，则返回 true。如果 price 是 9.70，则返回 false。</td></tr><tr><td align="left">or</td><td align="left">或</td><td align="left">price=9.80 or price=9.70</td><td align="left">如果 price 是 9.80，则返回 true。如果 price 是 9.50，则返回 false。</td></tr><tr><td align="left">and</td><td align="left">与</td><td align="left">price>9.00 and price<9.90</td><td align="left">如果 price 是 9.80，则返回 true。如果 price 是 8.50，则返回 false。</td></tr><tr><td align="left">mod</td><td align="left">计算除法的余数</td><td align="left">5 mod 2</td><td align="left">1</td></tr></tbody></table><h2 id="lxml库"><a href="#lxml库" class="headerlink" title="lxml库"></a>lxml库</h2><p>lxml 是 一个HTML/XML的解析器，主要的功能是如何解析和提取 HTML/XML 数据。</p><p>lxml和正则一样，也是用 C 实现的，是一款高性能的 Python HTML/XML 解析器，我们可以利用之前学习的XPath语法，来快速的定位特定元素以及节点信息。</p><p>lxml python 官方文档：<a href="http://lxml.de/index.html" target="_blank" rel="noopener">http://lxml.de/index.html</a></p><p>需要安装C语言库，可使用 pip 安装：pip install lxml</p><h3 id="基本使用："><a href="#基本使用：" class="headerlink" title="基本使用："></a>基本使用：</h3><p>我们可以利用他来解析HTML代码，并且在解析HTML代码的时候，如果HTML代码不规范，他会自动的进行补全。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 lxml 的 etree 库</span></span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree </span><br><span class="line"></span><br><span class="line">text = <span class="string">'''</span></span><br><span class="line"><span class="string"><div></span></span><br><span class="line"><span class="string">    <ul></span></span><br><span class="line"><span class="string">         <li class="item-0"><a href="link1.html">first item</a></li></span></span><br><span class="line"><span class="string">         <li class="item-1"><a href="link2.html">second item</a></li></span></span><br><span class="line"><span class="string">         <li class="item-inactive"><a href="link3.html">third item</a></li></span></span><br><span class="line"><span class="string">         <li class="item-1"><a href="link4.html">fourth item</a></li></span></span><br><span class="line"><span class="string">         <li class="item-0"><a href="link5.html">fifth item</a> # 注意，此处缺少一个 </li> 闭合标签</span></span><br><span class="line"><span class="string">     </ul></span></span><br><span class="line"><span class="string"> </div></span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#利用etree.HTML，将字符串解析为HTML文档</span></span><br><span class="line">html = etree.HTML(text) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 按字符串序列化HTML文档</span></span><br><span class="line">result = etree.tostring(html) </span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></tbody></table></figure><p>输入结果如下：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">html</span>></span><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">ul</span>></span></span><br><span class="line">         <span class="tag"><<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>></span><span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link1.html"</span>></span>first item<span class="tag"></<span class="name">a</span>></span><span class="tag"></<span class="name">li</span>></span></span><br><span class="line">         <span class="tag"><<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1"</span>></span><span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>></span>second item<span class="tag"></<span class="name">a</span>></span><span class="tag"></<span class="name">li</span>></span></span><br><span class="line">         <span class="tag"><<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-inactive"</span>></span><span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>></span>third item<span class="tag"></<span class="name">a</span>></span><span class="tag"></<span class="name">li</span>></span></span><br><span class="line">         <span class="tag"><<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1"</span>></span><span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>></span>fourth item<span class="tag"></<span class="name">a</span>></span><span class="tag"></<span class="name">li</span>></span></span><br><span class="line">         <span class="tag"><<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>></span><span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>></span>fifth item<span class="tag"></<span class="name">a</span>></span><span class="tag"></<span class="name">li</span>></span></span><br><span class="line"><span class="tag"></<span class="name">ul</span>></span></span><br><span class="line"> <span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span><span class="tag"></<span class="name">html</span>></span></span><br></pre></td></tr></tbody></table></figure><p>可以看到。lxml会自动修改HTML代码。例子中不仅补全了li标签，还添加了body，html标签。</p><h3 id="从文件中读取html代码："><a href="#从文件中读取html代码：" class="headerlink" title="从文件中读取html代码："></a>从文件中读取html代码：</h3><p>除了直接使用字符串进行解析，lxml还支持从文件中读取内容。我们新建一个hello.html文件：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><!-- hello.html --></span></span><br><span class="line"><span class="tag"><<span class="name">div</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">ul</span>></span></span><br><span class="line">         <span class="tag"><<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>></span><span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link1.html"</span>></span>first item<span class="tag"></<span class="name">a</span>></span><span class="tag"></<span class="name">li</span>></span></span><br><span class="line">         <span class="tag"><<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1"</span>></span><span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link2.html"</span>></span>second item<span class="tag"></<span class="name">a</span>></span><span class="tag"></<span class="name">li</span>></span></span><br><span class="line">         <span class="tag"><<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-inactive"</span>></span><span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link3.html"</span>></span><span class="tag"><<span class="name">span</span> <span class="attr">class</span>=<span class="string">"bold"</span>></span>third item<span class="tag"></<span class="name">span</span>></span><span class="tag"></<span class="name">a</span>></span><span class="tag"></<span class="name">li</span>></span></span><br><span class="line">         <span class="tag"><<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1"</span>></span><span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link4.html"</span>></span>fourth item<span class="tag"></<span class="name">a</span>></span><span class="tag"></<span class="name">li</span>></span></span><br><span class="line">         <span class="tag"><<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-0"</span>></span><span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">"link5.html"</span>></span>fifth item<span class="tag"></<span class="name">a</span>></span><span class="tag"></<span class="name">li</span>></span></span><br><span class="line">     <span class="tag"></<span class="name">ul</span>></span></span><br><span class="line"> <span class="tag"></<span class="name">div</span>></span></span><br></pre></td></tr></tbody></table></figure><p>然后利用<code>etree.parse()</code>方法来读取文件。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取外部文件 hello.html</span></span><br><span class="line">html = etree.parse(<span class="string">'hello.html'</span>)</span><br><span class="line">result = etree.tostring(html, pretty_print=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></tbody></table></figure><p>输入结果和之前是相同的。</p><h3 id="在lxml中使用XPath语法："><a href="#在lxml中使用XPath语法：" class="headerlink" title="在lxml中使用XPath语法："></a>在lxml中使用XPath语法：</h3><ol><li><p>获取所有li标签：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">   </span><br><span class="line">html = etree.parse(<span class="string">'hello.html'</span>)</span><br><span class="line"><span class="keyword">print</span> type(html)  <span class="comment"># 显示etree.parse() 返回类型</span></span><br><span class="line">   </span><br><span class="line">result = html.xpath(<span class="string">'//li'</span>)</span><br><span class="line">   </span><br><span class="line">print(result)  <span class="comment"># 打印<li>标签的元素集合</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>获取所有li元素下的所有class属性的值：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">   </span><br><span class="line">html = etree.parse(<span class="string">'hello.html'</span>)</span><br><span class="line">result = html.xpath(<span class="string">'//li/@class'</span>)</span><br><span class="line">   </span><br><span class="line">print(result)</span><br></pre></td></tr></tbody></table></figure></li><li><p>获取li标签下href为<code>www.baidu.com</code>的a标签：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">   </span><br><span class="line">html = etree.parse(<span class="string">'hello.html'</span>)</span><br><span class="line">result = html.xpath(<span class="string">'//li/a[@href="www.baidu.com"]'</span>)</span><br><span class="line">   </span><br><span class="line">print(result)</span><br></pre></td></tr></tbody></table></figure></li><li><p>获取li标签下所有span标签：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">   </span><br><span class="line">html = etree.parse(<span class="string">'hello.html'</span>)</span><br><span class="line">   </span><br><span class="line"><span class="comment">#result = html.xpath('//li/span')</span></span><br><span class="line"><span class="comment">#注意这么写是不对的：</span></span><br><span class="line"><span class="comment">#因为 / 是用来获取子元素的，而 <span> 并不是 <li> 的子元素，所以，要用双斜杠</span></span><br><span class="line">   </span><br><span class="line">result = html.xpath(<span class="string">'//li//span'</span>)</span><br><span class="line">   </span><br><span class="line">print(result)</span><br></pre></td></tr></tbody></table></figure></li><li><p>获取li标签下的a标签里的所有class：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">   </span><br><span class="line">html = etree.parse(<span class="string">'hello.html'</span>)</span><br><span class="line">result = html.xpath(<span class="string">'//li/a//@class'</span>)</span><br><span class="line">   </span><br><span class="line">print(result)</span><br></pre></td></tr></tbody></table></figure></li><li><p>获取最后一个li的a的href属性对应的值：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">   </span><br><span class="line">html = etree.parse(<span class="string">'hello.html'</span>)</span><br><span class="line">   </span><br><span class="line">result = html.xpath(<span class="string">'//li[last()]/a/@href'</span>)</span><br><span class="line"><span class="comment"># 谓语 [last()] 可以找到最后一个元素</span></span><br><span class="line">   </span><br><span class="line">print(result)</span><br></pre></td></tr></tbody></table></figure></li><li><p>获取倒数第二个li元素的内容：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">   </span><br><span class="line">html = etree.parse(<span class="string">'hello.html'</span>)</span><br><span class="line">result = html.xpath(<span class="string">'//li[last()-1]/a'</span>)</span><br><span class="line">   </span><br><span class="line"><span class="comment"># text 方法可以获取元素内容</span></span><br><span class="line">print(result[<span class="number">0</span>].text)</span><br></pre></td></tr></tbody></table></figure></li><li><p>获取倒数第二个li元素的内容的第二种方式：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">   </span><br><span class="line">html = etree.parse(<span class="string">'hello.html'</span>)</span><br><span class="line">result = html.xpath(<span class="string">'//li[last()-1]/a/text()'</span>)</span><br><span class="line">   </span><br><span class="line">print(result)</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="使用requests和xpath爬取电影天堂"><a href="#使用requests和xpath爬取电影天堂" class="headerlink" title="使用requests和xpath爬取电影天堂"></a>使用requests和xpath爬取电影天堂</h2><p>示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">BASE_DOMAIN = <span class="string">'http://www.dytt8.net'</span></span><br><span class="line">HEADERS = {</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'Referer'</span>: <span class="string">'http://www.dytt8.net/html/gndy/dyzz/list_23_2.html'</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spider</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'http://www.dytt8.net/html/gndy/dyzz/list_23_1.html'</span></span><br><span class="line">    resp = requests.get(url,headers=HEADERS)</span><br><span class="line">    <span class="comment"># resp.content：经过编码后的字符串</span></span><br><span class="line">    <span class="comment"># resp.text：没有经过编码，也就是unicode字符串</span></span><br><span class="line">    <span class="comment"># text：相当于是网页中的源代码了</span></span><br><span class="line">    text = resp.content.decode(<span class="string">'gbk'</span>)</span><br><span class="line">    <span class="comment"># tree：经过lxml解析后的一个对象，以后使用这个对象的xpath方法，就可以</span></span><br><span class="line">    <span class="comment"># 提取一些想要的数据了</span></span><br><span class="line">    tree = etree.HTML(text)</span><br><span class="line">    <span class="comment"># xpath/beautifulsou4</span></span><br><span class="line">    all_a = tree.xpath(<span class="string">"//div[@class='co_content8']//a"</span>)</span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> all_a:</span><br><span class="line">        title = a.xpath(<span class="string">"text()"</span>)[<span class="number">0</span>]</span><br><span class="line">        href = a.xpath(<span class="string">"@href"</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> href.startswith(<span class="string">'/'</span>):</span><br><span class="line">            detail_url = BASE_DOMAIN + href</span><br><span class="line">            crawl_detail(detail_url)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crawl_detail</span><span class="params">(url)</span>:</span></span><br><span class="line">    resp = requests.get(url,headers=HEADERS)</span><br><span class="line">    text = resp.content.decode(<span class="string">'gbk'</span>)</span><br><span class="line">    tree = etree.HTML(text)</span><br><span class="line">    create_time = tree.xpath(<span class="string">"//div[@class='co_content8']/ul/text()"</span>)[<span class="number">0</span>].strip()</span><br><span class="line">    imgs = tree.xpath(<span class="string">"//div[@id='Zoom']//img/@src"</span>)</span><br><span class="line">    <span class="comment"># 电影海报</span></span><br><span class="line">    cover = imgs[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 电影截图</span></span><br><span class="line">    screenshoot = imgs[<span class="number">1</span>]</span><br><span class="line">    <span class="comment"># 获取span标签下所有的文本</span></span><br><span class="line">    infos = tree.xpath(<span class="string">"//div[@id='Zoom']//text()"</span>)</span><br><span class="line">    <span class="keyword">for</span> index,info <span class="keyword">in</span> enumerate(infos):</span><br><span class="line">        <span class="keyword">if</span> info.startswith(<span class="string">"◎年　　代"</span>):</span><br><span class="line">            year = info.replace(<span class="string">"◎年　　代"</span>,<span class="string">""</span>).strip()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> info.startswith(<span class="string">"◎豆瓣评分"</span>):</span><br><span class="line">            douban_rating = info.replace(<span class="string">"◎豆瓣评分"</span>,<span class="string">''</span>).strip()</span><br><span class="line">            print(douban_rating)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> info.startswith(<span class="string">"◎主　　演"</span>):</span><br><span class="line">            <span class="comment"># 从当前位置，一直往下面遍历</span></span><br><span class="line">            actors = [info]</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> range(index+<span class="number">1</span>,len(infos)):</span><br><span class="line">                actor = infos[x]</span><br><span class="line">                <span class="keyword">if</span> actor.startswith(<span class="string">"◎"</span>):</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                actors.append(actor.strip())</span><br><span class="line">            print(<span class="string">","</span>.join(actors))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    spider()</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;xpath语法与lxml库&quot;&gt;&lt;a href=&quot;#xpath语法与lxml库&quot; class=&quot;headerlink&quot; title=&quot;xpath语法与lxml库&quot;&gt;&lt;/a&gt;xpath语法与lxml库&lt;/h1&gt;&lt;h2 id=&quot;什么是XPath？&quot;&gt;&lt;a href=&quot;#什么是XPath？&quot; class=&quot;headerlink&quot; title=&quot;什么是XPath？&quot;&gt;&lt;/a&gt;什么是XPath？&lt;/h2&gt;&lt;p&gt;xpath（XML Path Language）是一门在XML和HTML文档中查找信息的语言，可用来在XML和HTML文档中对元素和属性进行遍历。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/categories/python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/tags/python%E7%88%AC%E8%99%AB/"/>
    
      <category term="python" scheme="http://philxling.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>requests库</title>
    <link href="http://philxling.cn/[object%20Object]/2020/03/21/python%E7%88%AC%E8%99%AB/4-requests%E5%BA%93/"/>
    <id>http://philxling.cn/[object%20Object]/2020/03/21/python%E7%88%AC%E8%99%AB/4-requests%E5%BA%93/</id>
    <published>2020-03-21T06:45:23.000Z</published>
    <updated>2020-04-02T15:13:04.657Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="4-requests库"><a href="#4-requests库" class="headerlink" title="4-requests库"></a>4-requests库</h1><p>虽然Python的标准库中 urllib模块已经包含了平常我们使用的大多数功能，但是它的 API 使用起来让人感觉不太好，而 Requests宣传是 “HTTP for Humans”，说明使用更简洁方便。</p><a id="more"></a><h2 id="安装和文档地址："><a href="#安装和文档地址：" class="headerlink" title="安装和文档地址："></a>安装和文档地址：</h2><p>利用<code>pip</code>可以非常方便的安装：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></tbody></table></figure><p>中文文档：<a href="http://docs.python-requests.org/zh_CN/latest/index.html" target="_blank" rel="noopener">http://docs.python-requests.org/zh_CN/latest/index.html</a><br>github地址：<a href="https://github.com/requests/requests" target="_blank" rel="noopener">https://github.com/requests/requests</a></p><h2 id="发送GET请求："><a href="#发送GET请求：" class="headerlink" title="发送GET请求："></a>发送GET请求：</h2><ol><li><p>最简单的发送<code>get</code>请求就是通过<code>requests.get</code>来调用：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response = requests.get(<span class="string">"http://www.baidu.com/"</span>)</span><br></pre></td></tr></tbody></table></figure></li><li><p>添加headers和查询参数：<br>如果想添加 headers，可以传入headers参数来增加请求头中的headers信息。如果要将参数放在url中传递，可以利用 params 参数。相关示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">   </span><br><span class="line">kw = {<span class="string">'wd'</span>:<span class="string">'中国'</span>}</span><br><span class="line">   </span><br><span class="line">headers = {<span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36"</span>}</span><br><span class="line">   </span><br><span class="line"><span class="comment"># params 接收一个字典或者字符串的查询参数，字典类型自动转换为url编码，不需要urlencode()</span></span><br><span class="line">response = requests.get(<span class="string">"http://www.baidu.com/s"</span>, params = kw, headers = headers)</span><br><span class="line">   </span><br><span class="line"><span class="comment"># 查看响应内容，response.text 返回的是Unicode格式的数据</span></span><br><span class="line">print(response.text)</span><br><span class="line">   </span><br><span class="line"><span class="comment"># 查看响应内容，response.content返回的字节流数据</span></span><br><span class="line">print(response.content)</span><br><span class="line">   </span><br><span class="line"><span class="comment"># 查看完整url地址</span></span><br><span class="line">print(response.url)</span><br><span class="line">   </span><br><span class="line"><span class="comment"># 查看响应头部字符编码</span></span><br><span class="line">print(response.encoding)</span><br><span class="line">   </span><br><span class="line"><span class="comment"># 查看响应码</span></span><br><span class="line">print(response.status_code)</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="发送POST请求："><a href="#发送POST请求：" class="headerlink" title="发送POST请求："></a>发送POST请求：</h2><ol><li><p>最基本的POST请求可以使用<code>post</code>方法：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response = requests.post(<span class="string">"http://www.baidu.com/"</span>,data=data)</span><br></pre></td></tr></tbody></table></figure></li><li><p>传入data数据：<br>这时候就不要再使用<code>urlencode</code>进行编码了，直接传入一个字典进去就可以了。比如请求拉勾网的数据的代码：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">   </span><br><span class="line">url = <span class="string">"https://www.lagou.com/jobs/positionAjax.json?city=%E6%B7%B1%E5%9C%B3&needAddtionalResult=false&isSchoolJob=0"</span></span><br><span class="line">   </span><br><span class="line">headers = {</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'Referer'</span>: <span class="string">'https://www.lagou.com/jobs/list_python?labelWords=&fromSearch=true&suginput='</span></span><br><span class="line">}</span><br><span class="line">   </span><br><span class="line">data = {</span><br><span class="line">    <span class="string">'first'</span>: <span class="string">'true'</span>,</span><br><span class="line">    <span class="string">'pn'</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">'kd'</span>: <span class="string">'python'</span></span><br><span class="line">}</span><br><span class="line">   </span><br><span class="line">resp = requests.post(url,headers=headers,data=data)</span><br><span class="line"><span class="comment"># 如果是json数据，直接可以调用json方法</span></span><br><span class="line">print(resp.json())</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="使用代理："><a href="#使用代理：" class="headerlink" title="使用代理："></a>使用代理：</h2><p>使用<code>requests</code>添加代理也非常简单，只要在请求的方法中（比如<code>get</code>或者<code>post</code>）传递<code>proxies</code>参数就可以了。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://httpbin.org/get"</span></span><br><span class="line"></span><br><span class="line">headers = {</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span>,</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">proxy = {</span><br><span class="line">    <span class="string">'http'</span>: <span class="string">'171.14.209.180:27829'</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">resp = requests.get(url,headers=headers,proxies=proxy)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'xx.html'</span>,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    fp.write(resp.text)</span><br></pre></td></tr></tbody></table></figure><h2 id="cookie："><a href="#cookie：" class="headerlink" title="cookie："></a>cookie：</h2><p>如果在一个响应中包含了<code>cookie</code>，那么可以利用<code>cookies</code>属性拿到这个返回的<code>cookie</code>值：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://www.renren.com/PLogin.do"</span></span><br><span class="line">data = {<span class="string">"email"</span>:<span class="string">"970138074@qq.com"</span>,<span class="string">'password'</span>:<span class="string">"pythonspider"</span>}</span><br><span class="line">resp = requests.get(<span class="string">'http://www.baidu.com/'</span>)</span><br><span class="line">print(resp.cookies)</span><br><span class="line">print(resp.cookies.get_dict())</span><br></pre></td></tr></tbody></table></figure><h2 id="session："><a href="#session：" class="headerlink" title="session："></a>session：</h2><p>之前使用<code>urllib</code>库，是可以使用<code>opener</code>发送多个请求，多个请求之间是可以共享<code>cookie</code>的。那么如果使用<code>requests</code>，也要达到共享<code>cookie</code>的目的，那么可以使用<code>requests</code>库给我们提供的<code>session</code>对象。注意，这里的<code>session</code>不是web开发中的那个session，这个地方只是一个会话的对象而已。还是以登录人人网为例，使用<code>requests</code>来实现。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://www.renren.com/PLogin.do"</span></span><br><span class="line">data = {<span class="string">"email"</span>:<span class="string">"970138074@qq.com"</span>,<span class="string">'password'</span>:<span class="string">"pythonspider"</span>}</span><br><span class="line">headers = {</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36"</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录</span></span><br><span class="line">session = requests.session()</span><br><span class="line">session.post(url,data=data,headers=headers)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问大鹏个人中心</span></span><br><span class="line">resp = session.get(<span class="string">'http://www.renren.com/880151247/profile'</span>)</span><br><span class="line"></span><br><span class="line">print(resp.text)</span><br></pre></td></tr></tbody></table></figure><h2 id="处理不信任的SSL证书："><a href="#处理不信任的SSL证书：" class="headerlink" title="处理不信任的SSL证书："></a>处理不信任的SSL证书：</h2><p>对于那些已经被信任的SSL整数的网站，比如<code>https://www.baidu.com/</code>，那么使用<code>requests</code>直接就可以正常的返回响应。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">resp = requests.get(<span class="string">'http://www.12306.cn/mormhweb/'</span>,verify=<span class="literal">False</span>)</span><br><span class="line">print(resp.content.decode())</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;4-requests库&quot;&gt;&lt;a href=&quot;#4-requests库&quot; class=&quot;headerlink&quot; title=&quot;4-requests库&quot;&gt;&lt;/a&gt;4-requests库&lt;/h1&gt;&lt;p&gt;虽然Python的标准库中 urllib模块已经包含了平常我们使用的大多数功能，但是它的 API 使用起来让人感觉不太好，而 Requests宣传是 “HTTP for Humans”，说明使用更简洁方便。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/categories/python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/tags/python%E7%88%AC%E8%99%AB/"/>
    
      <category term="python" scheme="http://philxling.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>urllib库</title>
    <link href="http://philxling.cn/[object%20Object]/2020/03/20/python%E7%88%AC%E8%99%AB/3-urllib%E5%BA%93/"/>
    <id>http://philxling.cn/[object%20Object]/2020/03/20/python%E7%88%AC%E8%99%AB/3-urllib%E5%BA%93/</id>
    <published>2020-03-20T09:32:34.000Z</published>
    <updated>2020-04-02T15:12:54.195Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="3-urllib库"><a href="#3-urllib库" class="headerlink" title="3-urllib库"></a>3-urllib库</h1><p><code>urllib</code>库是<code>Python</code>中一个最基本的网络请求库。可以模拟浏览器的行为，向指定的服务器发送一个请求，并可以保存服务器返回的数据。</p><a id="more"></a><h3 id="urlopen函数："><a href="#urlopen函数：" class="headerlink" title="urlopen函数："></a>urlopen函数：</h3><p>在<code>Python3</code>的<code>urllib</code>库中，所有和网络请求相关的方法，都被集到<code>urllib.request</code>模块下面了，以先来看下<code>urlopen</code>函数基本的使用：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line">resp = request.urlopen(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line">print(resp.read())</span><br></pre></td></tr></tbody></table></figure><p>实际上，使用浏览器访问百度，右键查看源代码。你会发现，跟我们刚才打印出来的数据是一模一样的。也就是说，上面的三行代码就已经帮我们把百度的首页的全部代码爬下来了。一个基本的url请求对应的python代码真的非常简单。<br>以下对<code>urlopen</code>函数的进行详细讲解：</p><ol><li><code>url</code>：请求的url。</li><li><code>data</code>：请求的<code>data</code>，如果设置了这个值，那么将变成<code>post</code>请求。</li><li>返回值：返回值是一个<code>http.client.HTTPResponse</code>对象，这个对象是一个类文件句柄对象。有<code>read(size)</code>、<code>readline</code>、<code>readlines</code>以及<code>getcode</code>等方法。</li></ol><h3 id="urlretrieve函数："><a href="#urlretrieve函数：" class="headerlink" title="urlretrieve函数："></a>urlretrieve函数：</h3><p>这个函数可以方便的将网页上的一个文件保存到本地。以下代码可以非常方便的将百度的首页下载到本地：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line">request.urlretrieve(<span class="string">'http://www.baidu.com/'</span>,<span class="string">'baidu.html'</span>)</span><br></pre></td></tr></tbody></table></figure><h3 id="urlencode函数："><a href="#urlencode函数：" class="headerlink" title="urlencode函数："></a>urlencode函数：</h3><p>用浏览器发送请求的时候，如果url中包含了中文或者其他特殊字符，那么浏览器会自动的给我们进行编码。而如果使用代码发送请求，那么就必须手动的进行编码，这时候就应该使用<code>urlencode</code>函数来实现。<code>urlencode</code>可以把字典数据转换为<code>URL</code>编码的数据。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line">data = {<span class="string">'name'</span>:<span class="string">'爬虫基础'</span>,<span class="string">'greet'</span>:<span class="string">'hello world'</span>,<span class="string">'age'</span>:<span class="number">100</span>}</span><br><span class="line">qs = parse.urlencode(data)</span><br><span class="line">print(qs)</span><br></pre></td></tr></tbody></table></figure><h3 id="parse-qs函数："><a href="#parse-qs函数：" class="headerlink" title="parse_qs函数："></a>parse_qs函数：</h3><p>可以将经过编码后的url参数进行解码。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line">qs = <span class="string">"name=%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80&greet=hello+world&age=100"</span></span><br><span class="line">print(parse.parse_qs(qs))</span><br></pre></td></tr></tbody></table></figure><h3 id="urlparse和urlsplit："><a href="#urlparse和urlsplit：" class="headerlink" title="urlparse和urlsplit："></a>urlparse和urlsplit：</h3><p>有时候拿到一个url，想要对这个url中的各个组成部分进行分割，那么这时候就可以使用<code>urlparse</code>或者是<code>urlsplit</code>来进行分割。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,parse</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://www.baidu.com/s?username=python'</span></span><br><span class="line"></span><br><span class="line">result = parse.urlsplit(url)</span><br><span class="line"><span class="comment"># result = parse.urlparse(url)</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'scheme:'</span>,result.scheme)</span><br><span class="line">print(<span class="string">'netloc:'</span>,result.netloc)</span><br><span class="line">print(<span class="string">'path:'</span>,result.path)</span><br><span class="line">print(<span class="string">'query:'</span>,result.query)</span><br></pre></td></tr></tbody></table></figure><p><code>urlparse</code>和<code>urlsplit</code>基本上是一模一样的。唯一不一样的地方是，<code>urlparse</code>里面多了一个<code>params</code>属性，而<code>urlsplit</code>没有这个<code>params</code>属性。比如有一个<code>url</code>为：<code>url = 'http://www.baidu.com/s;hello?wd=python&username=abc#1'</code>，<br>那么<code>urlparse</code>可以获取到<code>hello</code>，而<code>urlsplit</code>不可以获取到。<code>url</code>中的<code>params</code>也用得比较少。</p><h3 id="request-Request类："><a href="#request-Request类：" class="headerlink" title="request.Request类："></a>request.Request类：</h3><p>如果想要在请求的时候增加一些请求头，那么就必须使用<code>request.Request</code>类来实现。比如要增加一个<code>User-Agent</code>，示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">headers = {</span><br><span class="line"><span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span></span><br><span class="line">}</span><br><span class="line">req = request.Request(<span class="string">"http://www.baidu.com/"</span>,headers=headers)</span><br><span class="line">resp = request.urlopen(req)</span><br><span class="line">print(resp.read())</span><br></pre></td></tr></tbody></table></figure><h3 id="内涵段子爬虫实战作业："><a href="#内涵段子爬虫实战作业：" class="headerlink" title="内涵段子爬虫实战作业："></a>内涵段子爬虫实战作业：</h3><ol><li>url链接：<a href="http://neihanshequ.com/bar/1/" target="_blank" rel="noopener">http://neihanshequ.com/bar/1/</a></li><li>要求：能爬取一页的数据就可以了。</li></ol><h3 id="ProxyHandler处理器（代理设置）"><a href="#ProxyHandler处理器（代理设置）" class="headerlink" title="ProxyHandler处理器（代理设置）"></a>ProxyHandler处理器（代理设置）</h3><p>很多网站会检测某一段时间某个IP的访问次数(通过流量统计，系统日志等)，如果访问次数多的不像正常人，它会禁止这个IP的访问。<br>所以我们可以设置一些代理服务器，每隔一段时间换一个代理，就算IP被禁止，依然可以换个IP继续爬取。<br>urllib中通过ProxyHandler来设置使用代理服务器，下面代码说明如何使用自定义opener来使用代理：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个是没有使用代理的</span></span><br><span class="line"><span class="comment"># resp = request.urlopen('http://httpbin.org/get')</span></span><br><span class="line"><span class="comment"># print(resp.read().decode("utf-8"))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个是使用了代理的</span></span><br><span class="line">handler = request.ProxyHandler({<span class="string">"http"</span>:<span class="string">"218.66.161.88:31769"</span>})</span><br><span class="line"></span><br><span class="line">opener = request.build_opener(handler)</span><br><span class="line">req = request.Request(<span class="string">"http://httpbin.org/ip"</span>)</span><br><span class="line">resp = opener.open(req)</span><br><span class="line">print(resp.read())</span><br></pre></td></tr></tbody></table></figure><p>常用的代理有：</p><ul><li>西刺免费代理IP：<a href="http://www.xicidaili.com/" target="_blank" rel="noopener">http://www.xicidaili.com/</a></li><li>快代理：<a href="http://www.kuaidaili.com/" target="_blank" rel="noopener">http://www.kuaidaili.com/</a></li><li>代理云：<a href="http://www.dailiyun.com/" target="_blank" rel="noopener">http://www.dailiyun.com/</a></li></ul><h3 id="什么是cookie："><a href="#什么是cookie：" class="headerlink" title="什么是cookie："></a>什么是cookie：</h3><p>在网站中，http请求是无状态的。也就是说即使第一次和服务器连接后并且登录成功后，第二次请求服务器依然不能知道当前请求是哪个用户。<code>cookie</code>的出现就是为了解决这个问题，第一次登录后服务器返回一些数据（cookie）给浏览器，然后浏览器保存在本地，当该用户发送第二次请求的时候，就会自动的把上次请求存储的<code>cookie</code>数据自动的携带给服务器，服务器通过浏览器携带的数据就能判断当前用户是哪个了。<code>cookie</code>存储的数据量有限，不同的浏览器有不同的存储大小，但一般不超过4KB。因此使用<code>cookie</code>只能存储一些小量的数据。</p><h4 id="cookie的格式："><a href="#cookie的格式：" class="headerlink" title="cookie的格式："></a>cookie的格式：</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: NAME=VALUE；Expires/Max-age=DATE；Path=PATH；Domain=DOMAIN_NAME；SECURE</span><br></pre></td></tr></tbody></table></figure><p>参数意义：</p><ul><li>NAME：cookie的名字。</li><li>VALUE：cookie的值。</li><li>Expires：cookie的过期时间。</li><li>Path：cookie作用的路径。</li><li>Domain：cookie作用的域名。</li><li>SECURE：是否只在https协议下起作用。</li></ul><h3 id="使用cookielib库和HTTPCookieProcessor模拟登录："><a href="#使用cookielib库和HTTPCookieProcessor模拟登录：" class="headerlink" title="使用cookielib库和HTTPCookieProcessor模拟登录："></a>使用cookielib库和HTTPCookieProcessor模拟登录：</h3><p>Cookie 是指网站服务器为了辨别用户身份和进行Session跟踪，而储存在用户浏览器上的文本文件，Cookie可以保持登录信息到用户下次与服务器的会话。<br>这里以人人网为例。人人网中，要访问某个人的主页，必须先登录才能访问，登录说白了就是要有cookie信息。那么如果我们想要用代码的方式访问，就必须要有正确的cookie信息才能访问。解决方案有两种，第一种是使用浏览器访问，然后将cookie信息复制下来，放到headers中。示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">headers = {</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'Cookie'</span>: <span class="string">'anonymid=jacdwz2x-8bjldx; depovince=GW; _r01_=1; _ga=GA1.2.1455063316.1511436360; _gid=GA1.2.862627163.1511436360; wp=1; JSESSIONID=abczwY8ecd4xz8RJcyP-v; jebecookies=d4497791-9d41-4269-9e2b-3858d4989785|||||; ick_login=884e75d4-f361-4cff-94bb-81fe6c42b220; _de=EA5778F44555C091303554EBBEB4676C696BF75400CE19CC; p=61a3c7d0d4b2d1e991095353f83fa2141; first_login_flag=1; ln_uact=970138074@qq.com; ln_hurl=http://hdn.xnimg.cn/photos/hdn121/20170428/1700/main_nhiB_aebd0000854a1986.jpg; t=3dd84a3117737e819dd2c32f1cdb91d01; societyguester=3dd84a3117737e819dd2c32f1cdb91d01; id=443362311; xnsid=169efdc0; loginfrom=syshome; ch_id=10016; jebe_key=9c062f5a-4335-4a91-bf7a-970f8b86a64e%7Ca022c303305d1b2ab6b5089643e4b5de%7C1511449232839%7C1; wp_fold=0'</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://www.renren.com/880151247/profile'</span></span><br><span class="line"></span><br><span class="line">req = request.Request(url,headers=headers)</span><br><span class="line">resp = request.urlopen(req)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'renren.html'</span>,<span class="string">'w'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    fp.write(resp.read().decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></tbody></table></figure><p>但是每次在访问需要cookie的页面都要从浏览器中复制cookie比较麻烦。在Python处理Cookie，一般是通过<code>http.cookiejar</code>模块和<code>urllib模块的HTTPCookieProcessor</code>处理器类一起使用。<code>http.cookiejar</code>模块主要作用是提供用于存储cookie的对象。而<code>HTTPCookieProcessor</code>处理器主要作用是处理这些cookie对象，并构建handler对象。</p><h4 id="http-cookiejar模块："><a href="#http-cookiejar模块：" class="headerlink" title="http.cookiejar模块："></a>http.cookiejar模块：</h4><p>该模块主要的类有CookieJar、FileCookieJar、MozillaCookieJar、LWPCookieJar。这四个类的作用分别如下：</p><ol><li>CookieJar：管理HTTP cookie值、存储HTTP请求生成的cookie、向传出的HTTP请求添加cookie的对象。整个cookie都存储在内存中，对CookieJar实例进行垃圾回收后cookie也将丢失。</li><li>FileCookieJar (filename,delayload=None,policy=None)：从CookieJar派生而来，用来创建FileCookieJar实例，检索cookie信息并将cookie存储到文件中。filename是存储cookie的文件名。delayload为True时支持延迟访问访问文件，即只有在需要时才读取文件或在文件中存储数据。</li><li>MozillaCookieJar (filename,delayload=None,policy=None)：从FileCookieJar派生而来，创建与Mozilla浏览器 cookies.txt兼容的FileCookieJar实例。</li><li>LWPCookieJar (filename,delayload=None,policy=None)：从FileCookieJar派生而来，创建与libwww-perl标准的 Set-Cookie3 文件格式兼容的FileCookieJar实例。</li></ol><h4 id="登录人人网："><a href="#登录人人网：" class="headerlink" title="登录人人网："></a>登录人人网：</h4><p>利用<code>http.cookiejar</code>和<code>request.HTTPCookieProcessor</code>登录人人网。相关示例代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,parse</span><br><span class="line"><span class="keyword">from</span> http.cookiejar <span class="keyword">import</span> CookieJar</span><br><span class="line"></span><br><span class="line">headers = {</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_opener</span><span class="params">()</span>:</span></span><br><span class="line">    cookiejar = CookieJar()</span><br><span class="line">    handler = request.HTTPCookieProcessor(cookiejar)</span><br><span class="line">    opener = request.build_opener(handler)</span><br><span class="line">    <span class="keyword">return</span> opener</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login_renren</span><span class="params">(opener)</span>:</span></span><br><span class="line">    data = {<span class="string">"email"</span>: <span class="string">"970138074@qq.com"</span>, <span class="string">"password"</span>: <span class="string">"pythonspider"</span>}</span><br><span class="line">    data = parse.urlencode(data).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">    login_url = <span class="string">"http://www.renren.com/PLogin.do"</span></span><br><span class="line">    req = request.Request(login_url, headers=headers, data=data)</span><br><span class="line">    opener.open(req)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">visit_profile</span><span class="params">(opener)</span>:</span></span><br><span class="line">    url = <span class="string">'http://www.renren.com/880151247/profile'</span></span><br><span class="line">    req = request.Request(url,headers=headers)</span><br><span class="line">    resp = opener.open(req)</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'renren.html'</span>,<span class="string">'w'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        fp.write(resp.read().decode(<span class="string">"utf-8"</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    opener = get_opener()</span><br><span class="line">    login_renren(opener)</span><br><span class="line">    visit_profile(opener)</span><br></pre></td></tr></tbody></table></figure><h4 id="保存cookie到本地："><a href="#保存cookie到本地：" class="headerlink" title="保存cookie到本地："></a>保存cookie到本地：</h4><p>保存<code>cookie</code>到本地，可以使用<code>cookiejar</code>的<code>save</code>方法，并且需要指定一个文件名：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> http.cookiejar <span class="keyword">import</span> MozillaCookieJar</span><br><span class="line"></span><br><span class="line">cookiejar = MozillaCookieJar(<span class="string">"cookie.txt"</span>)</span><br><span class="line">handler = request.HTTPCookieProcessor(cookiejar)</span><br><span class="line">opener = request.build_opener(handler)</span><br><span class="line"></span><br><span class="line">headers = {</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span></span><br><span class="line">}</span><br><span class="line">req = request.Request(<span class="string">'http://httpbin.org/cookies'</span>,headers=headers)</span><br><span class="line"></span><br><span class="line">resp = opener.open(req)</span><br><span class="line">print(resp.read())</span><br><span class="line">cookiejar.save(ignore_discard=<span class="literal">True</span>,ignore_expires=<span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure><h4 id="从本地加载cookie："><a href="#从本地加载cookie：" class="headerlink" title="从本地加载cookie："></a>从本地加载cookie：</h4><p>从本地加载<code>cookie</code>，需要使用<code>cookiejar</code>的<code>load</code>方法，并且也需要指定方法：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> http.cookiejar <span class="keyword">import</span> MozillaCookieJar</span><br><span class="line"></span><br><span class="line">cookiejar = MozillaCookieJar(<span class="string">"cookie.txt"</span>)</span><br><span class="line">cookiejar.load(ignore_expires=<span class="literal">True</span>,ignore_discard=<span class="literal">True</span>)</span><br><span class="line">handler = request.HTTPCookieProcessor(cookiejar)</span><br><span class="line">opener = request.build_opener(handler)</span><br><span class="line"></span><br><span class="line">headers = {</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span></span><br><span class="line">}</span><br><span class="line">req = request.Request(<span class="string">'http://httpbin.org/cookies'</span>,headers=headers)</span><br><span class="line"></span><br><span class="line">resp = opener.open(req)</span><br><span class="line">print(resp.read())</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;3-urllib库&quot;&gt;&lt;a href=&quot;#3-urllib库&quot; class=&quot;headerlink&quot; title=&quot;3-urllib库&quot;&gt;&lt;/a&gt;3-urllib库&lt;/h1&gt;&lt;p&gt;&lt;code&gt;urllib&lt;/code&gt;库是&lt;code&gt;Python&lt;/code&gt;中一个最基本的网络请求库。可以模拟浏览器的行为，向指定的服务器发送一个请求，并可以保存服务器返回的数据。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/categories/python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/tags/python%E7%88%AC%E8%99%AB/"/>
    
      <category term="python" scheme="http://philxling.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>http协议和Chrome抓包工具</title>
    <link href="http://philxling.cn/[object%20Object]/2020/03/19/python%E7%88%AC%E8%99%AB/2-http%E5%8D%8F%E8%AE%AE%E5%92%8CChrome%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7/"/>
    <id>http://philxling.cn/[object%20Object]/2020/03/19/python%E7%88%AC%E8%99%AB/2-http%E5%8D%8F%E8%AE%AE%E5%92%8CChrome%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7/</id>
    <published>2020-03-19T05:43:00.000Z</published>
    <updated>2020-04-02T15:12:20.147Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="2-http协议和Chrome抓包工具"><a href="#2-http协议和Chrome抓包工具" class="headerlink" title="2-http协议和Chrome抓包工具"></a>2-http协议和Chrome抓包工具</h1><h2 id="什么是http和https协议："><a href="#什么是http和https协议：" class="headerlink" title="什么是http和https协议："></a>什么是http和https协议：</h2><p>HTTP协议：全称是<code>HyperText Transfer Protocol</code>，中文意思是超文本传输协议，是一种发布和接收HTML页面的方法。服务器端口号是<code>80</code>端口。 HTTPS协议：是HTTP协议的加密版本，在HTTP下加入了SSL层。服务器端口号是<code>443</code>端口。</p><a id="more"></a><h2 id="在浏览器中发送一个http请求的过程："><a href="#在浏览器中发送一个http请求的过程：" class="headerlink" title="在浏览器中发送一个http请求的过程："></a>在浏览器中发送一个http请求的过程：</h2><ol><li>当用户在浏览器的地址栏中输入一个URL并按回车键之后，浏览器会向HTTP服务器发送HTTP请求。HTTP请求主要分为“Get”和“Post”两种方法。</li><li>当我们在浏览器输入URL <a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a> 的时候，浏览器发送一个Request请求去获取 <a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a> 的html文件，服务器把Response文件对象发送回给浏览器。</li><li>浏览器分析Response中的 HTML，发现其中引用了很多其他文件，比如Images文件，CSS文件，JS文件。 浏览器会自动再次发送Request去获取图片，CSS文件，或者JS文件。</li><li>当所有的文件都下载成功后，网页会根据HTML语法结构，完整的显示出来了。</li></ol><h2 id="url详解："><a href="#url详解：" class="headerlink" title="url详解："></a>url详解：</h2><p><code>URL</code>是<code>Uniform Resource Locator</code>的简写，统一资源定位符。 一个<code>URL</code>由以下几部分组成：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scheme://host:port/path/?query-string=xxx#anchor</span><br></pre></td></tr></tbody></table></figure><ul><li><strong>scheme</strong>：代表的是访问的协议，一般为<code>http</code>或者<code>https</code>以及<code>ftp</code>等。</li><li><strong>host</strong>：主机名，域名，比如<code>www.baidu.com</code>。</li><li><strong>port</strong>：端口号。当你访问一个网站的时候，浏览器默认使用80端口。</li><li><strong>path</strong>：查找路径。比如：<code>www.jianshu.com/trending/now</code>，后面的<code>trending/now</code>就是<code>path</code>。</li><li><strong>query-string</strong>：查询字符串，比如：<code>www.baidu.com/s?wd=python</code>，后面的<code>wd=python</code>就是查询字符串。</li><li><strong>anchor</strong>：锚点，后台一般不用管，前端用来做页面定位的。</li></ul><p>在浏览器中请求一个<code>url</code>，浏览器会对这个url进行一个编码。除英文字母，数字和部分符号外，其他的全部使用百分号+十六进制码值进行编码。</p><h2 id="常用的请求方法："><a href="#常用的请求方法：" class="headerlink" title="常用的请求方法："></a>常用的请求方法：</h2><p>在<code>Http</code>协议中，定义了八种请求方法。这里介绍两种常用的请求方法，分别是<code>get</code>请求和<code>post</code>请求。</p><ol><li><code>get</code>请求：一般情况下，只从服务器获取数据下来，并不会对服务器资源产生任何影响的时候会使用<code>get</code>请求。</li><li><code>post</code>请求：向服务器发送数据（登录）、上传文件等，会对服务器资源产生影响的时候会使用<code>post</code>请求。 以上是在网站开发中常用的两种方法。并且一般情况下都会遵循使用的原则。但是有的网站和服务器为了做反爬虫机制，也经常会不按常理出牌，有可能一个应该使用<code>get</code>方法的请求就一定要改成<code>post</code>请求，这个要视情况而定。</li></ol><h2 id="请求头常见参数："><a href="#请求头常见参数：" class="headerlink" title="请求头常见参数："></a>请求头常见参数：</h2><p>在<code>http</code>协议中，向服务器发送一个请求，数据分为三部分，第一个是把数据放在url中，第二个是把数据放在<code>body</code>中（在<code>post</code>请求中），第三个就是把数据放在<code>head</code>中。这里介绍在网络爬虫中经常会用到的一些请求头参数：</p><ol><li><code>User-Agent</code>：浏览器名称。这个在网络爬虫中经常会被使用到。请求一个网页的时候，服务器通过这个参数就可以知道这个请求是由哪种浏览器发送的。如果我们是通过爬虫发送请求，那么我们的<code>User-Agent</code>就是<code>Python</code>，这对于那些有反爬虫机制的网站来说，可以轻易的判断你这个请求是爬虫。因此我们要经常设置这个值为一些浏览器的值，来伪装我们的爬虫。</li><li><code>Referer</code>：表明当前这个请求是从哪个<code>url</code>过来的。这个一般也可以用来做反爬虫技术。如果不是从指定页面过来的，那么就不做相关的响应。</li><li><code>Cookie</code>：<code>http</code>协议是无状态的。也就是同一个人发送了两次请求，服务器没有能力知道这两个请求是否来自同一个人。因此这时候就用<code>cookie</code>来做标识。一般如果想要做登录后才能访问的网站，那么就需要发送<code>cookie</code>信息了。</li></ol><h2 id="常见响应状态码："><a href="#常见响应状态码：" class="headerlink" title="常见响应状态码："></a>常见响应状态码：</h2><ol><li><code>200</code>：请求正常，服务器正常的返回数据。</li><li><code>301</code>：永久重定向。比如在访问<code>www.jingdong.com</code>的时候会重定向到<code>www.jd.com</code>。</li><li><code>302</code>：临时重定向。比如在访问一个需要登录的页面的时候，而此时没有登录，那么就会重定向到登录页面。</li><li><code>400</code>：请求的<code>url</code>在服务器上找不到。换句话说就是请求<code>url</code>错误。</li><li><code>403</code>：服务器拒绝访问，权限不够。</li><li><code>500</code>：服务器内部错误。可能是服务器出现<code>bug</code>了。</li></ol><h2 id="Chrome抓包工具："><a href="#Chrome抓包工具：" class="headerlink" title="Chrome抓包工具："></a>Chrome抓包工具：</h2><p><code>Chrome</code>浏览器是一个非常亲近开发者的浏览器。可以方便的查看网络请求以及发送的参数。对着网页<code>右键->检查</code>。然后就可以打开开发者选项。</p></body></html>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;2-http协议和Chrome抓包工具&quot;&gt;&lt;a href=&quot;#2-http协议和Chrome抓包工具&quot; class=&quot;headerlink&quot; title=&quot;2-http协议和Chrome抓包工具&quot;&gt;&lt;/a&gt;2-http协议和Chrome抓包工具&lt;/h1&gt;&lt;h2 id=&quot;什么是http和https协议：&quot;&gt;&lt;a href=&quot;#什么是http和https协议：&quot; class=&quot;headerlink&quot; title=&quot;什么是http和https协议：&quot;&gt;&lt;/a&gt;什么是http和https协议：&lt;/h2&gt;&lt;p&gt;HTTP协议：全称是&lt;code&gt;HyperText Transfer Protocol&lt;/code&gt;，中文意思是超文本传输协议，是一种发布和接收HTML页面的方法。服务器端口号是&lt;code&gt;80&lt;/code&gt;端口。 HTTPS协议：是HTTP协议的加密版本，在HTTP下加入了SSL层。服务器端口号是&lt;code&gt;443&lt;/code&gt;端口。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/categories/python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/tags/python%E7%88%AC%E8%99%AB/"/>
    
      <category term="python" scheme="http://philxling.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫基础续</title>
    <link href="http://philxling.cn/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB%E7%BB%AD/"/>
    <id>http://philxling.cn/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB%E7%BB%AD/</id>
    <published>2020-03-15T10:50:29.000Z</published>
    <updated>2020-04-02T15:14:14.140Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>下载器中间件middleware主要有两个类</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">process_request(spider,request)</span><br><span class="line">process_response()</span><br></pre></td></tr></tbody></table></figure><a id="more"></a><p>使用随机请求头请求url</p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB%E7%BB%AD/image-20200315185902579.png" alt="image-20200315185902579"></p><p>使用随机ip代理</p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB%E7%BB%AD/image-20200315190017859.png" alt="image-20200315190017859"></p><p>使用独享代理ip访问</p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB%E7%BB%AD/image-20200315185421927.png" alt="使用随机ip代理"></p><p>创建爬取boss直聘网的项目使用crawl模板</p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB%E7%BB%AD/image-20200315191040143.png" alt="image-20200315191040143"></p><p>全站爬取简书网</p><p>爬取规则</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rules = (</span><br><span class="line">    Rule(LinkExtractor(allow=<span class="string">r'.*/p/[0-9a-z]{12}.*'</span>), callback=<span class="string">'parse_detail'</span>, follow=<span class="literal">True</span>),</span><br><span class="line">)</span><br><span class="line"><span class="comment"># allow 采用正则表达式的方式 .*表示可有可无</span></span><br></pre></td></tr></tbody></table></figure><p>采用scrapy shell 检验我们的xpath语法是否准确</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入项目根目录</span></span><br><span class="line">E:\pycharm project\py爬虫\jianshu_spider>scrapy shell https://www.jianshu.com/p/<span class="number">2904e60</span>b8e50</span><br></pre></td></tr></tbody></table></figure><p>用xpath解析页面</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">3</span>]: title = response.xpath(<span class="string">"//h1[@class='_1RuRku']//text()"</span>).get()</span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: title</span><br><span class="line">Out[<span class="number">4</span>]: <span class="string">'一位加拿大奶爸教育“熊孩子”的札记'</span></span><br></pre></td></tr></tbody></table></figure><p>采用selenium和webdriver和scrapy和mysql的方式爬取信息</p><p>项目结构</p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB%E7%BB%AD/image-20200317022109645.png" alt="image-20200317022109645"></p><p>jianshu.py</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> scrapy.linkextractors <span class="keyword">import</span> LinkExtractor</span><br><span class="line"><span class="keyword">from</span> scrapy.spiders <span class="keyword">import</span> CrawlSpider, Rule</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> jianshu_spider.items <span class="keyword">import</span> ArticleItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JianshuSpider</span><span class="params">(CrawlSpider)</span>:</span></span><br><span class="line">    name = <span class="string">'jianshu'</span></span><br><span class="line">    allowed_domains = [<span class="string">'jianshu.com'</span>]</span><br><span class="line">    start_urls = [<span class="string">'https://www.jianshu.com/'</span>]</span><br><span class="line"></span><br><span class="line">    rules = (</span><br><span class="line">        Rule(LinkExtractor(allow=<span class="string">r'.*/p/[0-9a-z]{12}.*'</span>), callback=<span class="string">'parse_detail'</span>, follow=<span class="literal">True</span>),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_detail</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="comment"># item['domain_id'] = response.xpath('//input[@id="sid"]/@value').get()</span></span><br><span class="line">        <span class="comment"># item['name'] = response.xpath('//div[@id="name"]').get()</span></span><br><span class="line">        <span class="comment"># item['description'] = response.xpath('//div[@id="description"]').get()</span></span><br><span class="line">        title = response.xpath(<span class="string">"//h1[@class='_1RuRku']//text()"</span>).get()</span><br><span class="line">        author = response.xpath(<span class="string">"//span[@class='_22gUMi']/text()"</span>).get()</span><br><span class="line">        pub_time = response.xpath(<span class="string">"//div[@class='s-dsoj']//time/text()"</span>).get()</span><br><span class="line">        article_id = response.url.split(<span class="string">"/"</span>)[<span class="number">-1</span>]</span><br><span class="line">        origin_url = response.url</span><br><span class="line">        content = response.xpath(<span class="string">"//article[@class='_2rhmJa']"</span>).get()</span><br><span class="line">        item = ArticleItem(</span><br><span class="line">            title=title,</span><br><span class="line">            article_id=article_id, origin_url=origin_url, author=author, content=content, pub_time=pub_time</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">yield</span> item</span><br></pre></td></tr></tbody></table></figure><p>items</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define here the models for your scraped items</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># See documentation in:</span></span><br><span class="line"><span class="comment"># https://docs.scrapy.org/en/latest/topics/items.html</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    title = scrapy.Field()</span><br><span class="line">    content = scrapy.Field()</span><br><span class="line">    article_id = scrapy.Field()</span><br><span class="line">    origin_url = scrapy.Field()</span><br><span class="line">    author = scrapy.Field()</span><br><span class="line">    pub_time = scrapy.Field()</span><br></pre></td></tr></tbody></table></figure><p>middlewares.py 中间件</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define here the models for your spider middleware</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># See documentation in:</span></span><br><span class="line"><span class="comment"># https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> signals</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> scrapy.http.response.html <span class="keyword">import</span> HtmlResponse</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JianshuSpiderSpiderMiddleware</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># Not all methods need to be defined. If a method is not defined,</span></span><br><span class="line">    <span class="comment"># scrapy acts as if the spider middleware does not modify the</span></span><br><span class="line">    <span class="comment"># passed objects.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">from_crawler</span><span class="params">(cls, crawler)</span>:</span></span><br><span class="line">        <span class="comment"># This method is used by Scrapy to create your spiders.</span></span><br><span class="line">        s = cls()</span><br><span class="line">        crawler.signals.connect(s.spider_opened, signal=signals.spider_opened)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_spider_input</span><span class="params">(self, response, spider)</span>:</span></span><br><span class="line">        <span class="comment"># Called for each response that goes through the spider</span></span><br><span class="line">        <span class="comment"># middleware and into the spider.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Should return None or raise an exception.</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_spider_output</span><span class="params">(self, response, result, spider)</span>:</span></span><br><span class="line">        <span class="comment"># Called with the results returned from the Spider, after</span></span><br><span class="line">        <span class="comment"># it has processed the response.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Must return an iterable of Request, dict or Item objects.</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">            <span class="keyword">yield</span> i</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_spider_exception</span><span class="params">(self, response, exception, spider)</span>:</span></span><br><span class="line">        <span class="comment"># Called when a spider or process_spider_input() method</span></span><br><span class="line">        <span class="comment"># (from other spider middleware) raises an exception.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Should return either None or an iterable of Request, dict</span></span><br><span class="line">        <span class="comment"># or Item objects.</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_start_requests</span><span class="params">(self, start_requests, spider)</span>:</span></span><br><span class="line">        <span class="comment"># Called with the start requests of the spider, and works</span></span><br><span class="line">        <span class="comment"># similarly to the process_spider_output() method, except</span></span><br><span class="line">        <span class="comment"># that it doesn’t have a response associated.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Must return only requests (not items).</span></span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> start_requests:</span><br><span class="line">            <span class="keyword">yield</span> r</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">spider_opened</span><span class="params">(self, spider)</span>:</span></span><br><span class="line">        spider.logger.info(<span class="string">'Spider opened: %s'</span> % spider.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JianshuSpiderDownloaderMiddleware</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># Not all methods need to be defined. If a method is not defined,</span></span><br><span class="line">    <span class="comment"># scrapy acts as if the downloader middleware does not modify the</span></span><br><span class="line">    <span class="comment"># passed objects.</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 创建driver使用selenium</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.driver = webdriver.Chrome(executable_path=<span class="string">"E:\Program Files\chromedriver\chromedriver.exe"</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">from_crawler</span><span class="params">(cls, crawler)</span>:</span></span><br><span class="line">        <span class="comment"># This method is used by Scrapy to create your spiders.</span></span><br><span class="line">        s = cls()</span><br><span class="line">        crawler.signals.connect(s.spider_opened, signal=signals.spider_opened)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span><span class="params">(self, request, spider)</span>:</span></span><br><span class="line">        <span class="comment"># Called for each request that goes through the downloader</span></span><br><span class="line">        <span class="comment"># middleware.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Must either:</span></span><br><span class="line">        <span class="comment"># - return None: continue processing this request</span></span><br><span class="line">        <span class="comment"># - or return a Response object</span></span><br><span class="line">        <span class="comment"># - or return a Request object</span></span><br><span class="line">        <span class="comment"># - or raise IgnoreRequest: process_exception() methods of</span></span><br><span class="line">        <span class="comment">#   installed downloader middleware will be called</span></span><br><span class="line">        <span class="comment"># 将pagesource返回解析</span></span><br><span class="line">        <span class="comment"># 返回response对象</span></span><br><span class="line">        self.driver.get(request.url)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        source = self.driver.page_source</span><br><span class="line">        response = HtmlResponse(url=self.driver.current_url, body=source, request=request, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_response</span><span class="params">(self, request, response, spider)</span>:</span></span><br><span class="line">        <span class="comment"># Called with the response returned from the downloader.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Must either;</span></span><br><span class="line">        <span class="comment"># - return a Response object</span></span><br><span class="line">        <span class="comment"># - return a Request object</span></span><br><span class="line">        <span class="comment"># - or raise IgnoreRequest</span></span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_exception</span><span class="params">(self, request, exception, spider)</span>:</span></span><br><span class="line">        <span class="comment"># Called when a download handler or a process_request()</span></span><br><span class="line">        <span class="comment"># (from other downloader middleware) raises an exception.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Must either:</span></span><br><span class="line">        <span class="comment"># - return None: continue processing this exception</span></span><br><span class="line">        <span class="comment"># - return a Response object: stops process_exception() chain</span></span><br><span class="line">        <span class="comment"># - return a Request object: stops process_exception() chain</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">spider_opened</span><span class="params">(self, spider)</span>:</span></span><br><span class="line">        spider.logger.info(<span class="string">'Spider opened: %s'</span> % spider.name)</span><br></pre></td></tr></tbody></table></figure><p>pipelines.py 下载器,采用我们自己写的下载器</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JianshuTwistedPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        dbparams = {</span><br><span class="line">            <span class="string">'host'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">            <span class="string">'port'</span>: <span class="number">3306</span>,</span><br><span class="line">            <span class="string">'user'</span>: <span class="string">'root'</span>,</span><br><span class="line">            <span class="string">'password'</span>: <span class="string">'root'</span>,</span><br><span class="line">            <span class="string">'database'</span>: <span class="string">'jianshu_article'</span>,</span><br><span class="line">            <span class="string">'charset'</span>: <span class="string">'utf8'</span>,</span><br><span class="line">            <span class="string">'cursorclass'</span>: cursors.DictCursor <span class="comment"># 游标</span></span><br><span class="line">        }</span><br><span class="line">        <span class="comment"># 使用scrapy的Twiste创建池</span></span><br><span class="line">        self.dbpool = adbapi.ConnectionPool(<span class="string">'pymysql'</span>, **dbparams)</span><br><span class="line">        self._sql = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sql</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self._sql:</span><br><span class="line">            self._sql = <span class="string">'''</span></span><br><span class="line"><span class="string">                insert into article values(null,%s,%s,%s,%s,%s,%s)</span></span><br><span class="line"><span class="string">            '''</span></span><br><span class="line">            <span class="keyword">return</span> self._sql</span><br><span class="line">        <span class="keyword">return</span> self._sql</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        defer = self.dbpool.runInteraction(self.insert_item, item)</span><br><span class="line"><span class="comment"># </span></span><br><span class="line">        defer.addErrback(self.handle_error, item, spider)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert_item</span><span class="params">(self, cursor, item)</span>:</span></span><br><span class="line">        <span class="comment"># 执行sql语句</span></span><br><span class="line">        cursor.execute(self.sql,</span><br><span class="line">                            (item[<span class="string">'title'</span>], item[<span class="string">'author'</span>], item[<span class="string">'pub_time'</span>], item[<span class="string">'article_id'</span>], item[<span class="string">'origin_url'</span>], item[<span class="string">'content'</span>]))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_error</span><span class="params">(self, error, item, spider)</span>:</span></span><br><span class="line">        print(<span class="string">"="</span>*<span class="number">10</span>+<span class="string">"error"</span>+<span class="string">"="</span>*<span class="number">10</span>)</span><br><span class="line">        print(error)</span><br><span class="line">        print(<span class="string">"="</span>*<span class="number">10</span>+<span class="string">"error"</span>+<span class="string">"="</span>*<span class="number">10</span>)</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;下载器中间件middleware主要有两个类&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;process_request(spider,request)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;process_response()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/categories/python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/tags/python%E7%88%AC%E8%99%AB/"/>
    
      <category term="python" scheme="http://philxling.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>c语言指针</title>
    <link href="http://philxling.cn/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/"/>
    <id>http://philxling.cn/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/</id>
    <published>2020-03-15T10:23:51.000Z</published>
    <updated>2020-04-02T15:04:36.748Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>C语言用三种方式打印数组</p><a id="more"></a><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pointarray2</span><span class="params">(<span class="keyword">int</span> a[])</span></span>{<span class="comment">//用指针变量指向数组元素</span></span><br><span class="line"><span class="keyword">int</span> *<span class="built_in">point</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<<span class="number">10</span>;i++){</span><br><span class="line"><span class="built_in">point</span>=&a[i];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,*<span class="built_in">point</span>);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pointarray</span><span class="params">(<span class="keyword">int</span> a[])</span></span>{<span class="comment">//通过数组名计算数组的元素地址,找出元素的值</span></span><br><span class="line"><span class="keyword">int</span> *<span class="built_in">point</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="built_in">point</span>=a;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<<span class="number">10</span>;i++){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,*(<span class="built_in">point</span>+i));</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>]={<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>};</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<<span class="number">10</span>;i++){<span class="comment">//下标法</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,a[i]);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">pointarray(a);</span><br><span class="line">pointarray2(a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>实现数组倒序存储</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *p1,<span class="keyword">int</span> *p2)</span></span>{</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line">temp=*p1;</span><br><span class="line">*p1=*p2;</span><br><span class="line">*p2=temp;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span>{</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> *low,*high;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<=(n<span class="number">-1</span>)/<span class="number">2</span>;i++){</span><br><span class="line">low=&a[i];</span><br><span class="line">high=&a[n<span class="number">-1</span>-i];<span class="comment">//n-1-i指向对应的元素</span></span><br><span class="line">swap(low,high);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>]={<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">0</span>};</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">10</span>,i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<n;i++){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,a[i]);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"reverse later---------\n"</span>);</span><br><span class="line">reverse(a,<span class="number">10</span>);<span class="comment">//将数组倒叙排放</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<n;i++){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,a[i]);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>max min search</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"><span class="keyword">int</span> *<span class="built_in">max</span>,*<span class="built_in">min</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Max_Min_Search</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> n)</span></span>{</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">max</span>=a;</span><br><span class="line"><span class="built_in">min</span>=a;</span><br><span class="line"><span class="keyword">for</span>(;i<n;i++){</span><br><span class="line"><span class="keyword">if</span>(a[i]>*<span class="built_in">max</span>){</span><br><span class="line"><span class="built_in">max</span>=&a[i];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(a[i]<*<span class="built_in">min</span>){</span><br><span class="line"><span class="built_in">min</span>=&a[i];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>]={<span class="number">24</span>,<span class="number">10</span>,<span class="number">23</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">540</span>,<span class="number">26</span>,<span class="number">30</span>,<span class="number">34</span>,<span class="number">35</span>};</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;i<<span class="number">10</span>;i++){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i]);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"---------------Searching------------------\n"</span>);</span><br><span class="line">Max_Min_Search(a,<span class="number">10</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"max=%d min=%d\n"</span>,*<span class="built_in">max</span>,*<span class="built_in">min</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191024163739066.png" alt="image-20191024163739066"></p><p>打印二维数组</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintTwoArray</span><span class="params">(<span class="keyword">int</span> (*a)[<span class="number">4</span>],<span class="keyword">int</span> row,<span class="keyword">int</span> len)</span></span>{<span class="comment">//(*a)[4]必须要传递列值,数组指针变量</span></span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<row;i++){</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j<len;j++){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,*(*(a+i)+j));</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>]={<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">3</span>};</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a的地址:%d\n"</span>,a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a: %d\n"</span>,&a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a[0]:%d\n"</span>,a[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"*(*(a+1)):%d\n"</span>,*(*(a+<span class="number">1</span>)));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"*(*(a+1)+2):%d\n"</span>,*(*(a+<span class="number">1</span>)+<span class="number">2</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"&a[1][0]:%d\n"</span>,&a[<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"--------------------\n"</span>);</span><br><span class="line">PrintTwoArray(a,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>copy字符串</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_string</span><span class="params">(<span class="keyword">char</span> *<span class="built_in">string</span>)</span></span>{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"----------------string b is------\n"</span>);</span><br><span class="line"><span class="keyword">for</span>(;*<span class="built_in">string</span>!=<span class="string">'\0'</span>;<span class="built_in">string</span>++){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,*<span class="built_in">string</span>);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_string5</span><span class="params">(<span class="keyword">char</span> *a,<span class="keyword">char</span> *b)</span></span>{</span><br><span class="line"><span class="keyword">char</span> *p;</span><br><span class="line">p=b;</span><br><span class="line"><span class="keyword">while</span>(*p++=*a++){}</span><br><span class="line">p=b;</span><br><span class="line">print_string(p);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_string4</span><span class="params">(<span class="keyword">char</span> *a,<span class="keyword">char</span> *b)</span></span>{</span><br><span class="line"><span class="keyword">char</span> *p;</span><br><span class="line">p=b;</span><br><span class="line"><span class="keyword">while</span>(*a!=<span class="string">'\0'</span>){</span><br><span class="line">*p++=*a++;</span><br><span class="line">}</span><br><span class="line">p=b;</span><br><span class="line">print_string(p);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_string3</span><span class="params">(<span class="keyword">char</span> *a,<span class="keyword">char</span> *b)</span></span>{</span><br><span class="line"><span class="keyword">char</span> *p;</span><br><span class="line">p=b;</span><br><span class="line"><span class="keyword">while</span>((*p++=*a++)!=<span class="string">'\0'</span>){</span><br><span class="line">}</span><br><span class="line">p=b;</span><br><span class="line">print_string(p);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_string2</span><span class="params">(<span class="keyword">char</span> *a,<span class="keyword">char</span> *b)</span></span>{</span><br><span class="line"><span class="keyword">char</span> *p;</span><br><span class="line">p=b;</span><br><span class="line"><span class="keyword">while</span>((*p=*a)!=<span class="string">'\0'</span>){</span><br><span class="line">p++;</span><br><span class="line">a++;</span><br><span class="line">}</span><br><span class="line">p=b;</span><br><span class="line">print_string(p);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_string1</span><span class="params">(<span class="keyword">char</span> *a,<span class="keyword">char</span> *b)</span></span>{</span><br><span class="line"><span class="keyword">char</span> *p1,*p2;</span><br><span class="line">p2=b;</span><br><span class="line">p1=a;</span><br><span class="line"><span class="keyword">for</span>(;*p1!=<span class="string">'\0'</span>;p1++,p2++){</span><br><span class="line">*p2=*p1;</span><br><span class="line">}</span><br><span class="line">*p2=<span class="string">'\0'</span>;</span><br><span class="line">p2=b;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"-------------------------\n"</span>);</span><br><span class="line">print_string(p2);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">char</span> <span class="built_in">string</span>[]=<span class="string">"hello world"</span>;</span><br><span class="line"><span class="keyword">char</span> *a=<span class="string">"i love you"</span>,b[]=<span class="string">"hello world "</span>,*p1,*p2;<span class="comment">//此处应该定义为char b[] 而不能用char  *b;因为char *b放在了常量区,不能被修改.</span></span><br><span class="line"><span class="keyword">char</span> *s=<span class="string">"hello "</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>,<span class="built_in">string</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>,s);</span><br><span class="line"></span><br><span class="line">p1=a;</span><br><span class="line">p2=b;</span><br><span class="line"><span class="keyword">for</span>(;*p1!=<span class="string">'\0'</span>;p1++,p2++){</span><br><span class="line">*p2=*p1;</span><br><span class="line">}</span><br><span class="line">*p2=<span class="string">'\0'</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"----------------string b is-------\n"</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;b[i]!=<span class="string">'\0'</span>;i++){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,b[i]);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"---------------------\n"</span>);</span><br><span class="line">copy_string1(a,b);</span><br><span class="line">copy_string2(a,b);</span><br><span class="line">copy_string3(a,b);</span><br><span class="line">copy_string4(a,b);</span><br><span class="line">copy_string5(a,b);</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191025192914077.png" alt="image-20191025192914077"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191025200423203.png" alt="image-20191025200423203"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191025200537661.png" alt="image-20191025200537661"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191025200650572.png" alt="image-20191025200650572"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191025201016685.png" alt="image-20191025201016685"></p><p>指针函数传递参数</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>{</span><br><span class="line"><span class="keyword">return</span> x+y;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>{</span><br><span class="line"><span class="keyword">if</span>(x>y){</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>{</span><br><span class="line"><span class="keyword">if</span>(x>y){</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prosess</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> (*fun)())</span></span>{<span class="comment">///////////////////</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,fun(x,y));</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prosess</span><span class="params">(<span class="keyword">int</span> ,<span class="keyword">int</span> ,<span class="keyword">int</span> (*fun)())</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&a,&b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"max="</span>);</span><br><span class="line">prosess(a,b,<span class="built_in">max</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"min="</span>);</span><br><span class="line">prosess(a,b,<span class="built_in">min</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"sum="</span>);</span><br><span class="line">prosess(a,b,add);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输入序号打印学生各科成绩</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> *<span class="title">search</span><span class="params">(<span class="keyword">int</span> (*score)[<span class="number">4</span>],<span class="keyword">int</span> id)</span></span>{</span><br><span class="line"><span class="keyword">return</span> *(score+id);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> score[][<span class="number">4</span>]={<span class="number">12</span>,<span class="number">3</span>,<span class="number">34</span>,<span class="number">54</span>,<span class="number">56</span>,<span class="number">25</span>,<span class="number">63</span>,<span class="number">90</span>,<span class="number">12</span>,<span class="number">57</span>,<span class="number">63</span>,<span class="number">27</span>};</span><br><span class="line"><span class="keyword">int</span> id,i;</span><br><span class="line"><span class="keyword">int</span> *p;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&id);</span><br><span class="line"><span class="keyword">if</span>(id<span class="number">-1</span>><span class="number">0</span>&&id<span class="number">-1</span><<span class="number">3</span>){</span><br><span class="line">p=search(score,id<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<<span class="number">4</span>;i++){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,*(p+i));</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>判断不及格的学生</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> *<span class="title">search</span><span class="params">(<span class="keyword">int</span> (*score)[<span class="number">4</span>],<span class="keyword">int</span> id)</span></span>{</span><br><span class="line"><span class="keyword">return</span> *(score+id);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">print_score1</span><span class="params">(<span class="keyword">int</span> (*score)[<span class="number">4</span>],<span class="keyword">int</span> i)</span></span>{</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j<<span class="number">4</span>;j++){</span><br><span class="line"><span class="keyword">if</span>(*(*(score+i)+j)<<span class="number">60</span>){</span><br><span class="line"><span class="keyword">return</span> i+<span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_score</span><span class="params">(<span class="keyword">int</span> *p)</span></span>{</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;i<<span class="number">4</span>;i++){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,*(p+i));</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> score[][<span class="number">4</span>]={<span class="number">12</span>,<span class="number">3</span>,<span class="number">34</span>,<span class="number">54</span>,<span class="number">70</span>,<span class="number">89</span>,<span class="number">63</span>,<span class="number">90</span>,<span class="number">12</span>,<span class="number">57</span>,<span class="number">63</span>,<span class="number">27</span>};</span><br><span class="line"><span class="keyword">int</span> id,i;</span><br><span class="line"><span class="keyword">int</span> *p1;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&id);</span><br><span class="line"><span class="keyword">if</span>(id<span class="number">-1</span>>=<span class="number">0</span>&&id<span class="number">-1</span><<span class="number">3</span>){</span><br><span class="line">p1=search(score,id<span class="number">-1</span>);</span><br><span class="line">print_score(p1);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<<span class="number">3</span>;i++){</span><br><span class="line"><span class="keyword">if</span>(print_score1(score,i)><span class="number">0</span>){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d号不及格 "</span>,print_score1(score,i));</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"及格 "</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191026001020291.png" alt="image-20191026001020291"></p><p>字符串排序</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><string.h></span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">char</span> *name[],<span class="keyword">int</span> n)</span></span>{</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">char</span> *p;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<n<span class="number">-1</span>;i++){</span><br><span class="line"><span class="keyword">for</span>(j=i+<span class="number">1</span>;j<n;j++){</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(name[i],name[j])><span class="number">0</span>){</span><br><span class="line">p=name[i];</span><br><span class="line">name[i]=name[j];</span><br><span class="line">name[j]=p;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> *name[] , <span class="keyword">int</span> n)</span></span>{</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<n;i++){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s "</span>,name[i]);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{<span class="comment">//指针数组</span></span><br><span class="line"><span class="keyword">char</span> *name[]={<span class="string">"php"</span>,<span class="string">"go"</span>,<span class="string">"c++"</span>,<span class="string">"java"</span>,<span class="string">"c"</span>};</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n=<span class="number">5</span>;</span><br><span class="line">sort(name,n);</span><br><span class="line"><span class="built_in">print</span>(name,n);</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191026004814972.png" alt="image-20191026004814972"></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> *name[]={<span class="string">"php"</span>,<span class="string">"go"</span>,<span class="string">"c++"</span>,<span class="string">"java"</span>,<span class="string">"c"</span>};</span><br><span class="line"><span class="keyword">char</span> **p;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<n;i++){</span><br><span class="line">p=name+i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%5s"</span>,*p);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191026005311004.png" alt="image-20191026005311004"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191026005650753.png" alt="image-20191026005650753"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191026010454116.png" alt="image-20191026010454116"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191026010537453.png" alt="image-20191026010537453"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191026010620952.png" alt="image-20191026010620952"></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> name[]={<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">53</span>,<span class="number">3</span>};</span><br><span class="line"><span class="keyword">int</span> *p1,*p2;</span><br><span class="line">p1=&name[<span class="number">1</span>];</span><br><span class="line">p2=&name[<span class="number">4</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,p2-p1);<span class="comment">//3</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191026011538963.png" alt="image-20191026011538963"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191026011736366.png" alt="image-20191026011736366"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191026011836077.png" alt="image-20191026011836077"></p><p>带参数的宏定义</p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027135958486.png" alt="image-20191027135958486"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027140124000.png" alt="image-20191027140124000"></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M(a,b) (a>b)?a:b</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&a,&b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"max=%d"</span>,M(a,b));</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027140729793.png" alt="image-20191027140729793"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027140848028.png" alt="image-20191027140848028"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027141110205.png" alt="image-20191027141110205"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027141521576.png" alt="image-20191027141521576"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027142416728.png" alt="image-20191027142416728"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027142443507.png" alt="image-20191027142443507.png"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027143938237.png" alt="image-20191027143938237"></p><p>结构体</p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027144701230.png" alt="image-20191027144701230"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027150035130.png" alt="image-20191027150035130"></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">date</span>{</span></span><br><span class="line"><span class="keyword">int</span> year;</span><br><span class="line"><span class="keyword">int</span> month;</span><br><span class="line"><span class="keyword">int</span> day;</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">struct</span>{</span></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">char</span> *name;</span><br><span class="line"><span class="keyword">char</span> gender;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line"><span class="keyword">char</span> *addr;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">date</span> <span class="title">birthday</span>;</span></span><br><span class="line">}student1,student2={<span class="number">1</span>,<span class="string">"hanmeimei"</span>,<span class="string">'m'</span>,<span class="number">45</span>,<span class="number">22.2f</span>,<span class="string">"hubei"</span>,<span class="number">2019</span>,<span class="number">12</span>,<span class="number">12</span>};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">student1=student2;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"number=%d\nname=%s\ngender=%c\nage=%d\nscore=%f\naddr=%s\nbirthday=%d-%d-%d\n"</span>,student1.id,student1.name,student1.gender,student1.age,student1.score,student1.addr,student1.birthday.year,student1.birthday.month,student1.birthday.day);</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>实现投票</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><string.h></span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PushTicket</span>{</span></span><br><span class="line"><span class="keyword">char</span> *name;</span><br><span class="line"><span class="keyword">int</span> ticket;</span><br><span class="line">}*<span class="built_in">point</span>,ticket[<span class="number">5</span>]={{<span class="string">"hanmeimei"</span>,<span class="number">0</span>},{<span class="string">"lilei"</span>,<span class="number">0</span>},{<span class="string">"lili"</span>,<span class="number">0</span>},{<span class="string">"c"</span>,<span class="number">0</span>},{<span class="string">"java"</span>,<span class="number">0</span>}};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintTicket</span><span class="params">(struct PushTicket *<span class="built_in">point</span>)</span></span>{</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="built_in">point</span>=ticket;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"------------候选人的票-----------\n"</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<<span class="number">5</span>;i++,<span class="built_in">point</span>++){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s-----:%d\n"</span>,<span class="built_in">point</span>->name,<span class="built_in">point</span>->ticket);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">compare</span><span class="params">(<span class="keyword">char</span> *input)</span></span>{</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="built_in">point</span>=ticket;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<<span class="number">5</span>;i++,<span class="built_in">point</span>++){</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(input,<span class="built_in">point</span>->name)==<span class="number">0</span>){</span><br><span class="line">(<span class="built_in">point</span>->ticket)++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">char</span> input[<span class="number">20</span>];</span><br><span class="line"><span class="built_in">point</span>=ticket;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"------------候选人-----------\n"</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<<span class="number">5</span>;i++,<span class="built_in">point</span>++){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s "</span>,<span class="built_in">point</span>->name);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"---------------\n"</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入候选人名称投票:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,&input);</span><br><span class="line">compare(input);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(input,<span class="string">"-1"</span>)==<span class="number">0</span>){</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">PrintTicket(<span class="built_in">point</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>动态数组</p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027183935021.png" alt="image-20191027183935021"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027184043371.png" alt="image-20191027184043371"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027184110721.png" alt="image-20191027184110721"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027184156656.png" alt="image-20191027184156656"></p><p>链表</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>{</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">next</span>;</span></span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintLink</span><span class="params">(struct student *p)</span></span>{</span><br><span class="line"><span class="keyword">while</span>(p!=<span class="literal">NULL</span>){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"num=%d,score=%f"</span>,p->num,p->score);</span><br><span class="line">p=p->next;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">a</span>,<span class="title">b</span>,<span class="title">c</span>,*<span class="title">head</span>;</span></span><br><span class="line">a.num=<span class="number">1</span>;</span><br><span class="line">a.score=<span class="number">89.0f</span>;</span><br><span class="line">a.next=&b;</span><br><span class="line">b.num=<span class="number">2</span>;</span><br><span class="line">b.score=<span class="number">90</span>;</span><br><span class="line">b.next=&c;</span><br><span class="line">c.num=<span class="number">3</span>;</span><br><span class="line">c.score=<span class="number">100</span>;</span><br><span class="line">c.next=<span class="literal">NULL</span>;</span><br><span class="line">head=&a;</span><br><span class="line">PrintLink(head);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191027223049024.png" alt="image-20191027223049024"></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><malloc.h></span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEN sizeof(struct student)</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>{</span><span class="comment">//定义链表</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">next</span>;</span></span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(struct student *head)</span></span>{<span class="comment">//打印链表</span></span><br><span class="line"><span class="keyword">while</span>(head!=<span class="literal">NULL</span>){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"num=%d,score=%f\n"</span>,head->num,head->score);</span><br><span class="line">head=head->next;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function">struct student *<span class="title">DeleteNode</span><span class="params">(<span class="keyword">int</span> input,struct student *head)</span></span>{</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p1</span>,*<span class="title">p2</span>;</span></span><br><span class="line"><span class="keyword">if</span>(head==<span class="literal">NULL</span>){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"空链表\n"</span>);</span><br><span class="line">}</span><br><span class="line">p1=head;</span><br><span class="line"><span class="keyword">while</span>(p1->num!=input&&p1->next!=<span class="literal">NULL</span>){<span class="comment">//当输入的shu和链表的书不相等时.</span></span><br><span class="line">p2=p1;</span><br><span class="line">p1=p1->next;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(p1->num==input){</span><br><span class="line"><span class="keyword">if</span>(p1==head){</span><br><span class="line">head=p1->next;</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line">p2->next=p1->next;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">}</span><br><span class="line"><span class="function">struct student *<span class="title">insert</span><span class="params">(struct student *stu,struct student *head)</span></span>{<span class="comment">//有bug</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p1</span>,*<span class="title">p2</span>,*<span class="title">p0</span>;</span></span><br><span class="line">p0=stu;</span><br><span class="line"><span class="keyword">if</span>(head==<span class="literal">NULL</span>){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NUll linktable\n"</span>);</span><br><span class="line">}</span><br><span class="line">p1=head;</span><br><span class="line"><span class="keyword">while</span>(p0->num>p1->num&&(p1->next!=<span class="literal">NULL</span>)){</span><br><span class="line">p2=p1;</span><br><span class="line">p1=p1->next;</span><br><span class="line"><span class="keyword">if</span>(p0->num<=p1->num){</span><br><span class="line"><span class="keyword">if</span>(head==p1){</span><br><span class="line">head=p0;</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line">p2->next=p0;</span><br><span class="line">p0->next=p1;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line">p1->next=p0;</span><br><span class="line">p0->next=<span class="literal">NULL</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">p1=head;</span><br><span class="line">p2=p1;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function">struct student *<span class="title">create</span><span class="params">()</span></span>{<span class="comment">//创建链表</span></span><br><span class="line"><span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">head</span>,*<span class="title">p1</span>,*<span class="title">p2</span>;</span></span><br><span class="line">p1=p2=(struct student *)<span class="built_in">malloc</span>(LEN);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"input num-------------:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&p1->num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"input score-----------:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%f"</span>,&p1->score);</span><br><span class="line">head=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span>(p1->num!=<span class="number">0</span>){</span><br><span class="line">n++;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>){</span><br><span class="line">head=p1;</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line">p2->next=p1;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p2=p1;</span><br><span class="line">p1=(struct student *)<span class="built_in">malloc</span>(LEN);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"input num-------------:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&p1->num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"input score-----------:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%f"</span>,&p1->score);</span><br><span class="line">}</span><br><span class="line">p2->next=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> input;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">stu</span>,*<span class="title">p</span>,<span class="title">stu1</span>;</span></span><br><span class="line">stu=create();</span><br><span class="line">p=stu;</span><br><span class="line"><span class="built_in">print</span>(p);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"删除节点-----:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&input);</span><br><span class="line"><span class="built_in">print</span>(DeleteNode(input,p));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"插入节点"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"input num-------------:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&stu1.num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"input score-----------:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%f"</span>,&stu1.score);</span><br><span class="line"><span class="built_in">print</span>(insert(&stu1,stu));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"插入节点"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"input num-------------:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&stu1.num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"input score-----------:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%f"</span>,&stu1.score);</span><br><span class="line"><span class="built_in">print</span>(insert(&stu1,stu));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191028182743903.png" alt="image-20191028182743903"></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdlib.h></span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">FILE *file;</span><br><span class="line"><span class="keyword">if</span>(!(file=fopen(<span class="string">"d:\\hello.txt"</span>,<span class="string">"w"</span>))){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"error"</span>);</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"success!!!\n"</span>);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191029131827023.png" alt="image-20191029131827023"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191029142743283.png" alt="image-20191029142743283"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191029144251829.png" alt="image-20191029144251829"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191029144350161.png" alt="image-20191029144350161"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191029144636084.png" alt="image-20191029144636084"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191029144811799.png" alt="image-20191029144811799"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191029144847446.png" alt="image-20191029144847446"></p><p>用位运算实现大小写转换</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"please input char:"</span>);</span><br><span class="line">ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(!(ch><span class="string">'A'</span>&&ch<<span class="string">'z'</span>)||(ch><span class="string">'Z'</span>&&ch<<span class="string">'a'</span>)){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"error please input:\n"</span>);</span><br><span class="line">ch=getchar();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(ch & <span class="number">32</span>){<span class="comment">//32的二进制位是100000 ch&100000得到第五位数是0,然后就换转大写</span></span><br><span class="line">ch=ch&<span class="number">223</span>;</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line"></span><br><span class="line">ch=ch|<span class="number">255</span>;<span class="comment">//得到第五位数是1 转小写.</span></span><br><span class="line">}</span><br><span class="line"><span class="built_in">putchar</span>(ch);</span><br><span class="line"></span><br><span class="line">ch=getchar();<span class="comment">//打印回车</span></span><br><span class="line"><span class="built_in">putchar</span>(ch);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191029151159306.png" alt="image-20191029151159306"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191029151309955.png" alt="image-20191029151309955"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191029151500290.png" alt="image-20191029151500290"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191029151813040.png" alt="image-20191029151813040"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191029152251623.png" alt="image-20191029152251623"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191029152632086.png" alt="image-20191029152632086"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191029152726176.png" alt="image-20191029152726176"></p><p><img src="/[object%20Object]/2020/03/15/c++/1-c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/image-20191029153550877.png" alt="image-20191029153550877"></p><p>struct与malloc</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><malloc.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEN sizeof(struct student)</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>{</span></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">char</span> *name;</span><br><span class="line"><span class="keyword">int</span> score;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(struct student *p)</span></span>{</span><br><span class="line">(*p).id=<span class="number">12</span>;</span><br><span class="line">p->name=<span class="string">"hello"</span>;</span><br><span class="line">p->score=<span class="number">90</span>;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">(struct student *p)</span></span>{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %s %d\n"</span>,p->id,p->name,p->score);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">stu</span>;</span></span><br><span class="line">stu=(struct student *)<span class="built_in">malloc</span>(LEN);</span><br><span class="line">fun(stu);</span><br><span class="line"><span class="comment">//printf("%d %s %d",stu.id,stu.name,stu.score);</span></span><br><span class="line">show(stu);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>动态数组的增删排</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><malloc.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdlib.h></span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Arr</span>{</span></span><br><span class="line"><span class="keyword">int</span> *pBase;<span class="comment">//数组的首地址</span></span><br><span class="line"><span class="keyword">int</span> len;<span class="comment">//数组的长度</span></span><br><span class="line"><span class="keyword">int</span> cnt;<span class="comment">//当前有效元素的个数</span></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_arr</span><span class="params">(struct Arr *,<span class="keyword">int</span> length)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">append_arr</span><span class="params">(struct Arr *,<span class="keyword">int</span> val)</span></span>;<span class="comment">//追加</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insert_arr</span><span class="params">(struct Arr *,<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delete_arr</span><span class="params">(struct Arr *,<span class="keyword">int</span> pos,<span class="keyword">int</span> *val)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//int get();</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_empty</span><span class="params">(struct Arr *p)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_full</span><span class="params">(struct Arr *p)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sort_arr</span><span class="params">(struct Arr *p)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_arr</span><span class="params">(struct Arr *p)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">reverse_arr</span><span class="params">(struct Arr *p)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Arr</span> <span class="title">arr</span>;</span></span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line">init_arr(&arr,<span class="number">6</span>);</span><br><span class="line">append_arr(&arr,<span class="number">100</span>);</span><br><span class="line">append_arr(&arr,<span class="number">99</span>);</span><br><span class="line">append_arr(&arr,<span class="number">80</span>);</span><br><span class="line">append_arr(&arr,<span class="number">23</span>);</span><br><span class="line"><span class="keyword">if</span>(append_arr(&arr,<span class="number">45</span>)){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"append success\n"</span>);</span><br><span class="line">}</span><br><span class="line">insert_arr(&arr,<span class="number">7</span>,<span class="number">555</span>);</span><br><span class="line"><span class="keyword">if</span>(append_arr(&arr,<span class="number">567</span>)){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"append success\n"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(append_arr(&arr,<span class="number">1000</span>)==<span class="number">1</span>){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"append success\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,arr.cnt);</span><br><span class="line">show_arr(&arr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"----------删除元素-------\n"</span>);</span><br><span class="line">delete_arr(&arr,<span class="number">3</span>,&val);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"--------删除的元素是:%d\n"</span>,val);</span><br><span class="line">show_arr(&arr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"----------倒置元素--------\n"</span>);</span><br><span class="line">reverse_arr(&arr);</span><br><span class="line">show_arr(&arr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"----------排序-------------\n"</span>);</span><br><span class="line">sort_arr(&arr);</span><br><span class="line">show_arr(&arr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,arr.cnt);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_arr</span><span class="params">(struct Arr *p,<span class="keyword">int</span> length)</span></span>{</span><br><span class="line">p->pBase=(<span class="keyword">int</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*length);</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span>==p->pBase){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"error\n"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">}</span><br><span class="line">p->len=length;</span><br><span class="line">p->cnt=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_empty</span><span class="params">(struct Arr *p)</span></span>{</span><br><span class="line"><span class="keyword">if</span>(p->cnt==<span class="number">0</span>){</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_arr</span><span class="params">(struct Arr *p)</span></span>{</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">if</span>(is_empty(p)==<span class="number">1</span>){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"数组为空\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i<p->cnt;i++){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,*(p->pBase+i));</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_full</span><span class="params">(struct Arr *p)</span></span>{</span><br><span class="line"><span class="keyword">if</span>(p->cnt==p->len){</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">append_arr</span><span class="params">(struct Arr *p,<span class="keyword">int</span> val)</span></span>{</span><br><span class="line"><span class="keyword">if</span>(is_full(p)==<span class="number">1</span>){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"数组已满\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//不满时</span></span><br><span class="line">p->pBase[p->cnt]=val;</span><br><span class="line">(p->cnt)++;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insert_arr</span><span class="params">(struct Arr *p,<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span>{</span><br><span class="line"><span class="keyword">int</span> i=(p->cnt)<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(pos<<span class="number">1</span>||pos>(p->cnt)+<span class="number">1</span>){<span class="comment">//<1或者大于当前有效元素</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(is_full(p)==<span class="number">1</span>){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"数组已满\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//pos的值从1开始,且从pos的位置之前插入</span></span><br><span class="line"><span class="keyword">for</span>(;i>=pos<span class="number">-1</span>;i--){</span><br><span class="line">p->pBase[i+<span class="number">1</span>]=p->pBase[i];</span><br><span class="line">}</span><br><span class="line">p->pBase[pos<span class="number">-1</span>]=val;</span><br><span class="line">(p->cnt)++;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delete_arr</span><span class="params">(struct Arr *p,<span class="keyword">int</span> pos,<span class="keyword">int</span> *val)</span></span>{</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">if</span>(is_empty(p)==<span class="number">1</span>){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"数组为空\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(pos<<span class="number">1</span>||pos>p->cnt){</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">*val=p->pBase[pos<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(i=pos;i<=p->cnt;i++){</span><br><span class="line">p->pBase[i<span class="number">-1</span>]=p->pBase[i];</span><br><span class="line">}</span><br><span class="line">(p->cnt)--;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">reverse_arr</span><span class="params">(struct Arr *p)</span></span>{</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,temp,j=p->cnt<span class="number">-1</span>;</span><br><span class="line"><span class="comment">//int *low,*high;</span></span><br><span class="line"><span class="keyword">if</span>(is_empty(p)==<span class="number">1</span>){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"数组为空\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">while</span>(i<j){</span><br><span class="line">temp=p->pBase[i];</span><br><span class="line">p->pBase[i]=p->pBase[j];</span><br><span class="line">p->pBase[j]=temp;</span><br><span class="line">i++;</span><br><span class="line">j--;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*low=&(p->pBase[0]);</span></span><br><span class="line"><span class="comment">high=&(p->pBase[p->cnt]);</span></span><br><span class="line"><span class="comment">for(i=0;i<=(high-low)/4;i++){</span></span><br><span class="line"><span class="comment">low=&(p->pBase[i]);</span></span><br><span class="line"><span class="comment">high=&(p->pBase[p->cnt-1-i]);</span></span><br><span class="line"><span class="comment">temp=*low;</span></span><br><span class="line"><span class="comment">*low=*high;</span></span><br><span class="line"><span class="comment">*high=temp;</span></span><br><span class="line"><span class="comment">}*/</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sort_arr</span><span class="params">(struct Arr *p)</span></span>{</span><br><span class="line"><span class="keyword">int</span> i,<span class="built_in">min</span>,j,temp;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j<p->cnt;j++){</span><br><span class="line"><span class="built_in">min</span>=p->pBase[j];</span><br><span class="line"><span class="keyword">for</span>(i=j+<span class="number">1</span>;i<p->cnt;i++){</span><br><span class="line"><span class="keyword">if</span>(p->pBase[i]<<span class="built_in">min</span>){</span><br><span class="line">temp=p->pBase[i];</span><br><span class="line">p->pBase[i]=<span class="built_in">min</span>;</span><br><span class="line"><span class="built_in">min</span>=temp;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">p->pBase[j]=<span class="built_in">min</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;C语言用三种方式打印数组&lt;/p&gt;
    
    </summary>
    
    
      <category term="c++" scheme="http://philxling.cn/categories/c/"/>
    
    
      <category term="c++" scheme="http://philxling.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫基础</title>
    <link href="http://philxling.cn/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB/"/>
    <id>http://philxling.cn/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB/</id>
    <published>2020-03-15T05:36:19.000Z</published>
    <updated>2020-04-02T15:13:56.346Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>##python爬虫基础</p><p>urllib库,url库含有四个模块</p><ul><li>request 是最基本的请求方式,error是异常处理信息,parse是解析的工具类,你可以将没有编码的url放在parse工具中编码和解码,robotparser主要是用来识别网站的 robots.txt 文件.</li></ul><p>例: </p><a id="more"></a><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request<span class="comment">#导入库</span></span><br><span class="line">response=request.urlopen(<span class="string">'http://www.baidu.com'</span>)<span class="comment">#请求baidu.com</span></span><br><span class="line">print(response.read())</span><br><span class="line"><!--more--></span><br><span class="line">request.urlretrieve(<span class="string">'http://www.baidu.com'</span>,<span class="string">'baidu.html'</span>)</span><br><span class="line"><span class="comment">#将百度的网页下载到本地baidu.html</span></span><br><span class="line"><span class="comment">#urlencode用法</span></span><br><span class="line"><span class="comment">#https://www.baidu.com/s?wd=hello&rsv_spt=1&rsv_iqid=0xc249d2880001381f&issp=1&f=8&rsv_bp=1&rsv_idx=2&ie=utf-8&tn=baiduhome_pg&rsv_enter=1&rsv_dl=tb&rsv_sug3=6&rsv_sug1=5&rsv_sug7=101&rsv_sug2=0&inputT=1310&rsv_sug4=2416</span></span><br><span class="line"><span class="comment">#将参数为中文的字符转换为浏览器能够识别的字符</span></span><br><span class="line">data={<span class="string">'wd'</span>:<span class="string">'你好'</span>,<span class="string">'age'</span>:<span class="number">12</span>,<span class="string">'gender'</span>:<span class="string">'男'</span>}</span><br><span class="line">data=parse.urlencode(data)</span><br><span class="line">print(data)</span><br><span class="line"><span class="comment">#wd=%E4%BD%A0%E5%A5%BD&age=12&gender=%E7%94%B7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#例</span></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request<span class="comment">#导入库</span></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse<span class="comment">#用于编码</span></span><br><span class="line">data={<span class="string">'wd'</span>:<span class="string">'你好'</span>}</span><br><span class="line">data=parse.urlencode(data)</span><br><span class="line">response=request.urlopen(<span class="string">'http://www.baidu.com/s?'</span>+data)<span class="comment">#请求baidu.com</span></span><br><span class="line">print(response.read())</span><br><span class="line"></span><br><span class="line"><span class="comment">#解码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#parse_qs()解码</span></span><br><span class="line">data=parse.parse_qs(data)</span><br><span class="line"><span class="comment">#url='http://www.baidu.com/s?'+data</span></span><br><span class="line">print(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlparse和urlsplit</span><br><span class="line"><span class="comment">#urlparse将url地址进行分割</span></span><br><span class="line"><span class="comment">#例</span></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line">url=<span class="string">'http://www.baidu.com/s?wd=hello&username=123#12'</span></span><br><span class="line">print(parse.urlparse(url))</span><br><span class="line"></span><br><span class="line"><span class="comment">#ParseResult(scheme='http', netloc='www.baidu.com', path='/s', params='', query='wd=hello&username=123', fragment='12')</span></span><br><span class="line">print(parse.urlparse(url).scheme)</span><br><span class="line">print(parse.urlparse(url).netloc)</span><br><span class="line">print(parse.urlsplit(url))</span><br><span class="line"><span class="comment">#SplitResult(scheme='http', netloc='www.baidu.com', path='/s', query='wd=hello&username=123', fragment='12')</span></span><br><span class="line"><span class="comment">#前者多了一个params参数</span></span><br></pre></td></tr></tbody></table></figure><p>Request类</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">url=<span class="string">'https://www.lagou.com/jobs/list_python?labelWords=&fromSearch=true&suginput='</span></span><br><span class="line"></span><br><span class="line">headers={<span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36'</span>}</span><br><span class="line">req=request.Request(url,headers=headers)</span><br><span class="line"></span><br><span class="line">print(request.urlopen(req).read())</span><br><span class="line"></span><br><span class="line"><span class="comment">#Request()参数</span></span><br></pre></td></tr></tbody></table></figure><p>代理设置</p><p>ProxyHandler处理器(代理设置)</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">url=<span class="string">'https://httpbin.org/ip'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(request.urlopen(url).read())</span></span><br><span class="line"><span class="comment">#没有使用代理</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用代理</span></span><br><span class="line"></span><br><span class="line">handler=request.ProxyHandler({<span class="string">'http'</span>:<span class="string">'112.84.55.122:9999'</span>})</span><br><span class="line"></span><br><span class="line">openner=request.build_opener(handler)</span><br><span class="line"></span><br><span class="line">res=openner.open(url)</span><br><span class="line"></span><br><span class="line">print(res.read())</span><br></pre></td></tr></tbody></table></figure><p>http.cookiejar保存cookie</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> http.cookiejar <span class="keyword">import</span> MozillaCookieJar</span><br><span class="line"><span class="comment">#保存cookie信息</span></span><br><span class="line">cookieJar = MozillaCookieJar(<span class="string">'cookie.txt'</span>)</span><br><span class="line"><span class="comment">#加载cookie</span></span><br><span class="line">cookieJar.load(ignore_discard=<span class="literal">True</span>)</span><br><span class="line">handler = request.HTTPCookieProcessor(cookieJar)</span><br><span class="line">opener = request.build_opener(handler)</span><br><span class="line">resp = opener.open(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line">cookieJar.save(ignore_discard=<span class="literal">True</span>)</span><br><span class="line"><span class="comment">#打印cookie信息</span></span><br><span class="line"><span class="keyword">for</span> cookie <span class="keyword">in</span> cookieJar:</span><br><span class="line">    print(cookie)</span><br></pre></td></tr></tbody></table></figure><p>requests库</p><p>requests发送get请求</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">params = {<span class="string">'wd'</span>: <span class="string">'中国'</span>, <span class="string">'ie'</span>: <span class="string">'utf-8'</span>,</span><br><span class="line"><span class="string">'f'</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">'rsv_bp'</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">'rsv_idx'</span>: <span class="number">2</span>,</span><br><span class="line"><span class="string">'tn'</span>: <span class="string">'baiduhome_pg'</span>,</span><br><span class="line"><span class="string">'rsv_spt'</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">'oq'</span>: <span class="number">100</span>,</span><br><span class="line"><span class="string">'rsv_pq'</span>: <span class="number">9282010e00005646</span>,</span><br><span class="line"><span class="string">'rsv_t'</span>: <span class="string">'65b6ZN8IJiXpluNcz/pIQxWDy8QWRjCXH7ym3yqE583HxR32Ytg75ZGh3MGjaslBNJxC'</span>,</span><br><span class="line"><span class="string">'rqlang'</span>: <span class="string">'cn'</span>,</span><br><span class="line"><span class="string">'rsv_enter'</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">'rsv_dl'</span>: <span class="string">'ts_0'</span>,</span><br><span class="line"><span class="string">'rsv_sug3'</span>: <span class="number">9</span>,</span><br><span class="line"><span class="string">'rsv_sug1'</span>: <span class="number">10</span>,</span><br><span class="line"><span class="string">'rsv_sug7'</span>: <span class="number">101</span>,</span><br><span class="line"><span class="string">'rsv_sug2'</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">'prefixsug'</span>: <span class="string">'zhongu'</span>,</span><br><span class="line"><span class="string">'rsp'</span>: <span class="number">0</span>,</span><br><span class="line"><span class="string">'inputT'</span>: <span class="number">4623</span>}</span><br><span class="line">headers = {<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class="line">                         <span class="string">'Chrome/76.0.3809.100 Safari/537.36'</span>}</span><br><span class="line">response = requests.get(<span class="string">'http://www.baidu.com/s'</span>, params=params, headers=headers)</span><br><span class="line"><span class="comment"># print(type(response.text)) #str类型 手动解码 </span></span><br><span class="line"><span class="comment"># print(type(response.content))# bytes类型 一般采用response.content.decode('utf-8')</span></span><br><span class="line">print(response.url)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'baidu.html'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> fp:<span class="comment">#将页面写在baidu.html上</span></span><br><span class="line">    fp.write(response.content.decode(<span class="string">'utf-8'</span>))</span><br><span class="line">print(response.content.decode(<span class="string">'utf-8'</span>))</span><br><span class="line"><span class="comment"># print(response.status_code)</span></span><br></pre></td></tr></tbody></table></figure><p>发送post请求</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">data = {</span><br><span class="line">    <span class="string">'first'</span>: <span class="string">'true'</span>,</span><br><span class="line">    <span class="string">'pn'</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">'kd'</span>: <span class="string">'python'</span></span><br><span class="line">}</span><br><span class="line">headers = {</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class="line">                         <span class="string">'Chrome/76.0.3809.100 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'Referer'</span>: <span class="string">'https://www.lagou.com/jobs/list_python?labelWords=&fromSearch=true&suginput='</span>,</span><br><span class="line">    <span class="string">'Host'</span>: <span class="string">'www.lagou.com'</span></span><br><span class="line">}</span><br><span class="line"><span class="comment"># 使用代理</span></span><br><span class="line"><span class="comment"># proxy={</span></span><br><span class="line"><span class="comment">#     'http':'27.43.190.11:9999'</span></span><br><span class="line"><span class="comment"># }</span></span><br><span class="line">response = requests.post(<span class="string">'https://www.lagou.com/jobs/positionAjax.json?needAddtionalResult=false'</span>, data=data, headers=headers) <span class="comment">#proxies=proxy)</span></span><br><span class="line">print(response.text)</span><br></pre></td></tr></tbody></table></figure><p>requests的cookie保存</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">resp = requests.get(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line">print(resp.cookies.get_dict())</span><br></pre></td></tr></tbody></table></figure><p>session 利用session保存信息并访问</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">session=requests.session()<span class="comment">#创建会话</span></span><br><span class="line">session.post(url,data,headers)<span class="comment">#登录</span></span><br><span class="line">res=session.get(url)<span class="comment">#访问页面</span></span><br><span class="line">print(res.text)</span><br></pre></td></tr></tbody></table></figure><p>数据的提取</p><p>XPath和lxml</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1 /AAA/DD/BBB 表示aaa下的dd下的bbb元素</span><br><span class="line">2 //aaa 选择所有的aaa元素</span><br><span class="line">3 //aaa/bbb 所有的aaa下的所有bbb元素</span><br><span class="line">4 /* 表示所有</span><br><span class="line">5 bbb[1] 表示bbb第一个元素</span><br><span class="line">6 bbb[@id] 只要bbb上有id属性，都能得到</span><br><span class="line">7 bbb[@id='b1'] 元素是bbb，上有id属性，并且属性的值为b1</span><br><span class="line">在某个标签下执行xpath在这个标签加.</span><br><span class="line">即 trs=html.xpath('//tr')</span><br><span class="line">   for i in trs:</span><br><span class="line">   harf=i.xpath('.//a/@href')</span><br><span class="line">   </span><br><span class="line">获取文本是text()即//a/text()</span><br></pre></td></tr></tbody></table></figure><p>使用lxml解析html</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">text = <span class="string">'''</span></span><br><span class="line"><span class="string"><ul class="r_company_con"></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/9251.html">美柚</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/1373.html">喜马拉雅fm</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/14229.html">微盟</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/49369.html">淘粉吧</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/107435.html">熊猫TV</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/2768.html">易到用车</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/40738.html">小红唇</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/97631.html">汽车超人</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/109.html">蚂蜂窝</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/36996.html">三好网</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/4760.html">唯品会</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/1686.html">爱奇艺</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/23014.html">快法务</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/1575.html">百度招聘</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/81491.html">蚂蚁金服</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/62.html">今日头条</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/2474.html">滴滴</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/20909.html">AcFun</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/23489.html">点点客</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/59251.html">映客</a></li></span></span><br><span class="line"><span class="string">        <li class="r_search_item"><a href="https://www.lagou.com/gongsi/3712.html">京东</a></li></span></span><br><span class="line"><span class="string">        </ul>   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_text</span><span class="params">()</span>:</span></span><br><span class="line">    htmlElement = etree.HTML(text)  <span class="comment"># 对象</span></span><br><span class="line">    print(etree.tostring(htmlElement, encoding=<span class="string">'utf-8'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_file</span><span class="params">()</span>:</span></span><br><span class="line">    parser=etree.HTMLParser(encoding=<span class="string">'utf-8'</span>) <span class="comment"># 解析器</span></span><br><span class="line">    htmlElement = etree.parse(<span class="string">"lagou.html"</span>, parser=parser)</span><br><span class="line">    print(etree.tostring(htmlElement, encoding=<span class="string">'utf-8'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    parse_file()</span><br><span class="line">//解析html的代码有两种,一种是解析字符串类型的html代码直接使用etree.HTML(字符串)一种是解析html文件</span><br><span class="line">使用parser=etree.HTMLParser(encoding=<span class="string">'utf-8'</span>)  htmlElement = etree.parse(<span class="string">"lagou.html"</span>, parser=parser)解析</span><br><span class="line">如果有不规范的html代码就要自定义解析器parser=etree.HTMLParser(encoding=<span class="string">'utf-8'</span>)</span><br></pre></td></tr></tbody></table></figure><p>爬取电影天堂案例</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line">DOMAIN = <span class="string">'https://www.dytt8.net'</span></span><br><span class="line">HEADERS = {</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class="line">                  <span class="string">'Chrome/76.0.3809.100 Safari/537.36'</span>}</span><br><span class="line"></span><br><span class="line">movies = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_details</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">8</span>):</span><br><span class="line">        url = <span class="string">'https://www.dytt8.net/html/gndy/dyzz/list_23_'</span> + str(i) + <span class="string">'.html'</span></span><br><span class="line">        response = requests.get(url, headers=HEADERS)</span><br><span class="line">        text = response.text</span><br><span class="line">        html = etree.HTML(text)</span><br><span class="line">        detail_urls = html.xpath(<span class="string">"//table[@class='tbspan']//a/@href"</span>)</span><br><span class="line">        <span class="keyword">for</span> detail_url <span class="keyword">in</span> detail_urls:</span><br><span class="line">            movie = parse_detail(DOMAIN + detail_url)</span><br><span class="line">            movies.append(movie)</span><br><span class="line">            <span class="comment"># pf = pd.DataFrame(list(movie))</span></span><br><span class="line">            <span class="comment">#             # print(pf)</span></span><br><span class="line">            <span class="comment"># columns_map = {</span></span><br><span class="line">            <span class="comment">#     'title': '名称',</span></span><br><span class="line">            <span class="comment">#     'cover': '封面',</span></span><br><span class="line">            <span class="comment">#     'year': '年份',</span></span><br><span class="line">            <span class="comment">#     'country': '国家',</span></span><br><span class="line">            <span class="comment">#     'category': '分类',</span></span><br><span class="line">            <span class="comment">#     'douban_rating': '豆瓣评分',</span></span><br><span class="line">            <span class="comment">#     'size': '分辨率',</span></span><br><span class="line">            <span class="comment">#     'actors': '演员',</span></span><br><span class="line">            <span class="comment">#     'director': '导演',</span></span><br><span class="line">            <span class="comment">#     'label': '标签',</span></span><br><span class="line">            <span class="comment">#     'download_url': '下载地址',</span></span><br><span class="line">            <span class="comment">#     'profile': '简介'}</span></span><br><span class="line">            <span class="comment"># pf.rename(columns=columns_map, inplace=True)</span></span><br><span class="line">            <span class="comment"># pf.fillna(' ', inplace=True)</span></span><br><span class="line">            <span class="comment"># pf.to_excel('d:/my.xlsx', encoding='utf-8', index=False)</span></span><br><span class="line">            <span class="comment"># data = movie</span></span><br><span class="line">            <span class="comment"># data_df = pd.DataFrame(data)</span></span><br><span class="line">            <span class="comment"># data_df.index = range(1, 100)</span></span><br><span class="line">            <span class="comment"># writer = pd.ExcelWriter('my.xlsx')</span></span><br><span class="line">            <span class="comment"># data_df.to_excel(writer, float_format='%.5f')</span></span><br><span class="line">            <span class="comment"># writer.save()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_detail</span><span class="params">(url)</span>:</span></span><br><span class="line">    movie = {}</span><br><span class="line">    response = requests.get(url, headers=HEADERS)</span><br><span class="line">    text = response.content.decode(<span class="string">'gbk'</span>)</span><br><span class="line">    html = etree.HTML(text)</span><br><span class="line">    movie[<span class="string">'title'</span>] = html.xpath(<span class="string">"//div[@class='title_all']//font/text()"</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> len(html.xpath(<span class="string">"//div[@id='Zoom']//img/@src"</span>)):</span><br><span class="line">        movie[<span class="string">'cover'</span>] = html.xpath(<span class="string">"//div[@id='Zoom']//img/@src"</span>)[<span class="number">0</span>]</span><br><span class="line">    parse_movie_content(html, movie)  <span class="comment"># 解析content</span></span><br><span class="line">    movie_download_url = html.xpath(<span class="string">"//td[@bgcolor='#fdfddf']/a/@href"</span>)</span><br><span class="line">    movie[<span class="string">'download_url'</span>] = movie_download_url</span><br><span class="line">    <span class="keyword">return</span> movie</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_movie_content</span><span class="params">(html, movie)</span>:</span></span><br><span class="line">    movie_content = html.xpath(<span class="string">"//div[@id='Zoom']//p/text()"</span>)</span><br><span class="line">    <span class="keyword">for</span> index, info <span class="keyword">in</span> enumerate(movie_content):</span><br><span class="line">        <span class="keyword">if</span> info.startswith(<span class="string">"◎年　　代"</span>):</span><br><span class="line">            info = info.replace(<span class="string">"◎年　　代"</span>, <span class="string">""</span>).strip()</span><br><span class="line">            movie[<span class="string">'year'</span>] = info</span><br><span class="line">        <span class="keyword">if</span> info.startswith(<span class="string">"◎产　　地"</span>):</span><br><span class="line">            info = info.replace(<span class="string">"◎产　　地"</span>, <span class="string">""</span>).strip()</span><br><span class="line">            movie[<span class="string">'country'</span>] = info</span><br><span class="line">        <span class="keyword">if</span> info.startswith(<span class="string">"◎类　　别"</span>):</span><br><span class="line">            info = info.replace(<span class="string">"◎类　　别"</span>, <span class="string">""</span>).strip()</span><br><span class="line">            movie[<span class="string">'category'</span>] = info</span><br><span class="line">        <span class="keyword">if</span> info.startswith(<span class="string">"◎豆瓣评分"</span>):</span><br><span class="line">            info = info.replace(<span class="string">"◎豆瓣评分"</span>, <span class="string">""</span>).strip()</span><br><span class="line">            movie[<span class="string">'douban_rating'</span>] = info</span><br><span class="line">        <span class="keyword">if</span> info.startswith(<span class="string">"◎视频尺寸"</span>):</span><br><span class="line">            info = info.replace(<span class="string">"◎视频尺寸"</span>, <span class="string">""</span>).strip()</span><br><span class="line">            movie[<span class="string">'size'</span>] = info</span><br><span class="line">        <span class="keyword">if</span> info.startswith(<span class="string">'◎导　　演'</span>):</span><br><span class="line">            info = info.replace(<span class="string">"◎导　　演"</span>, <span class="string">""</span>).strip()</span><br><span class="line">            movie[<span class="string">"director"</span>] = info</span><br><span class="line">        <span class="keyword">if</span> info.startswith(<span class="string">'◎主　　演'</span>):</span><br><span class="line">            info = info.replace(<span class="string">"◎主　　演"</span>, <span class="string">""</span>).strip()</span><br><span class="line">            actors = [info]</span><br><span class="line">            <span class="keyword">for</span> actor <span class="keyword">in</span> range(index + <span class="number">1</span>, len(movie_content)):</span><br><span class="line">                <span class="keyword">if</span> movie_content[actor].startswith(<span class="string">"◎标　　签"</span>):</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                actors.append(movie_content[actor].strip())</span><br><span class="line">            movie[<span class="string">"actors"</span>] = actors</span><br><span class="line">        <span class="keyword">if</span> info.startswith(<span class="string">'◎标　　签'</span>):</span><br><span class="line">            info = info.replace(<span class="string">"◎标　　签"</span>, <span class="string">""</span>).strip()</span><br><span class="line">            movie[<span class="string">'label'</span>] = info</span><br><span class="line">        <span class="keyword">if</span> info.startswith(<span class="string">'◎简　　介'</span>):</span><br><span class="line">            info = movie_content[index + <span class="number">1</span>].strip()</span><br><span class="line">            movie[<span class="string">"profile"</span>] = info</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    get_details()</span><br><span class="line">    pf = pd.DataFrame(list(movies))</span><br><span class="line">    columns_map = {</span><br><span class="line">        <span class="string">'title'</span>: <span class="string">'名称'</span>,</span><br><span class="line">        <span class="string">'cover'</span>: <span class="string">'封面'</span>,</span><br><span class="line">        <span class="string">'year'</span>: <span class="string">'年份'</span>,</span><br><span class="line">        <span class="string">'country'</span>: <span class="string">'国家'</span>,</span><br><span class="line">        <span class="string">'category'</span>: <span class="string">'分类'</span>,</span><br><span class="line">        <span class="string">'douban_rating'</span>: <span class="string">'豆瓣评分'</span>,</span><br><span class="line">        <span class="string">'size'</span>: <span class="string">'分辨率'</span>,</span><br><span class="line">        <span class="string">'actors'</span>: <span class="string">'演员'</span>,</span><br><span class="line">        <span class="string">'director'</span>: <span class="string">'导演'</span>,</span><br><span class="line">        <span class="string">'label'</span>: <span class="string">'标签'</span>,</span><br><span class="line">        <span class="string">'download_url'</span>: <span class="string">'下载地址'</span>,</span><br><span class="line">        <span class="string">'profile'</span>: <span class="string">'简介'</span>}</span><br><span class="line">    pf.rename(columns=columns_map, inplace=<span class="literal">True</span>)</span><br><span class="line">    pf.to_excel(<span class="string">'D:/my.xlsx'</span>, encoding=<span class="string">'utf-8'</span>, index=<span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure><p>爬取公众号文章</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Dict</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">url = <span class="string">'https://data.wxb.com/rank/day/2020-02-22/%E7%A7%91%E6%8A%80?sort=&page=1&page_size=50&is_new=1'</span></span><br><span class="line"></span><br><span class="line">headers = {</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class="line">                  <span class="string">'Chrome/76.0.3809.100 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'Cookie'</span>: <span class="string">'PHPSESSID=beac3d26447612afc0000369ce0a6b37; Qs_lvt_288791=1582549381; Qs_pv_288791=4313460905624405000; '</span></span><br><span class="line">              <span class="string">'aliyungf_tc=AQAAAKyqam5YtgQAWQMTOkuQHo7LO0N2; visit-wxb-id=847ecde119a5cefbe55b022b9af2debe '</span>,</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">response=requests.get(url, headers=headers)</span><br><span class="line">json_obj=json.loads(response.text,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">url_id=[]</span><br><span class="line">articles = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> json_obj[<span class="string">'data'</span>]:</span><br><span class="line">    url_id.append(i[<span class="string">'wx_origin_id'</span>])</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> url_id:</span><br><span class="line">    headers[<span class="string">'Referer'</span>] = <span class="string">'https://data.wxb.com/details/postRead?id='</span>+url</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">        resp = requests.get(<span class="string">'https://data.wxb.com/account/statArticles/'</span>+url+<span class="string">'?period=30&page='</span>+str(j)+<span class="string">'&sort='</span>, headers=headers)</span><br><span class="line">        json_obj = json.loads(resp.text, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> json_obj[<span class="string">'data'</span>]:</span><br><span class="line">            article = {<span class="string">'title'</span>: i[<span class="string">'title'</span>], <span class="string">'url'</span>: i[<span class="string">'url'</span>]}</span><br><span class="line">            articles.append(article)</span><br><span class="line">            <span class="comment"># for article in article_url:</span></span><br><span class="line">            <span class="comment">#     res=requests.get(article)</span></span><br><span class="line">            <span class="comment">#     print(res.url)</span></span><br><span class="line">            <span class="comment">#     print(res.text)</span></span><br><span class="line">                <span class="comment"># html=etree.HTML(res.text)</span></span><br><span class="line">                <span class="comment"># head=html.xpath("//head")</span></span><br><span class="line">                <span class="comment"># for i in head:</span></span><br><span class="line">                <span class="comment">#     print(etree.tostring(i, encoding='utf-8').decode('utf-8'))</span></span><br><span class="line">pf = pd.DataFrame(list(articles))</span><br><span class="line">columns = {</span><br><span class="line">        <span class="string">'title'</span>: <span class="string">'名称'</span>,</span><br><span class="line">        <span class="string">'url'</span>: <span class="string">'网址'</span></span><br><span class="line">    }</span><br><span class="line">pf.rename(columns=columns, inplace=<span class="literal">True</span>)</span><br><span class="line">pf.to_excel(<span class="string">'D:/公众号文章.xlsx'</span>, encoding=<span class="string">'utf-8'</span>, index=<span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure><p>BeautifulSoup4解析</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> .find_all(<span class="string">'a'</span>,limit=*) //查所有的a标签,参数limit可以限制找到几个</span><br><span class="line"><span class="number">2</span> .find_all(<span class="string">'tr'</span>,class_=<span class="string">'even'</span>)//查找所有的tr标签并且<span class="class"><span class="keyword">class</span>为<span class="title">even</span></span></span><br><span class="line"><span class="class">3 .<span class="title">find_all</span><span class="params">(<span class="string">'tr'</span>,attrs={<span class="string">'class'</span>:<span class="string">'even'</span>})</span></span></span><br><span class="line"><span class="class">4 .<span class="title">find_all</span><span class="params">(<span class="string">'tr'</span>,id=<span class="string">'even'</span>)</span></span></span><br><span class="line"><span class="class">5 //获取纯文本</span></span><br><span class="line">trs=soup.find_all('tr')//获取所有tr标签</span><br><span class="line"><span class="keyword">for</span> tr <span class="keyword">in</span> trs:</span><br><span class="line">title=tr[<span class="number">0</span>].string//某个标签下有多行文本不能取到</span><br><span class="line">category=tr[<span class="number">1</span>].string常用</span><br><span class="line">infos=list(tr.stripped_strings)//获取tr下的所有非空文本(常用)</span><br><span class="line"><span class="number">6</span> .find(<span class="string">'a'</span>)//返回第一个符合条件的a标签</span><br><span class="line"><span class="number">7</span> contents和children//返回某个标签下的直接子元素,contents返回列表,children返回迭代器</span><br><span class="line"><span class="number">8</span> 使用css选择器,使用soup.select(<span class="string">'css语法'</span>),应该写css语法的字符串</span><br></pre></td></tr></tbody></table></figure><p>中国天气网</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span> Bar</span><br><span class="line"></span><br><span class="line">ALL_DATA = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    page = [<span class="string">'hb'</span>, <span class="string">'db'</span>, <span class="string">'hd'</span>, <span class="string">'hz'</span>, <span class="string">'hn'</span>, <span class="string">'xb'</span>, <span class="string">'xn'</span>, <span class="string">'gat'</span>]</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> page:</span><br><span class="line">        url = <span class="string">'http://www.weather.com.cn/textFC/'</span> + url + <span class="string">'.shtml'</span></span><br><span class="line">        parse_page(url)</span><br><span class="line">    <span class="comment"># 根据最低气温排序</span></span><br><span class="line">    ALL_DATA.sort(key=<span class="keyword">lambda</span> data: data[<span class="string">'min_temp'</span>])</span><br><span class="line">    data = ALL_DATA[<span class="number">0</span>:<span class="number">10</span>]</span><br><span class="line">    charts = Bar(<span class="string">'中国最低气温排行榜'</span>)</span><br><span class="line">    cities = list(map(<span class="keyword">lambda</span> x: x[<span class="string">'city'</span>], data))</span><br><span class="line">    temp = list(map(<span class="keyword">lambda</span> x: x[<span class="string">'min_temp'</span>], data))</span><br><span class="line">    charts.add(<span class="string">''</span>, cities, temp)</span><br><span class="line">    charts.render(<span class="string">'temperature.html'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_page</span><span class="params">(url)</span>:</span></span><br><span class="line">    headers = {</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class="line">                      <span class="string">'Chrome/76.0.3809.100 Safari/537.36'</span></span><br><span class="line">    }</span><br><span class="line">    response = requests.get(url, headers=headers)</span><br><span class="line">    html = response.content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">'html5lib'</span>)</span><br><span class="line">    div = soup.find_all(<span class="string">'div'</span>, attrs={<span class="string">'class'</span>: <span class="string">'conMidtab'</span>})[<span class="number">0</span>]</span><br><span class="line">    tables = div.find_all(<span class="string">'table'</span>)</span><br><span class="line">    <span class="keyword">for</span> table <span class="keyword">in</span> tables:</span><br><span class="line">        trs = table.find_all(<span class="string">'tr'</span>)[<span class="number">2</span>:]</span><br><span class="line">        <span class="keyword">for</span> tr <span class="keyword">in</span> trs:</span><br><span class="line">            tds = tr.find_all(<span class="string">'td'</span>)</span><br><span class="line">            city_td = tds[<span class="number">-8</span>]</span><br><span class="line">            city = list(city_td.stripped_strings)[<span class="number">0</span>]</span><br><span class="line">            temp_td = tds[<span class="number">-2</span>]</span><br><span class="line">            min_temp = list(temp_td.stripped_strings)[<span class="number">0</span>]</span><br><span class="line">            ALL_DATA.append({<span class="string">'city'</span>: city, <span class="string">'min_temp'</span>: int(min_temp)})</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><p>正则表达式匹配</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1 * 可以匹配0或任意多个字符</span></span><br><span class="line">text = <span class="string">'aqw+q123ad1232'</span></span><br><span class="line"><span class="comment"># result = re.match('\s*', text)</span></span><br><span class="line"><span class="comment"># + 匹配1个或多个字符</span></span><br><span class="line"><span class="comment"># result = re.match('\w+', text)</span></span><br><span class="line"><span class="comment"># aqw</span></span><br><span class="line"><span class="comment"># ? 匹配一个或0个(要么没有,要么就只有一个)</span></span><br><span class="line"><span class="comment"># result = re.match('\w?', text)</span></span><br><span class="line"><span class="comment"># a</span></span><br><span class="line"><span class="comment"># {m} 匹配m个字符</span></span><br><span class="line"><span class="comment"># result = re.match('\w{2}', text)</span></span><br><span class="line"><span class="comment"># aq</span></span><br><span class="line"><span class="comment"># {m, n} 匹配m-n个字符</span></span><br><span class="line">test = <span class="string">'\\n'</span></span><br><span class="line">test1 = <span class="string">'apple is $22, orange is $12'</span></span><br><span class="line">test2 = <span class="string">'Hello ni hao'</span></span><br><span class="line">result = re.search(<span class="string">'\\\\n'</span>, test)  <span class="comment"># \\\\表示 \\ 表示一个\ \\后面一个表示一个\ 即 \\n 用python匹配 则是\n</span></span><br><span class="line"><span class="comment"># aqw</span></span><br><span class="line">res = re.findall(<span class="string">'\$\d+'</span>, test1)</span><br><span class="line"><span class="comment"># ['$22', '$12']</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sub函数</span></span><br><span class="line">print(re.sub(<span class="string">'\$\d+'</span>, <span class="string">'0'</span>, test1))</span><br><span class="line"><span class="comment"># apple is 0, orange is 0</span></span><br><span class="line">print(res)</span><br><span class="line">print(re.split(<span class="string">' '</span>, test2))</span><br><span class="line"><span class="comment"># ['Hello', 'ni', 'hao']</span></span><br></pre></td></tr></tbody></table></figure><p>案例</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 验证手机号</span></span><br><span class="line">text = <span class="string">'13991471643'</span></span><br><span class="line">result = re.match(<span class="string">'1[34578]\d{9}'</span>, text)</span><br><span class="line"><span class="comment"># print(result.group())</span></span><br><span class="line"><span class="comment"># 验证邮箱</span></span><br><span class="line">email = <span class="string">'321915@163.com'</span></span><br><span class="line">ret = re.match(<span class="string">'\w+@[a-z0-9]+\.[a-z]+'</span>, email)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证url</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://www.baidu.com/s?re=233'</span></span><br><span class="line">resultUrl = re.match(<span class="string">'(http|https|ftp)://[^\s]+'</span>, url)<span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证身份证</span></span><br><span class="line"></span><br><span class="line">id = <span class="string">'61252619971008357x'</span></span><br><span class="line">res = re.match(<span class="string">'\d{17}[\dXx]'</span>, id)</span><br><span class="line">print(res.group())</span><br></pre></td></tr></tbody></table></figure><p>用正则表达式爬取古诗文网</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">poems = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_urls</span><span class="params">()</span>:</span></span><br><span class="line">    headers = {</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class="line">                      <span class="string">'Chrome/76.0.3809.100 Safari/537.36'</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">        <span class="comment"># response = requests.get('https://www.gushiwen.org/default_' + str(i) + '.aspx', headers=headers)</span></span><br><span class="line">        response = requests.get(<span class="string">'https://so.gushiwen.org/shiwen/default_0AA'</span>+str(i)+<span class="string">'.aspx'</span>, headers=headers)</span><br><span class="line">        html = response.text</span><br><span class="line">        titles = re.findall(<span class="string">r'<div\sclass="cont".*?<b>(.*?)</b>'</span>, html, re.DOTALL)</span><br><span class="line">        dynasties = re.findall(<span class="string">r'<p\sclass="source".*?<a.*?>(.*?)</a>'</span>, html, re.DOTALL)</span><br><span class="line">        authors = re.findall(<span class="string">r'<p\sclass="source">.*?<span.*?<a.*?>(.*?)</a>'</span>, html, re.DOTALL)</span><br><span class="line">        content_tag = re.findall(<span class="string">r'<div\sclass="contson".*?>(.*?)</div>'</span>, html, re.DOTALL)</span><br><span class="line">        contents = []</span><br><span class="line">        <span class="keyword">for</span> content <span class="keyword">in</span> content_tag:</span><br><span class="line">            content = re.sub(<span class="string">r'<.*?>'</span>, <span class="string">''</span>, content)</span><br><span class="line">            contents.append(content.strip())</span><br><span class="line">        <span class="keyword">for</span> value <span class="keyword">in</span> zip(titles, dynasties, authors, contents):</span><br><span class="line">            title, dynasty, author, content = value</span><br><span class="line">            poem = {</span><br><span class="line">                <span class="string">'title'</span>: title,</span><br><span class="line">                <span class="string">'dynasty'</span>: dynasty,</span><br><span class="line">                <span class="string">'author'</span>: author,</span><br><span class="line">                <span class="string">'content'</span>: content</span><br><span class="line">            }</span><br><span class="line">            poems.append(poem)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    get_urls()</span><br><span class="line">    pf = pd.DataFrame(list(poems))</span><br><span class="line">    columns = {</span><br><span class="line">        <span class="string">'title'</span>: <span class="string">'诗名'</span>,</span><br><span class="line">        <span class="string">'dynasty'</span>: <span class="string">'朝代'</span>,</span><br><span class="line">        <span class="string">'author'</span>: <span class="string">'作者'</span>,</span><br><span class="line">        <span class="string">'content'</span>: <span class="string">'内容'</span></span><br><span class="line">        }</span><br><span class="line">    pf.rename(columns=columns, inplace=<span class="literal">True</span>)</span><br><span class="line">    pf.to_excel(<span class="string">'D:/古诗词.xlsx'</span>, encoding=<span class="string">'utf-8'</span>, index=<span class="literal">False</span>)</span><br><span class="line">    print(len(poems))</span><br></pre></td></tr></tbody></table></figure><p>json数据</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//字符转json</span><br><span class="line">json.dumps(json_str)</span><br><span class="line">//json转python对象</span><br><span class="line">json.loads(json字符串)</span><br></pre></td></tr></tbody></table></figure><p>将json写入文件</p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB/image-20200228161318410.png" alt="image-20200228161318410"></p><p>csv文件</p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB/image-20200228175101405.png" alt="image-20200228175101405"></p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB/image-20200228175137667.png" alt="image-20200228175137667"></p><p>多线程</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">value = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">writer_</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> value</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000000</span>):</span><br><span class="line">        value += <span class="number">1</span></span><br><span class="line">    print(value)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawing</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> value</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000000</span>):</span><br><span class="line">        value += <span class="number">1</span></span><br><span class="line">    print(value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    threading.Thread(target=writer_).start()</span><br><span class="line">    threading.Thread(target=drawing).start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br><span class="line"><span class="comment">#  1254106</span></span><br><span class="line"><span class="comment">#  1396958</span></span><br><span class="line"><span class="comment"># 出现线程抢占问题</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">value = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">gLock = threading.Lock() <span class="comment"># 创建锁</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">writer_</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> value</span><br><span class="line">    gLock.acquire()  <span class="comment"># 加锁</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000000000</span>):</span><br><span class="line">        value += <span class="number">1</span></span><br><span class="line">    gLock.release()  <span class="comment"># 释放锁</span></span><br><span class="line">    print(value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    threading.Thread(target=writer_).start()</span><br><span class="line">    threading.Thread(target=writer_).start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><p>lock版生产者消费者</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生产者消费者</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">gTimes = <span class="number">0</span></span><br><span class="line">gTotalTimes = <span class="number">10</span></span><br><span class="line">gMoney = <span class="number">1000</span></span><br><span class="line"></span><br><span class="line">gLock = threading.Lock()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Producer</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">global</span> gMoney</span><br><span class="line">        <span class="keyword">global</span> gTimes</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            money = random.randint(<span class="number">100</span>, <span class="number">1000</span>)</span><br><span class="line">            gLock.acquire()</span><br><span class="line">            <span class="keyword">if</span> gTimes > gTotalTimes:</span><br><span class="line">                gLock.release()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            gMoney += money</span><br><span class="line">            gTimes += <span class="number">1</span></span><br><span class="line">            print(<span class="string">'%s生产了%d的钱,还剩%d的钱'</span> % (threading.current_thread(), money, gMoney))</span><br><span class="line">            gLock.release()</span><br><span class="line">            time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Consumer</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">global</span> gMoney</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            money = random.randint(<span class="number">100</span>, <span class="number">1000</span>)</span><br><span class="line">            gLock.acquire()</span><br><span class="line">            <span class="keyword">if</span> money <= gMoney:</span><br><span class="line">                gMoney -= money</span><br><span class="line">                print(<span class="string">'%s消费了%d的钱,还剩%d的钱'</span> % (threading.current_thread(), money, gMoney))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> gTimes > gTotalTimes:</span><br><span class="line">                    gLock.release()</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                print(<span class="string">'%s消费%d的钱,还剩%d的钱,钱不足'</span> % (threading.current_thread(), money, gMoney))</span><br><span class="line">            gLock.release()</span><br><span class="line">            time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        Consumer(name=<span class="string">'消费者%d'</span> % x).start()</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        Producer(name=<span class="string">'生产者%d'</span> % x).start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><p>condition版,即线程通信的方式</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生产者消费者</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">gTimes = <span class="number">0</span></span><br><span class="line">gTotalTimes = <span class="number">10</span></span><br><span class="line">gMoney = <span class="number">1000</span></span><br><span class="line"></span><br><span class="line">gCondition = threading.Condition()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Producer</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">global</span> gMoney</span><br><span class="line">        <span class="keyword">global</span> gTimes</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            money = random.randint(<span class="number">100</span>, <span class="number">1000</span>)</span><br><span class="line">            gCondition.acquire()</span><br><span class="line">            <span class="keyword">if</span> gTimes > gTotalTimes:</span><br><span class="line">                gCondition.release()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            gMoney += money</span><br><span class="line">            gCondition.notify_all()</span><br><span class="line">            gTimes += <span class="number">1</span></span><br><span class="line">            print(<span class="string">'%s生产了%d的钱,还剩%d的钱'</span> % (threading.current_thread(), money, gMoney))</span><br><span class="line">            gCondition.release()</span><br><span class="line">            time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Consumer</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">global</span> gMoney</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            money = random.randint(<span class="number">100</span>, <span class="number">1000</span>)</span><br><span class="line">            gCondition.acquire()</span><br><span class="line">            <span class="keyword">while</span> gMoney < money:</span><br><span class="line">                <span class="keyword">if</span> gTimes >= gTotalTimes:</span><br><span class="line">                    gCondition.release()</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                print(<span class="string">'%s准备消费%d,还剩%d的钱,钱不足'</span> % (threading.current_thread(), money, gMoney))</span><br><span class="line">                gCondition.wait()</span><br><span class="line">            gMoney -= money</span><br><span class="line">            print(<span class="string">'%s消费了%d的钱,还剩%d的钱'</span> % (threading.current_thread(), money, gMoney))</span><br><span class="line">            gCondition.release()</span><br><span class="line">            time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        Consumer(name=<span class="string">'消费者%d'</span> % x).start()</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        Producer(name=<span class="string">'生产者%d'</span> % x).start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><Consumer(消费者<span class="number">0</span>, started <span class="number">11240</span>)>消费了<span class="number">811</span>的钱,还剩<span class="number">189</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">1</span>, started <span class="number">16408</span>)>消费了<span class="number">153</span>的钱,还剩<span class="number">36</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">2</span>, started <span class="number">14100</span>)>准备消费<span class="number">762</span>,还剩<span class="number">36</span>的钱,钱不足</span><br><span class="line"><Consumer(消费者<span class="number">3</span>, started <span class="number">12012</span>)>准备消费<span class="number">512</span>,还剩<span class="number">36</span>的钱,钱不足</span><br><span class="line"><Consumer(消费者<span class="number">4</span>, started <span class="number">6924</span>)>准备消费<span class="number">568</span>,还剩<span class="number">36</span>的钱,钱不足</span><br><span class="line"><Producer(生产者<span class="number">0</span>, started <span class="number">18116</span>)>生产了<span class="number">692</span>的钱,还剩<span class="number">728</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">2</span>, started <span class="number">14100</span>)>准备消费<span class="number">762</span>,还剩<span class="number">728</span>的钱,钱不足</span><br><span class="line"><Consumer(消费者<span class="number">3</span>, started <span class="number">12012</span>)>消费了<span class="number">512</span>的钱,还剩<span class="number">216</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">4</span>, started <span class="number">6924</span>)>准备消费<span class="number">568</span>,还剩<span class="number">216</span>的钱,钱不足</span><br><span class="line"><Producer(生产者<span class="number">1</span>, started <span class="number">18792</span>)>生产了<span class="number">523</span>的钱,还剩<span class="number">739</span>的钱</span><br><span class="line"><Producer(生产者<span class="number">2</span>, started <span class="number">19104</span>)>生产了<span class="number">457</span>的钱,还剩<span class="number">1196</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">2</span>, started <span class="number">14100</span>)>消费了<span class="number">762</span>的钱,还剩<span class="number">434</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">4</span>, started <span class="number">6924</span>)>准备消费<span class="number">568</span>,还剩<span class="number">434</span>的钱,钱不足</span><br><span class="line"><Producer(生产者<span class="number">3</span>, started <span class="number">17256</span>)>生产了<span class="number">171</span>的钱,还剩<span class="number">605</span>的钱</span><br><span class="line"><Producer(生产者<span class="number">4</span>, started <span class="number">1284</span>)>生产了<span class="number">486</span>的钱,还剩<span class="number">1091</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">4</span>, started <span class="number">6924</span>)>消费了<span class="number">568</span>的钱,还剩<span class="number">523</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">0</span>, started <span class="number">11240</span>)>准备消费<span class="number">584</span>,还剩<span class="number">523</span>的钱,钱不足</span><br><span class="line"><Consumer(消费者<span class="number">1</span>, started <span class="number">16408</span>)>准备消费<span class="number">605</span>,还剩<span class="number">523</span>的钱,钱不足</span><br><span class="line"><Producer(生产者<span class="number">2</span>, started <span class="number">19104</span>)>生产了<span class="number">774</span>的钱,还剩<span class="number">1297</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">3</span>, started <span class="number">12012</span>)>消费了<span class="number">621</span>的钱,还剩<span class="number">676</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">0</span>, started <span class="number">11240</span>)>消费了<span class="number">584</span>的钱,还剩<span class="number">92</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">1</span>, started <span class="number">16408</span>)>准备消费<span class="number">605</span>,还剩<span class="number">92</span>的钱,钱不足</span><br><span class="line"><Producer(生产者<span class="number">0</span>, started <span class="number">18116</span>)>生产了<span class="number">383</span>的钱,还剩<span class="number">475</span>的钱</span><br><span class="line"><Producer(生产者<span class="number">1</span>, started <span class="number">18792</span>)>生产了<span class="number">639</span>的钱,还剩<span class="number">1114</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">1</span>, started <span class="number">16408</span>)>消费了<span class="number">605</span>的钱,还剩<span class="number">509</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">4</span>, started <span class="number">6924</span>)>消费了<span class="number">116</span>的钱,还剩<span class="number">393</span>的钱</span><br><span class="line"><Producer(生产者<span class="number">3</span>, started <span class="number">17256</span>)>生产了<span class="number">550</span>的钱,还剩<span class="number">943</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">2</span>, started <span class="number">14100</span>)>消费了<span class="number">543</span>的钱,还剩<span class="number">400</span>的钱</span><br><span class="line"><Producer(生产者<span class="number">4</span>, started <span class="number">1284</span>)>生产了<span class="number">957</span>的钱,还剩<span class="number">1357</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">3</span>, started <span class="number">12012</span>)>消费了<span class="number">754</span>的钱,还剩<span class="number">603</span>的钱</span><br><span class="line"><Producer(生产者<span class="number">2</span>, started <span class="number">19104</span>)>生产了<span class="number">463</span>的钱,还剩<span class="number">1066</span>的钱</span><br><span class="line"><Consumer(消费者<span class="number">0</span>, started <span class="number">11240</span>)>消费了<span class="number">778</span>的钱,还剩<span class="number">288</span>的钱</span><br></pre></td></tr></tbody></table></figure><p>队列 queue</p><p>from queue import Queue</p><p>使用多线程爬取表情包</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> queue <span class="keyword">import</span> Queue</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生产者消费者下载表情包</span></span><br><span class="line"><span class="comment">#  其中需要两个队列,一个是获取每一页的url 还有一个获取每个表情的url</span></span><br><span class="line"><span class="comment"># 生产者负责获取每个表情包的url,消费者负责将表情的url写进文件</span></span><br><span class="line"></span><br><span class="line">headers = {</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class="line">                  <span class="string">'Chrome/76.0.3809.100 Safari/537.36 '</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Producer</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, page_queue, img_queue, *args, **kwargs)</span>:</span>  <span class="comment"># 构造函数</span></span><br><span class="line">        super(Producer, self).__init__(*args, **kwargs)  <span class="comment"># 继承父类的方法</span></span><br><span class="line">        self.page_queue = page_queue</span><br><span class="line">        self.img_queue = img_queue</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> self.page_queue.empty():</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            url = self.page_queue.get()</span><br><span class="line">            self.parse_page(url)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_page</span><span class="params">(self, url)</span>:</span></span><br><span class="line">        response = requests.get(url, headers=headers)</span><br><span class="line">        html = etree.HTML(response.text)</span><br><span class="line">        images = html.xpath(<span class="string">"//div[@class='page-content text-center']//img[@class!='gif']"</span>)</span><br><span class="line">        <span class="keyword">for</span> img <span class="keyword">in</span> images:</span><br><span class="line">            file_url = img.get(<span class="string">'data-original'</span>)</span><br><span class="line">            alt = img.get(<span class="string">'alt'</span>)</span><br><span class="line">            suffix = os.path.splitext(file_url)</span><br><span class="line">            alt = re.sub(<span class="string">r"[!\?,\.！？]"</span>, <span class="string">''</span>, alt)</span><br><span class="line">            filename = alt + suffix[<span class="number">1</span>]</span><br><span class="line">            self.img_queue.put((file_url, filename))</span><br><span class="line">            <span class="comment"># download_img(file_url, filename)</span></span><br><span class="line">            <span class="comment"># 此处不能用urllib.request.urlretrieve() 会403</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Consumer</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, page_queue, img_queue, *args, **kwargs)</span>:</span>  <span class="comment"># 构造函数</span></span><br><span class="line">        super(Consumer, self).__init__(*args, **kwargs)  <span class="comment"># 继承父类的方法</span></span><br><span class="line">        self.page_queue = page_queue</span><br><span class="line">        self.img_queue = img_queue</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> self.img_queue.empty() <span class="keyword">and</span> self.page_queue.empty():</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            img_url, filename = self.img_queue.get()  <span class="comment"># 解析元组</span></span><br><span class="line">            self.download_img(img_url, filename)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download_img</span><span class="params">(self, url, filename)</span>:</span></span><br><span class="line">        file_name = <span class="string">'D:\\images\\'</span> + filename</span><br><span class="line">        response = requests.get(url, headers=headers)</span><br><span class="line">        <span class="keyword">with</span> open(file_name, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(response.content)</span><br><span class="line">        print(filename + <span class="string">'下载完成'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    page_queue = Queue(<span class="number">100</span>)</span><br><span class="line">    img_queue = Queue(<span class="number">50000</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">101</span>):</span><br><span class="line">        url = <span class="string">'http://www.doutula.com/photo/list/?page=%d'</span> % i</span><br><span class="line">        page_queue.put(url)  <span class="comment"># 将每一页的url加入队列中</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        Producer(page_queue, img_queue).start()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        Consumer(page_queue, img_queue).start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><p>selenium与chromedriver</p><p>安装selenium</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install selenium</span><br></pre></td></tr></tbody></table></figure><p>安装chromedriver(安装与自己浏览器匹配的版本,将chromedriver放在不含中文的文件夹下)</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://npm.taobao.org/mirrors/chromedriver/</span><br></pre></td></tr></tbody></table></figure><p>selenium测试和行为链</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="comment">#  行为链</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.action_chains <span class="keyword">import</span> ActionChains</span><br><span class="line">driver_path = <span class="string">r'E:\Program Files\chromedriver\chromedriver.exe'</span></span><br><span class="line">driver = webdriver.Chrome(executable_path=driver_path)</span><br><span class="line">driver.get(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line">actions = ActionChains(driver)</span><br><span class="line">inputTag = driver.find_element_by_name(<span class="string">'wd'</span>)</span><br><span class="line">submit = driver.find_element_by_id(<span class="string">'su'</span>)</span><br><span class="line">actions.move_to_element(inputTag)</span><br><span class="line">actions.send_keys_to_element(inputTag, <span class="string">'python'</span>)</span><br><span class="line">actions.move_to_element(submit)</span><br><span class="line">actions.click(submit)</span><br><span class="line">actions.perform()</span><br></pre></td></tr></tbody></table></figure><p>selenium api文档</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.common.action_chains</span><br></pre></td></tr></tbody></table></figure><p>操作cookie</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> cookie <span class="keyword">in</span> driver.get_cookies():</span><br><span class="line">    print(cookie)</span><br><span class="line"></span><br><span class="line">print(driver.get_cookie(<span class="string">'PSTM'</span>))</span><br><span class="line"></span><br><span class="line">print(driver.delete_cookie(<span class="string">'PSTM'</span>))</span><br><span class="line"></span><br><span class="line">print(driver.delete_all_cookies())</span><br></pre></td></tr></tbody></table></figure><p>显示等待和隐式等待</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">driver_path = <span class="string">r'E:\Program Files\chromedriver\chromedriver.exe'</span></span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(driver_path)</span><br><span class="line">driver.get(<span class="string">'http://www.douban.com'</span>)</span><br><span class="line"><span class="comment"># driver.implicitly_wait(5)  # 隐式等待</span></span><br><span class="line"></span><br><span class="line">WebDriverWait(driver, <span class="number">10</span>).until(  <span class="comment"># 显示等待 当元素出现就返回</span></span><br><span class="line">    EC.presence_of_element_located((By.ID, <span class="string">'anony-group'</span>))</span><br><span class="line">)</span><br><span class="line"><span class="comment"># driver.find_element_by_name('weweweew')</span></span><br></pre></td></tr></tbody></table></figure><p>页面切换</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">driver_path = <span class="string">r'E:\Program Files\chromedriver\chromedriver.exe'</span></span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(driver_path)</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line"></span><br><span class="line">driver.execute_script(<span class="string">"window.open('http://www.douban.com')"</span>)</span><br><span class="line">driver.switch_to.window(driver.window_handles[<span class="number">1</span>])  <span class="comment"># driver.window_handles[1] 页面句柄 </span></span><br><span class="line"><span class="comment"># switch_to.window 跳转页面</span></span><br><span class="line">print(driver.current_url)</span><br></pre></td></tr></tbody></table></figure><p>使用代理</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line">driver_path = <span class="string">r'E:\Program Files\chromedriver\chromedriver.exe'</span></span><br><span class="line">options = webdriver.ChromeOptions()  <span class="comment"># 代理</span></span><br><span class="line">options.add_argument(<span class="string">'--proxy-server=http://119.57.108.65:53281'</span>)</span><br><span class="line">driver = webdriver.Chrome(executable_path=driver_path, chrome_options=options)</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">'http://httpbin.org/ip'</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 对元素进行操作</span><br><span class="line">from selenium.webdriver.remote.webelement import WebElement</span><br><span class="line"># 对元素进行操作</span><br><span class="line">submitBtn = driver.fin_element_by_id('su')</span><br><span class="line">print(submitBtn.get_attribute("value"))</span><br></pre></td></tr></tbody></table></figure><p>selenium实现获取拉勾网职位信息</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">requesst_url</span><span class="params">()</span>:</span></span><br><span class="line">    driver_path = <span class="string">r'E:\Program Files\chromedriver\chromedriver.exe'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.driver = webdriver.Chrome(requesst_url.driver_path)</span><br><span class="line">        self.url = <span class="string">'https://www.lagou.com/jobs/list_python?labelWords=&fromSearch=true&suginput='</span></span><br><span class="line">        self.positions = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.driver.get(self.url)</span><br><span class="line">        self.driver.find_element_by_xpath(<span class="string">"//div[@class='body-btn']"</span>).click()</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            source = self.driver.page_source</span><br><span class="line">            self.parse_page(source)</span><br><span class="line">            WebDriverWait(self.driver, <span class="number">10</span>).until(</span><br><span class="line">                EC.presence_of_element_located((By.XPATH, <span class="string">"//div[@class='pager_container']//span[last()]"</span>))</span><br><span class="line">            )</span><br><span class="line">            next_btn = self.driver.find_element_by_xpath(<span class="string">"//div[@class='pager_container']//span[last()]"</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'pager_next_disabled'</span> <span class="keyword">in</span> next_btn.get_attribute(<span class="string">'class'</span>):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                next_btn.click()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_page</span><span class="params">(self, source)</span>:</span></span><br><span class="line">        html = etree.HTML(source)</span><br><span class="line">        detail_urls = html.xpath(<span class="string">"//a[@class='position_link']/@href"</span>)</span><br><span class="line">        <span class="keyword">for</span> detail_url <span class="keyword">in</span> detail_urls:</span><br><span class="line">            self.driver.execute_script(<span class="string">"window.open('%s')"</span> % detail_url) <span class="comment"># 切换到新的页面</span></span><br><span class="line">            self.driver.switch_to.window(self.driver.window_handles[<span class="number">1</span>])</span><br><span class="line">            WebDriverWait(self.driver, <span class="number">10</span>).until(</span><br><span class="line">                EC.presence_of_element_located((By.XPATH, <span class="string">"//div[@class='job-name']"</span>))</span><br><span class="line">            )</span><br><span class="line">            source = self.driver.page_source</span><br><span class="line">            self.parse_detail_page(source)</span><br><span class="line">            self.driver.close()</span><br><span class="line">            self.driver.switch_to.window(self.driver.window_handles[<span class="number">0</span>]) <span class="comment"># 切换到原来的页面</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_detail_page</span><span class="params">(self, source)</span>:</span></span><br><span class="line">        html = etree.HTML(source)</span><br><span class="line">        position_name = html.xpath(<span class="string">"//div[@class='job-name']/@title"</span>)[<span class="number">0</span>]</span><br><span class="line">        spans = html.xpath(<span class="string">"//dd[@class='job_request']"</span>)[<span class="number">0</span>]</span><br><span class="line">        salary = spans.xpath(<span class="string">".//span[@class='salary']/text()"</span>)[<span class="number">0</span>].strip()</span><br><span class="line">        city = re.sub(<span class="string">r"[\s/]"</span>, <span class="string">''</span>, spans.xpath(<span class="string">".//span/text()"</span>)[<span class="number">1</span>]).strip()</span><br><span class="line">        work_years = re.sub(<span class="string">r"[\s/]"</span>, <span class="string">''</span>, spans.xpath(<span class="string">".//span/text()"</span>)[<span class="number">2</span>]).strip()</span><br><span class="line">        company_name = html.xpath(<span class="string">"//div[@class='job_company_content']//em/text()"</span>)[<span class="number">0</span>].strip()</span><br><span class="line">        require = re.sub(<span class="string">r"[\s/]"</span>, <span class="string">''</span>, spans.xpath(<span class="string">".//span/text()"</span>)[<span class="number">3</span>]).strip()</span><br><span class="line">        description = <span class="string">""</span>.join(html.xpath(<span class="string">"//div[@class='job-detail']//text()"</span>)).strip()</span><br><span class="line">        position = {</span><br><span class="line">            <span class="string">'position_name'</span>: position_name,</span><br><span class="line">            <span class="string">'salary'</span>: salary,</span><br><span class="line">            <span class="string">'city'</span>: city,</span><br><span class="line">            <span class="string">'work_years'</span>: work_years,</span><br><span class="line">            <span class="string">'company_name'</span>: company_name,</span><br><span class="line">            <span class="string">'require'</span>: require,</span><br><span class="line">            <span class="string">'description'</span>: description</span><br><span class="line">        }</span><br><span class="line">        self.positions.append(position)</span><br><span class="line">        print(position)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    requesst_url().run()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><p>图形验证码识别技术</p><p>tesseract的安装</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://digi.bib.uni-mannheim.de/tesseract/</span><br></pre></td></tr></tbody></table></figure><p>配置环境变量</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\Tesseract-OCR\tessdata</span><br></pre></td></tr></tbody></table></figure><p>测试验证码</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    pytesseract.pytesseract.tesseract_cmd = <span class="string">r'D:\Program Files\Tesseract-OCR\tesseract.exe'</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        time_stamp = int(time.time())</span><br><span class="line">        url = <span class="string">'http://47.103.204.177/BookStore/Vcode?a=%d'</span> % time_stamp</span><br><span class="line">        request.urlretrieve(url, <span class="string">'captcha.png'</span>)</span><br><span class="line">        image = Image.open(<span class="string">'captcha.png'</span>)</span><br><span class="line">        text = pytesseract.image_to_string(image)</span><br><span class="line">        print(text)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><p>Scrapy框架</p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB/image-20200305165442113.png" alt="image-20200305165442113"></p><p>安装</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install scrapy</span><br><span class="line"># windows下还要安装</span><br><span class="line">pip install pypiwin32</span><br></pre></td></tr></tbody></table></figure><p>文档</p><p>scrapy中文文档</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://scrapy-chs.readthedocs.io/zh_CN/1.0/intro/overview.html</span><br></pre></td></tr></tbody></table></figure><p>使用命令行创建项目</p><p>创建项目前将scrapy加到环境变量</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject 项目名称</span><br></pre></td></tr></tbody></table></figure><p>目录结构</p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB/image-20200305162348095.png" alt="image-20200305162348095"></p><p>使用命令生成一个爬虫</p><p>项目路径:</p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB/image-20200305162546702.png" alt="image-20200305162546702"></p><p>进入项目下创建</p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB/image-20200305162952859.png" alt="image-20200305162952859"></p><p>(创建爬虫项目要与项目名不一样)</p><p>生成项目</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QsbkSpiderSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'qsbk_spider'</span></span><br><span class="line">    allowed_domains = [<span class="string">'funnyba.com'</span>]</span><br><span class="line">    start_urls = [<span class="string">'http://funnyba.com/'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></tbody></table></figure><p>在settings设置</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ROBOTSTXT_OBEY = False  # 机器人协议</span><br></pre></td></tr></tbody></table></figure><p>在请求头添加User-Agent</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DEFAULT_REQUEST_HEADERS = {</span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'en'</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class="line">                  <span class="string">'Chrome/80.0.3987.132 Safari/537.36 '</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>例:爬取段子</p><p>qsbk_spider.py代码</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scrapy_demo.qsbk.qsbk.items <span class="keyword">import</span> QsbkItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QsbkSpiderSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'qsbk_spider'</span></span><br><span class="line">    allowed_domains = [<span class="string">'xiaohuabang.cn'</span>]</span><br><span class="line">    start_urls = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">190</span>):</span><br><span class="line">        start_urls.append(<span class="string">'http://www.xiaohuabang.cn/duanzi/hunduanzi/p%d/'</span> % i)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        hrefs = response.xpath(<span class="string">"//a[@class='link_more']/@href"</span>).getall()</span><br><span class="line">        <span class="keyword">for</span> href <span class="keyword">in</span> hrefs:</span><br><span class="line">            url = <span class="string">'http://www.xiaohuabang.cn'</span>+href</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url, callback=self.parse_detail)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_detail</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        title = response.xpath(<span class="string">"//em[contains(@style,'font')]/text()"</span>).get()</span><br><span class="line">        content = <span class="string">""</span>.join(response.xpath(<span class="string">"//div[@class='block untagged noline']//div[@class='content']//text()"</span>).getall()).strip()</span><br><span class="line">        content = re.sub(<span class="string">r"[\s\n\s?]"</span>, <span class="string">''</span>, content)</span><br><span class="line">        item = QsbkItem(title=title, content=content)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">yield</span> item</span><br></pre></td></tr></tbody></table></figure><p>pipelines.py代码</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define your item pipelines here</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Don't forget to add your pipeline to the ITEM_PIPELINES setting</span></span><br><span class="line"><span class="comment"># See: https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> scrapy.exporters <span class="keyword">import</span> JsonLinesItemExporter</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QsbkPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.fp = open(<span class="string">"duanzi.json"</span>, <span class="string">"wb"</span>)</span><br><span class="line">        self.exporter = JsonLinesItemExporter(self.fp, ensure_ascii=<span class="literal">False</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open_spider</span><span class="params">(self, spider)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        self.exporter.export_item(item)</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close_spider</span><span class="params">(self, spider)</span>:</span></span><br><span class="line">        self.fp.close()</span><br></pre></td></tr></tbody></table></figure><p>CrawlSpider爬虫</p><p>LinkExtractors链接提取器</p><p>常用参数</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">allow=() #允许的url,满足这个正则的url都会被提取</span><br><span class="line">deny=() 禁止的url,满足这个正则的url都不会被提取</span><br></pre></td></tr></tbody></table></figure><p>Rule 规则类</p><p>创建crawl模板的spider</p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB/image-20200306135437033.png" alt="image-20200306135437033"></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject 项目名称</span><br><span class="line">进入项目下</span><br><span class="line">即cd 项目名称</span><br><span class="line">创建 crawl模板的spider</span><br><span class="line">scrapy genspider -t crawl wxapp_spider "域名"</span><br></pre></td></tr></tbody></table></figure><p>需要使用LinkExtractors和Rule 规则</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">start_urls = [<span class="string">'http://www.wxapp-union.com/portal.php?mod=list&catid=2&page=1'</span>]</span><br><span class="line"><span class="comment"># start_url 是爬虫开始的url</span></span><br><span class="line"></span><br><span class="line">rules = (</span><br><span class="line">    Rule(LinkExtractor(allow=<span class="string">r'.+mod=list&catid=2&page=\d'</span>), follow=<span class="literal">True</span>),</span><br><span class="line">    Rule(LinkExtractor(allow=<span class="string">".+article-.+\.html"</span>), callback=<span class="string">"parse_detail"</span>, follow=<span class="literal">False</span>)</span><br><span class="line">)</span><br><span class="line"><span class="comment"># 重点是rules 其中的Rule(LinkExtractor(allow="")#allow 使用正则表达式,区分所有的url follow表示 是否要跟进比如前十页后面还有则设置为true 为详情页的rule设置callback是返回执行的解析函数,follow不跟进, 什么情况下需要指定callback如果这个url只为获取更多的url并不需要里面的数据, 则不用设置,若这个url需要获取页面的信息则要指定callback</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> scrapy.linkextractors <span class="keyword">import</span> LinkExtractor</span><br><span class="line"><span class="keyword">from</span> scrapy.spiders <span class="keyword">import</span> CrawlSpider, Rule</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scrapy_demo.wxapp.wxapp.items <span class="keyword">import</span> WxappItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WxappSpiderSpider</span><span class="params">(CrawlSpider)</span>:</span></span><br><span class="line">    name = <span class="string">'wxapp_spider'</span></span><br><span class="line">    allowed_domains = [<span class="string">'wxapp-union.com'</span>]</span><br><span class="line">    start_urls = [<span class="string">'http://www.wxapp-union.com/portal.php?mod=list&catid=2&page=1'</span>]</span><br><span class="line"></span><br><span class="line">    rules = (</span><br><span class="line">        Rule(LinkExtractor(allow=<span class="string">r'.+mod=list&catid=2&page=\d'</span>), follow=<span class="literal">True</span>),</span><br><span class="line">        Rule(LinkExtractor(allow=<span class="string">".+article-.+\.html"</span>), callback=<span class="string">"parse_detail"</span>, follow=<span class="literal">False</span>)</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_detail</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="comment"># item = {}</span></span><br><span class="line">        <span class="comment"># item['domain_id'] = response.xpath('//input[@id="sid"]/@value').get()</span></span><br><span class="line">        <span class="comment"># item['name'] = response.xpath('//div[@id="name"]').get()</span></span><br><span class="line">        <span class="comment"># item['description'] = response.xpath('//div[@id="description"]').get()</span></span><br><span class="line">        title = response.xpath(<span class="string">"//h1[@class='ph']/text()"</span>).get()</span><br><span class="line">        author_p = response.xpath(<span class="string">"//p[@class='authors']"</span>)</span><br><span class="line">        author = author_p.xpath(<span class="string">".//a/text()"</span>).get()</span><br><span class="line">        pub_time = author_p.xpath(<span class="string">".//span/text()"</span>).get()</span><br><span class="line">        article_content = <span class="string">""</span>.join(response.xpath(<span class="string">"//td[@id='article_content']//text()"</span>).getall()).strip()</span><br><span class="line">        <span class="comment"># print(article_content)</span></span><br><span class="line">        <span class="comment"># print("author: %s,pub_time: %s" % (author, pub_time))</span></span><br><span class="line">        item = WxappItem(title=title, author=author, pub_time=pub_time, content=article_content)</span><br><span class="line">        <span class="keyword">yield</span> item</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define your item pipelines here</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Don't forget to add your pipeline to the ITEM_PIPELINES setting</span></span><br><span class="line"><span class="comment"># See: https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scrapy.exporters <span class="keyword">import</span> JsonLinesItemExporter</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WxappPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.fp = open(<span class="string">'wxapp.json'</span>, <span class="string">'wb'</span>)</span><br><span class="line">        self.exporters = JsonLinesItemExporter(self.fp, ensure_ascii=<span class="literal">False</span>, encoding=<span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        self.exporters.export_item(item)</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close_spider</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.fp.close()</span><br></pre></td></tr></tbody></table></figure><p>主意要开启</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ITEM_PIPELINES = {</span><br><span class="line">   'wxapp.pipelines.WxappPipeline': 300,</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define here the models for your scraped items</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># See documentation in:</span></span><br><span class="line"><span class="comment"># https://docs.scrapy.org/en/latest/topics/items.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WxappItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    title = scrapy.Field()</span><br><span class="line">    author = scrapy.Field()</span><br><span class="line">    pub_time = scrapy.Field()</span><br><span class="line">    content = scrapy.Field()</span><br></pre></td></tr></tbody></table></figure><p>Scrapy shell </p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB/image-20200306140125182.png" alt="image-20200306140125182"></p><p>request和response对象</p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB/image-20200306141415606.png" alt="image-20200306141415606"></p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB/image-20200306141525160.png" alt="image-20200306141525160"></p><p>发送post请求</p><p>重写start_request方法,使用FormRequest()</p><p><img src="/[object%20Object]/2020/03/15/python%E7%88%AC%E8%99%AB/python%E7%88%AC%E8%99%AB/image-20200306165729994.png" alt="image-20200306165729994"></p><p>模拟登录豆瓣网</p></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##python爬虫基础&lt;/p&gt;
&lt;p&gt;urllib库,url库含有四个模块&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;request 是最基本的请求方式,error是异常处理信息,parse是解析的工具类,你可以将没有编码的url放在parse工具中编码和解码,robotparser主要是用来识别网站的 robots.txt 文件.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例: &lt;/p&gt;
    
    </summary>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/categories/python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/tags/python%E7%88%AC%E8%99%AB/"/>
    
      <category term="python" scheme="http://philxling.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>爬虫前奏</title>
    <link href="http://philxling.cn/[object%20Object]/2020/03/13/python%E7%88%AC%E8%99%AB/1-%E7%88%AC%E8%99%AB%E5%89%8D%E5%A5%8F/"/>
    <id>http://philxling.cn/[object%20Object]/2020/03/13/python%E7%88%AC%E8%99%AB/1-%E7%88%AC%E8%99%AB%E5%89%8D%E5%A5%8F/</id>
    <published>2020-03-13T05:46:21.000Z</published>
    <updated>2020-04-02T15:12:42.482Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="1-爬虫前奏"><a href="#1-爬虫前奏" class="headerlink" title="1-爬虫前奏"></a>1-爬虫前奏</h1><h2 id="爬虫的实际例子："><a href="#爬虫的实际例子：" class="headerlink" title="爬虫的实际例子："></a>爬虫的实际例子：</h2><ol><li><p>搜索引擎（百度、谷歌、360搜索等）。</p><a id="more"></a></li><li><p>伯乐在线。</p></li><li><p>惠惠购物助手。</p></li><li><p>数据分析与研究（数据冰山知乎专栏）。</p></li><li><p>抢票软件等。</p></li></ol><h2 id="什么是网络爬虫："><a href="#什么是网络爬虫：" class="headerlink" title="什么是网络爬虫："></a>什么是网络爬虫：</h2><ol><li>通俗理解：爬虫是一个模拟人类请求网站行为的程序。可以自动请求网页、并数据抓取下来，然后使用一定的规则提取有价值的数据。</li><li>专业介绍：<a href="https://baike.baidu.com/item/网络爬虫/5162711?fr=aladdin" target="_blank" rel="noopener">百度百科</a>。</li></ol><h2 id="通用爬虫和聚焦爬虫："><a href="#通用爬虫和聚焦爬虫：" class="headerlink" title="通用爬虫和聚焦爬虫："></a>通用爬虫和聚焦爬虫：</h2><ol><li>通用爬虫：通用爬虫是搜索引擎抓取系统（百度、谷歌、搜狗等）的重要组成部分。主要是将互联网上的网页下载到本地，形成一个互联网内容的镜像备份。</li><li>聚焦爬虫：是面向特定需求的一种网络爬虫程序，他与通用爬虫的区别在于：聚焦爬虫在实施网页抓取的时候会对内容进行筛选和处理，尽量保证只抓取与需求相关的网页信息。</li></ol><h2 id="为什么用Python写爬虫程序："><a href="#为什么用Python写爬虫程序：" class="headerlink" title="为什么用Python写爬虫程序："></a>为什么用Python写爬虫程序：</h2><ol><li>PHP：PHP是世界是最好的语言，但他天生不是做这个的，而且对多线程、异步支持不是很好，并发处理能力弱。爬虫是工具性程序，对速度和效率要求比较高。</li><li>Java：生态圈很完善，是Python爬虫最大的竞争对手。但是Java语言本身很笨重，代码量很大。重构成本比较高，任何修改会导致代码大量改动。爬虫经常要修改采集代码。</li><li>C/C++：运行效率是无敌的。但是学习和开发成本高。写个小爬虫程序可能要大半天时间。</li><li>Python：语法优美、代码简洁、开发效率高、支持的模块多。相关的HTTP请求模块和HTML解析模块非常丰富。还有Scrapy和Scrapy-redis框架让我们开发爬虫变得异常简单。</li></ol><h2 id="准备工具："><a href="#准备工具：" class="headerlink" title="准备工具："></a>准备工具：</h2><ol><li>Python3.6开发环境。</li><li>Pycharm 2017 professional版。</li><li>虚拟环境。<code>virtualenv/virtualenvwrapper</code>。</li></ol></body></html>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-爬虫前奏&quot;&gt;&lt;a href=&quot;#1-爬虫前奏&quot; class=&quot;headerlink&quot; title=&quot;1-爬虫前奏&quot;&gt;&lt;/a&gt;1-爬虫前奏&lt;/h1&gt;&lt;h2 id=&quot;爬虫的实际例子：&quot;&gt;&lt;a href=&quot;#爬虫的实际例子：&quot; class=&quot;headerlink&quot; title=&quot;爬虫的实际例子：&quot;&gt;&lt;/a&gt;爬虫的实际例子：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;搜索引擎（百度、谷歌、360搜索等）。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/categories/python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="python爬虫" scheme="http://philxling.cn/tags/python%E7%88%AC%E8%99%AB/"/>
    
      <category term="python" scheme="http://philxling.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>mysql连表查询</title>
    <link href="http://philxling.cn/[object%20Object]/2020/03/08/mysql/mysql1/"/>
    <id>http://philxling.cn/[object%20Object]/2020/03/08/mysql/mysql1/</id>
    <published>2020-03-08T04:00:25.000Z</published>
    <updated>2020-04-02T14:49:48.975Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><p>作者: philxling</p><p>通过多个表,然后用log记录的方式记录知识:</p><a id="more"></a><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">create table goods (</span><br><span class="line">  goods_id mediumint(8) unsigned primary key auto_increment,</span><br><span class="line">  goods_name varchar(120) not null default '',</span><br><span class="line">  cat_id smallint(5) unsigned not null default '0',</span><br><span class="line">  brand_id smallint(5) unsigned not null default '0',</span><br><span class="line">  goods_sn char(15) not null default '',</span><br><span class="line">  goods_number smallint(5) unsigned not null default '0',</span><br><span class="line">  shop_price decimal(10,2) unsigned not null default '0.00',</span><br><span class="line">  market_price decimal(10,2) unsigned not null default '0.00',</span><br><span class="line">  click_count int(10) unsigned not null default '0'</span><br><span class="line">) engine=myisam default charset=utf8;</span><br><span class="line">insert into `goods` values (1,'kd876',4,8,'ecs000000',1,1388.00,1665.60,9),</span><br><span class="line">(4,'诺基亚n85原装充电器',8,1,'ecs000004',17,58.00,69.60,0),</span><br><span class="line">(3,'诺基亚原装5800耳机',8,1,'ecs000002',24,68.00,81.60,3),</span><br><span class="line">(5,'索爱原装m2卡读卡器',11,7,'ecs000005',8,20.00,24.00,3),</span><br><span class="line">(6,'胜创kingmax内存卡',11,0,'ecs000006',15,42.00,50.40,0),</span><br><span class="line">(7,'诺基亚n85原装立体声耳机hs-82',8,1,'ecs000007',20,100.00,120.00,0),</span><br><span class="line">(8,'飞利浦9@9v',3,4,'ecs000008',1,399.00,478.79,10),</span><br><span class="line">(9,'诺基亚e66',3,1,'ecs000009',4,2298.00,2757.60,20),</span><br><span class="line">(10,'索爱c702c',3,7,'ecs000010',7,1328.00,1593.60,11),</span><br><span class="line">(11,'索爱c702c',3,7,'ecs000011',1,1300.00,0.00,0),</span><br><span class="line">(12,'摩托罗拉a810',3,2,'ecs000012',8,983.00,1179.60,13),</span><br><span class="line">(13,'诺基亚5320 xpressmusic',3,1,'ecs000013',8,1311.00,1573.20,13),</span><br><span class="line">(14,'诺基亚5800xm',4,1,'ecs000014',1,2625.00,3150.00,6),</span><br><span class="line">(15,'摩托罗拉a810',3,2,'ecs000015',3,788.00,945.60,8),</span><br><span class="line">(16,'恒基伟业g101',2,11,'ecs000016',0,823.33,988.00,3),</span><br><span class="line">(17,'夏新n7',3,5,'ecs000017',1,2300.00,2760.00,2),</span><br><span class="line">(18,'夏新t5',4,5,'ecs000018',1,2878.00,3453.60,0),</span><br><span class="line">(19,'三星sgh-f258',3,6,'ecs000019',12,858.00,1029.60,7),</span><br><span class="line">(20,'三星bc01',3,6,'ecs000020',12,280.00,336.00,14),</span><br><span class="line">(21,'金立 a30',3,10,'ecs000021',40,2000.00,2400.00,4),</span><br><span class="line">(22,'多普达touch hd',3,3,'ecs000022',1,5999.00,7198.80,16),</span><br><span class="line">(23,'诺基亚n96',5,1,'ecs000023',8,3700.00,4440.00,17),</span><br><span class="line">(24,'p806',3,9,'ecs000024',100,2000.00,2400.00,35),</span><br><span class="line">(25,'小灵通/固话50元充值卡',13,0,'ecs000025',2,48.00,57.59,0),</span><br><span class="line">(26,'小灵通/固话20元充值卡',13,0,'ecs000026',2,19.00,22.80,0),</span><br><span class="line">(27,'联通100元充值卡',15,0,'ecs000027',2,95.00,100.00,0),</span><br><span class="line">(28,'联通50元充值卡',15,0,'ecs000028',0,45.00,50.00,0),</span><br><span class="line">(29,'移动100元充值卡',14,0,'ecs000029',0,90.00,0.00,0),</span><br><span class="line">(30,'移动20元充值卡',14,0,'ecs000030',9,18.00,21.00,1),</span><br><span class="line">(31,'摩托罗拉e8 ',3,2,'ecs000031',1,1337.00,1604.39,5),</span><br><span class="line">(32,'诺基亚n85',3,1,'ecs000032',4,3010.00,3612.00,9);</span><br><span class="line">create table category (</span><br><span class="line">cat_id smallint unsigned auto_increment primary key,</span><br><span class="line">cat_name varchar(90) not null default '',</span><br><span class="line">parent_id smallint unsigned</span><br><span class="line">)engine myisam charset utf8;</span><br><span class="line">INSERT INTO `category` VALUES</span><br><span class="line">(1,'手机类型',0),</span><br><span class="line">(2,'CDMA手机',1),</span><br><span class="line">(3,'GSM手机',1),</span><br><span class="line">(4,'3G手机',1),</span><br><span class="line">(5,'双模手机',1),</span><br><span class="line">(6,'手机配件',0),</span><br><span class="line">(7,'充电器',6),</span><br><span class="line">(8,'耳机',6),</span><br><span class="line">(9,'电池',6),</span><br><span class="line">(11,'读卡器和内存卡',6),</span><br><span class="line">(12,'充值卡',0),</span><br><span class="line">(13,'小灵通/固话充值卡',12),</span><br><span class="line">(14,'移动手机充值卡',12),</span><br><span class="line">(15,'联通手机充值卡',12);</span><br><span class="line">CREATE TABLE `result` (</span><br><span class="line">  `name` varchar(20) DEFAULT NULL,</span><br><span class="line">  `subject` varchar(20) DEFAULT NULL,</span><br><span class="line">  `score` tinyint(4) DEFAULT NULL</span><br><span class="line">) ENGINE=MyISAM DEFAULT CHARSET=utf8;</span><br><span class="line">insert into result</span><br><span class="line">values</span><br><span class="line">('张三','数学',90),</span><br><span class="line">('张三','语文',50),</span><br><span class="line">('张三','地理',40),</span><br><span class="line">('李四','语文',55),</span><br><span class="line">('李四','政治',45),</span><br><span class="line">('王五','政治',30);</span><br><span class="line">create table a (</span><br><span class="line">id char(1),</span><br><span class="line">num int</span><br><span class="line">)engine myisam charset utf8;</span><br><span class="line">insert into a values ('a',5),('b',10),('c',15),('d',10);</span><br><span class="line">create table b (</span><br><span class="line">id char(1),</span><br><span class="line">num int</span><br><span class="line">)engine myisam charset utf8;</span><br><span class="line">insert into b values ('b',5),('c',15),('d',20),('e',99);</span><br><span class="line">create table m(</span><br><span class="line">     mid int,</span><br><span class="line">     hid int,</span><br><span class="line">     gid int,</span><br><span class="line">     mres varchar(10),</span><br><span class="line">     matime date</span><br><span class="line">)engine myisam charset utf8;</span><br><span class="line">create table t (</span><br><span class="line">     tid int,</span><br><span class="line">     tname varchar(20)</span><br><span class="line">)engine myisam charset utf8;</span><br><span class="line">insert into m</span><br><span class="line">     values</span><br><span class="line">     (1,1,2,'2:0','2006-05-21'),</span><br><span class="line">     (2,2,3,'1:2','2006-06-21'),</span><br><span class="line">     (3,3,1,'2:5','2006-06-25'),</span><br><span class="line">     (4,2,1,'3:2','2006-07-21');</span><br><span class="line">insert into t</span><br><span class="line">     values</span><br><span class="line">     (1,'国安'),</span><br><span class="line">     (2,'申花'),</span><br><span class="line">     (3,'布尔联队');</span><br><span class="line">create table mian ( num int) engine myisam;</span><br><span class="line">insert into mian values</span><br><span class="line">(3),</span><br><span class="line">(12),</span><br><span class="line">(15),</span><br><span class="line">(25),</span><br><span class="line">(23),</span><br><span class="line">(29),</span><br><span class="line">(34),</span><br><span class="line">(37),</span><br><span class="line">(32);</span><br><span class="line">create table user (</span><br><span class="line">uid int primary key auto_increment,</span><br><span class="line">name varchar(20) not null default '',</span><br><span class="line">age smallint unsigned not null default 0</span><br><span class="line">) engine myisam charset utf8;</span><br><span class="line">create table boy (</span><br><span class="line">    hid char(1),</span><br><span class="line">     bname varchar(20)</span><br><span class="line">)engine myisam charset utf8;</span><br><span class="line">insert into boy (bname,hid)</span><br><span class="line">     values</span><br><span class="line">     ('屌丝','A'),</span><br><span class="line">     ('杨过','B'),</span><br><span class="line">     ('陈冠希','C');</span><br><span class="line">create table girl (</span><br><span class="line">    hid char(1),</span><br><span class="line">     gname varchar(20)</span><br><span class="line">     )engine myisam charset utf8;</span><br><span class="line">insert into girl(gname,hid)</span><br><span class="line">     values</span><br><span class="line">     ('小龙女','B'),</span><br><span class="line">     ('张柏芝','C'),</span><br><span class="line">     ('死宅女','D');</span><br></pre></td></tr></tbody></table></figure><p>mysql> select goods_name,goods_id, concat(“HTC”,substring(goods_name,4)) as name from goods where goods_name like “诺基亚%”;<br>+—————————————-+———-+———————————-+<br>| goods_name                             | goods_id | name                             |<br>+—————————————-+———-+———————————-+<br>| 诺基亚n85原装充电器                    |        4 | HTCn85原装充电器                 |<br>| 诺基亚原装5800耳机                     |        3 | HTC原装5800耳机                  |<br>| 诺基亚n85原装立体声耳机hs-82           |        7 | HTCn85原装立体声耳机hs-82        |<br>| 诺基亚e66                              |        9 | HTCe66                           |<br>| 诺基亚5320 xpressmusic                 |       13 | HTC5320 xpressmusic              |<br>| 诺基亚5800xm                           |       14 | HTC5800xm                        |<br>| 诺基亚n96                              |       23 | HTCn96                           |<br>| 诺基亚n85                              |       32 | HTCn85                           |<br>+—————————————-+———-+———————————-+<br>8 rows in set (0.00 sec)</p><p>mysql> select * from mian<br>    -> ;<br>+——+<br>| num  |<br>+——+<br>|    3 |<br>|   12 |<br>|   15 |<br>|   20 |<br>|   20 |<br>|   20 |<br>|   30 |<br>|   30 |<br>|   30 |<br>+——+<br>9 rows in set (0.00 sec)</p><p>mysql> #取出第三个栏目下价格小于1000或者大于3000 同时点击量大于5的商品<br>mysql> select goods_id ,goods_name, shop_price,cat_id,click_count from goods where cat_id=3 and (shop_price<1000 || shop_price>3000) and click_count >=5 ;<br>+———-+——————-+————+——–+————-+<br>| goods_id | goods_name        | shop_price | cat_id | click_count |<br>+———-+——————-+————+——–+————-+<br>|        8 | 飞利浦9@9v        |     399.00 |      3 |          10 |<br>|       12 | 摩托罗拉a810      |     983.00 |      3 |          13 |<br>|       15 | 摩托罗拉a810      |     788.00 |      3 |           8 |<br>|       19 | 三星sgh-f258      |     858.00 |      3 |           7 |<br>|       20 | 三星bc01          |     280.00 |      3 |          14 |<br>|       22 | 多普达touch hd    |    5999.00 |      3 |          16 |<br>|       32 | 诺基亚n85         |    3010.00 |      3 |           9 |<br>+———-+——————-+————+——–+————-+<br>7 rows in set (0.00 sec)</p><p>mysql> #最贵的商品的价格<br>mysql> select max(shop_price) from goods;<br>+—————–+<br>| max(shop_price) |<br>+—————–+<br>|         5999.00 |<br>+—————–+<br>1 row in set (0.06 sec)</p><p>mysql> #查询最便宜的商品的价格<br>mysql> select min(shop_price) from goods ;<br>+—————–+<br>| min(shop_price) |<br>+—————–+<br>|           18.00 |<br>+—————–+<br>1 row in set (0.00 sec)</p><p>mysql> #查出最旧的商品<br>mysql> select min(goods_id) from goods;<br>+—————+<br>| min(goods_id) |<br>+—————+<br>|             1 |<br>+—————+<br>1 row in set (0.10 sec)</p><p>mysql> #goods_number是库存量<br>mysql> select sum(goods_number) from goods<br>    -> ;<br>+——————-+<br>| sum(goods_number) |<br>+——————-+<br>|               313 |<br>+——————-+<br>1 row in set (0.00 sec)</p><p>mysql> #查看自己店里的商品的平均价格</p><p>mysql> select avg(shop_price) from goods;<br>+—————–+<br>| avg(shop_price) |<br>+—————–+<br>|     1232.526774 |<br>+—————–+<br>1 row in set (0.00 sec)</p><p>mysql> #统计多少种商品<br>mysql> select count(<em>) from goods;<br>+———-+<br>| count(</em>) |<br>+———-+<br>|       31 |<br>+———-+<br>1 row in set (0.00 sec)</p><p>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| girl             |<br>| goods            |<br>| m                |<br>| mian             |<br>| result           |<br>| t                |<br>| user             |<br>+——————+<br>11 rows in set (0.17 sec)</p><p>mysql> select * from t;<br>+——+————–+<br>| tid  | tname        |<br>+——+————–+<br>|    1 | 国安         |<br>|    2 | 申花         |<br>|    3 | 布尔联队     |<br>+——+————–+<br>3 rows in set (0.06 sec)</p><p>mysql> #select count(<em>) from 表名,表示查询的是绝对的行数,哪怕某一行所有字段全为null的时候也能计算在内,<br>mysql> #而select count(字段) from 表名 查询的是该列不为null的所有行的行数<br>mysql> #用count(</em>)和count(1) 那个好,对于myisamm的表咩有区别,这种引擎计数器在维护,innodb的用count(*))直接读行数,效率很低<br>mysql> #计算第三个栏目下所有商品的库存量之和<br>mysql> select sum(goods_number) from goods where cat_id =3;<br>+——————-+<br>| sum(goods_number) |<br>+——————-+<br>|               203 |<br>+——————-+<br>1 row in set (0.00 sec)</p><p>mysql> #计算每个栏目下的库存量之和<br>mysql> select cat_id, sum(goods_number) from goods  group by cat_id ;<br>+——–+——————-+<br>| cat_id | sum(goods_number) |<br>+——–+——————-+<br>|      4 |                 3 |<br>|      8 |                61 |<br>|     11 |                23 |<br>|      3 |               203 |<br>|      2 |                 0 |<br>|      5 |                 8 |<br>|     13 |                 4 |<br>|     15 |                 2 |<br>|     14 |                 9 |<br>+——–+——————-+<br>9 rows in set (0.05 sec)</p><p>mysql> #having 筛选<br>mysql> #查询每种商品积压的货款<br>mysql> show databases;<br>+——————–+<br>| Database           |<br>+——————–+<br>| bookstore          |<br>| clouddb01          |<br>| clouddb02          |<br>| clouddb03          |<br>| information_schema |<br>| mydb               |<br>| mysql              |<br>| performance_schema |<br>| shop               |<br>| ssm_crud           |<br>| struts             |<br>| student            |<br>| sys                |<br>| test               |<br>| test01             |<br>+——————–+<br>15 rows in set (0.00 sec)</p><p>mysql> #查询每种商品积压的货款<br>mysql> select market_price,shop_price, market_price-shop_price as discount from goods where 1 having discount >200;<br>ERROR 1046 (3D000): No database selected<br>mysql> use test01;<br>Database changed</p><p>mysql> #查询每种商品积压的货款<br>mysql> #提示: 商品的库存量*价格</p><p>mysql> select goods_id ,shop_price,goods_number*shop_price as hk from goods;<br>+———-+————+———–+<br>| goods_id | shop_price | hk        |<br>+———-+————+———–+<br>|        1 |    1388.00 |   1388.00 |<br>|        4 |      58.00 |    986.00 |<br>|        3 |      68.00 |   1632.00 |<br>|        5 |      20.00 |    160.00 |<br>|        6 |      42.00 |    630.00 |<br>|        7 |     100.00 |   2000.00 |<br>|        8 |     399.00 |    399.00 |<br>|        9 |    2298.00 |   9192.00 |<br>|       10 |    1328.00 |   9296.00 |<br>|       11 |    1300.00 |   1300.00 |<br>|       12 |     983.00 |   7864.00 |<br>|       13 |    1311.00 |  10488.00 |<br>|       14 |    2625.00 |   2625.00 |<br>|       15 |     788.00 |   2364.00 |<br>|       16 |     823.33 |      0.00 |<br>|       17 |    2300.00 |   2300.00 |<br>|       18 |    2878.00 |   2878.00 |<br>|       19 |     858.00 |  10296.00 |<br>|       20 |     280.00 |   3360.00 |<br>|       21 |    2000.00 |  80000.00 |<br>|       22 |    5999.00 |   5999.00 |<br>|       23 |    3700.00 |  29600.00 |<br>|       24 |    2000.00 | 200000.00 |<br>|       25 |      48.00 |     96.00 |<br>|       26 |      19.00 |     38.00 |<br>|       27 |      95.00 |    190.00 |<br>|       28 |      45.00 |      0.00 |<br>|       29 |      90.00 |      0.00 |<br>|       30 |      18.00 |    162.00 |<br>|       31 |    1337.00 |   1337.00 |<br>|       32 |    3010.00 |  12040.00 |<br>+———-+————+———–+<br>31 rows in set (0.00 sec)</p><p>mysql> #查询该店积压的总货款<br>mysql> select goods_number ,sum(goods_number*shop_price) as sum from goods;<br>+————–+———–+<br>| goods_number | sum       |<br>+————–+———–+<br>|            1 | 398620.00 |<br>+————–+———–+<br>1 row in set (0.07 sec)</p><p>mysql> select sum(goods_number*shop_price) as sum from goods;<br>+———–+<br>| sum       |<br>+———–+<br>| 398620.00 |<br>+———–+<br>1 row in set (0.00 sec)</p><p>mysql> #查询每个栏目下积压的k货款<br>mysql> select cat_id, sum(goods_number*shop_price) as sum from goods group by cat_id;<br>+——–+———–+<br>| cat_id | sum       |<br>+——–+———–+<br>|      4 |   6891.00 |<br>|      8 |   4618.00 |<br>|     11 |    790.00 |<br>|      3 | 356235.00 |<br>|      2 |      0.00 |<br>|      5 |  29600.00 |<br>|     13 |    134.00 |<br>|     15 |    190.00 |<br>|     14 |    162.00 |<br>+——–+———–+<br>9 rows in set (0.03 sec)</p><p>mysql> #查询栏目的积压货款金额,且查出挤压金额超出20000的货款<br>mysql> select cat_id, sum(goods_number*shop_price) as sum from goods  group by cat_id having sum>20000;<br>+——–+———–+<br>| cat_id | sum       |<br>+——–+———–+<br>|      3 | 356235.00 |<br>|      5 |  29600.00 |<br>+——–+———–+<br>2 rows in set (0.00 sec)</p><p>mysql> #查询本店市场价与本店价省的钱,且筛选出省钱200以上的商品<br>mysql> select goods_name, market_price-shop_price as discount from goods having discount>200;<br>ERROR 1690 (22003): DECIMAL UNSIGNED value is out of range in ‘(<code>test01</code>.<code>goods</code>.<code>market_price</code> - <code>test01</code>.<code>goods</code>.<code>shop_price</code>)’<br>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| girl             |<br>| goods            |<br>| m                |<br>| mian             |<br>| result           |<br>| t                |<br>| user             |<br>+——————+<br>11 rows in set (0.14 sec)</p><p>mysql> select * from result;<br>+——–+———+——-+<br>| name   | subject | score |<br>+——–+———+——-+<br>| 张三   | 数学    |    90 |<br>| 张三   | 语文    |    50 |<br>| 张三   | 地理    |    40 |<br>| 李四   | 语文    |    55 |<br>| 李四   | 政治    |    45 |<br>| 王五   | 政治    |    30 |<br>+——–+———+——-+<br>6 rows in set (0.07 sec)</p><p>mysql> #查询出两门及两门以上不及格者的平均成绩<br>mysql> select avg(score) as average ,subject from result where subject>=2  group by name having average<60;<br>Empty set, 6 warnings (0.00 sec)</p><p>mysql> select avg(score) as average ,subject from result group by name;<br>+———+———+<br>| average | subject |<br>+———+———+<br>| 60.0000 | 数学    |<br>| 50.0000 | 语文    |<br>| 30.0000 | 政治    |<br>+———+———+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result group by name;<br>+———+——–+<br>| average | name   |<br>+———+——–+<br>| 60.0000 | 张三   |<br>| 50.0000 | 李四   |<br>| 30.0000 | 王五   |<br>+———+——–+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result where 1  group by name;<br>+———+——–+<br>| average | name   |<br>+———+——–+<br>| 60.0000 | 张三   |<br>| 50.0000 | 李四   |<br>| 30.0000 | 王五   |<br>+———+——–+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result where 1  group by name having average<60 ;<br>+———+——–+<br>| average | name   |<br>+———+——–+<br>| 50.0000 | 李四   |<br>| 30.0000 | 王五   |<br>+———+——–+<br>2 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result where score<60  group by name having avg(average) ;<br>Empty set (0.00 sec)</p><p>mysql> select avg(score<60) as average ,name from result where 1  group by name having avg(average) ;<br>Empty set (0.00 sec)</p><p>mysql> select avg(score<60) as average ,name from result where 1  group by name ;<br>+———+——–+<br>| average | name   |<br>+———+——–+<br>|  0.6667 | 张三   |<br>|  1.0000 | 李四   |<br>|  1.0000 | 王五   |<br>+———+——–+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result where score<60  group by name ;<br>+———+——–+<br>| average | name   |<br>+———+——–+<br>| 45.0000 | 张三   |<br>| 50.0000 | 李四   |<br>| 30.0000 | 王五   |<br>+———+——–+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result where subject>=2  group by name ;<br>Empty set, 6 warnings (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject) from result where score<60  group by name ;<br>+———+——–+—————-+<br>| average | name   | count(subject) |<br>+———+——–+—————-+<br>| 45.0000 | 张三   |              2 |<br>| 50.0000 | 李四   |              2 |<br>| 30.0000 | 王五   |              1 |<br>+———+——–+—————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject) as subject from result where score<60   group by name having subject>=2  ;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 45.0000 | 张三   |       2 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject) as subject from result where score<60   group by name having subject>=2 and avg(average);<br>Empty set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject)>=2 as subject from result where score<60   group by name having avg(average);<br>Empty set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject) as subject from result where score<60   group by name having subject>=2;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 45.0000 | 张三   |       2 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result where score<60  group by name ;<br>+———+——–+<br>| average | name   |<br>+———+——–+<br>| 45.0000 | 张三   |<br>| 50.0000 | 李四   |<br>| 30.0000 | 王五   |<br>+———+——–+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject) from result where score<60  group by name ;<br>+———+——–+—————-+<br>| average | name   | count(subject) |<br>+———+——–+—————-+<br>| 45.0000 | 张三   |              2 |<br>| 50.0000 | 李四   |              2 |<br>| 30.0000 | 王五   |              1 |<br>+———+——–+—————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject)>=2 from result where score<60  group by name ;<br>+———+——–+——————-+<br>| average | name   | count(subject)>=2 |<br>+———+——–+——————-+<br>| 45.0000 | 张三   |                 1 |<br>| 50.0000 | 李四   |                 1 |<br>| 30.0000 | 王五   |                 0 |<br>+———+——–+——————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject)>=2 from result where score<60  group by name ;<br>+———+——–+——————-+<br>| average | name   | count(subject)>=2 |<br>+———+——–+——————-+<br>| 45.0000 | 张三   |                 1 |<br>| 50.0000 | 李四   |                 1 |<br>| 30.0000 | 王五   |                 0 |<br>+———+——–+——————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject) from result where score<60  group by name ;<br>+———+——–+—————-+<br>| average | name   | count(subject) |<br>+———+——–+—————-+<br>| 45.0000 | 张三   |              2 |<br>| 50.0000 | 李四   |              2 |<br>| 30.0000 | 王五   |              1 |<br>+———+——–+—————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result where score<60 and subject>=2   group by name ;<br>Empty set, 5 warnings (0.00 sec)</p><p>mysql> select avg(score) as average ,name, count(subject) from result where score<60 and subject>=2   group by name ;<br>Empty set, 5 warnings (0.00 sec)</p><p>mysql> select avg(score) as average ,name, count(subject) from result where score<60    group by name ;<br>+———+——–+—————-+<br>| average | name   | count(subject) |<br>+———+——–+—————-+<br>| 45.0000 | 张三   |              2 |<br>| 50.0000 | 李四   |              2 |<br>| 30.0000 | 王五   |              1 |<br>+———+——–+—————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name, count(subject) as subject from result where score<60    group by name having subject>=2  ;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 45.0000 | 张三   |       2 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql> use test01<br>Database changed<br>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| girl             |<br>| goods            |<br>| m                |<br>| mian             |<br>| result           |<br>| t                |<br>| user             |<br>+——————+<br>11 rows in set (0.42 sec)</p><p>mysql> select avg(score) as average ,name, count(subject) as subject from result where score<60    group by name having subject>=2  ;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 45.0000 | 张三   |       2 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.14 sec)</p><p>mysql> insert into resule values(“赵六”,”语文”,100),<br>    -> (“赵六”,”数学”,99),<br>    -> (“赵六”,”英语”,98);<br>ERROR 1146 (42S02): Table ‘test01.resule’ doesn’t exist<br>mysql> insert into result values(“赵六”,”语文”,100),<br>    -> (“赵六”,”数学”,99),<br>    -> (“赵六”,”英语”,98);<br>Query OK, 3 rows affected (0.19 sec)<br>Records: 3  Duplicates: 0  Warnings: 0</p><p>mysql> select * from result;<br>+——–+———+——-+<br>| name   | subject | score |<br>+——–+———+——-+<br>| 张三   | 数学    |    90 |<br>| 张三   | 语文    |    50 |<br>| 张三   | 地理    |    40 |<br>| 李四   | 语文    |    55 |<br>| 李四   | 政治    |    45 |<br>| 王五   | 政治    |    30 |<br>| 赵六   | 语文    |   100 |<br>| 赵六   | 数学    |    99 |<br>| 赵六   | 英语    |    98 |<br>+——–+———+——-+<br>9 rows in set (0.00 sec)</p><p>mysql>  select avg(score) as average ,name, count(subject) as subject from result where score<60    group by name having subject>=2;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 45.0000 | 张三   |       2 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql> insert into result values(“张三”,”英语”,34);<br>Query OK, 1 row affected (0.05 sec)</p><p>mysql>  select avg(score) as average ,name, count(subject) as subject from result where score<60    group by name having subject>=2;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 41.3333 | 张三   |       3 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql>  select avg(score) as average ,name, sum(score<60) as subject from result   group by name having subject>=2;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 53.5000 | 张三   |       3 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql>  select avg(score) as average ,name, sum(score<60) as subject from result   group by name having subject>=2 order by average;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 50.0000 | 李四   |       2 |<br>| 53.5000 | 张三   |       3 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql>  select avg(score) as average ,name, sum(score<60) as subject from result   group by name having subject>=2 order by desc average;<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘desc average’ at line 1<br>mysql>  select avg(score) as average ,name, sum(score<60) as subject from result   group by name having subject>=2 order by  average desc;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 53.5000 | 张三   |       3 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql> #降序排 order by 列名 desc 降序/asc升序<br>mysql>  select avg(score) as average ,name, sum(score<60) as subject from result   group by name having subject>=2 order by  add_time asc;<br>ERROR 1054 (42S22): Unknown column ‘add_time’ in ‘order clause’<br>mysql> desc goods;<br>+————–+————————+——+—–+———+—————-+<br>| Field        | Type                   | Null | Key | Default | Extra          |<br>+————–+————————+——+—–+———+—————-+<br>| goods_id     | mediumint(8) unsigned  | NO   | PRI | NULL    | auto_increment |<br>| goods_name   | varchar(120)           | NO   |     |         |                |<br>| cat_id       | smallint(5) unsigned   | NO   |     | 0       |                |<br>| brand_id     | smallint(5) unsigned   | NO   |     | 0       |                |<br>| goods_sn     | char(15)               | NO   |     |         |                |<br>| goods_number | smallint(5) unsigned   | NO   |     | 0       |                |<br>| shop_price   | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| market_price | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| click_count  | int(10) unsigned       | NO   |     | 0       |                |<br>+————–+————————+——+—–+———+—————-+<br>9 rows in set (0.20 sec)</p><p>mysql> select goods_name ,cat_id,goods_id,shop_price from goods order by asc cat_id ,shop_price desc;<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘asc cat_id ,shop_price desc’ at line 1<br>mysql> select goods_name ,cat_id,goods_id,shop_price from goods order by  cat_id asc ,shop_price desc;<br>+—————————————-+——–+———-+————+<br>| goods_name                             | cat_id | goods_id | shop_price |<br>+—————————————-+——–+———-+————+<br>| 恒基伟业g101                           |      2 |       16 |     823.33 |<br>| 多普达touch hd                         |      3 |       22 |    5999.00 |<br>| 诺基亚n85                              |      3 |       32 |    3010.00 |<br>| 夏新n7                                 |      3 |       17 |    2300.00 |<br>| 诺基亚e66                              |      3 |        9 |    2298.00 |<br>| 金立 a30                               |      3 |       21 |    2000.00 |<br>| p806                                   |      3 |       24 |    2000.00 |<br>| 摩托罗拉e8                             |      3 |       31 |    1337.00 |<br>| 索爱c702c                              |      3 |       10 |    1328.00 |<br>| 诺基亚5320 xpressmusic                 |      3 |       13 |    1311.00 |<br>| 索爱c702c                              |      3 |       11 |    1300.00 |<br>| 摩托罗拉a810                           |      3 |       12 |     983.00 |<br>| 三星sgh-f258                           |      3 |       19 |     858.00 |<br>| 摩托罗拉a810                           |      3 |       15 |     788.00 |<br>| 飞利浦9@9v                             |      3 |        8 |     399.00 |<br>| 三星bc01                               |      3 |       20 |     280.00 |<br>| 夏新t5                                 |      4 |       18 |    2878.00 |<br>| 诺基亚5800xm                           |      4 |       14 |    2625.00 |<br>| kd876                                  |      4 |        1 |    1388.00 |<br>| 诺基亚n96                              |      5 |       23 |    3700.00 |<br>| 诺基亚n85原装立体声耳机hs-82           |      8 |        7 |     100.00 |<br>| 诺基亚原装5800耳机                     |      8 |        3 |      68.00 |<br>| 诺基亚n85原装充电器                    |      8 |        4 |      58.00 |<br>| 胜创kingmax内存卡                      |     11 |        6 |      42.00 |<br>| 索爱原装m2卡读卡器                     |     11 |        5 |      20.00 |<br>| 小灵通/固话50元充值卡                  |     13 |       25 |      48.00 |<br>| 小灵通/固话20元充值卡                  |     13 |       26 |      19.00 |<br>| 移动100元充值卡                        |     14 |       29 |      90.00 |<br>| 移动20元充值卡                         |     14 |       30 |      18.00 |<br>| 联通100元充值卡                        |     15 |       27 |      95.00 |<br>| 联通50元充值卡                         |     15 |       28 |      45.00 |<br>+—————————————-+——–+———-+————+<br>31 rows in set (0.26 sec)</p><p>mysql> #多排 用,隔开 order by cat_id asc ,shop_price desc<br>mysql> exit<br>mysql> use test01;<br>Database changed<br>mysql> #limit 限制条目<br>mysql> select goods_id,cat_id,goods_name,shop_price from goods where cat_id=3 order by shop_price desc limit 0,3;<br>+———-+——–+——————-+————+<br>| goods_id | cat_id | goods_name        | shop_price |<br>+———-+——–+——————-+————+<br>|       22 |      3 | 多普达touch hd    |    5999.00 |<br>|       32 |      3 | 诺基亚n85         |    3010.00 |<br>|       17 |      3 | 夏新n7            |    2300.00 |<br>+———-+——–+——————-+————+<br>3 rows in set (0.01 sec)</p><p>mysql> select goods_id,cat_id,goods_name,shop_price from goods where cat_id=3 order by shop_price desc limit 2,2;<br>+———-+——–+————–+————+<br>| goods_id | cat_id | goods_name   | shop_price |<br>+———-+——–+————–+————+<br>|       17 |      3 | 夏新n7       |    2300.00 |<br>|        9 |      3 | 诺基亚e66    |    2298.00 |<br>+———-+——–+————–+————+<br>2 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name,shop_price from goods where cat_id=3 order by shop_price desc limit 2,3;<br>+———-+——–+————–+————+<br>| goods_id | cat_id | goods_name   | shop_price |<br>+———-+——–+————–+————+<br>|       17 |      3 | 夏新n7       |    2300.00 |<br>|        9 |      3 | 诺基亚e66    |    2298.00 |<br>|       21 |      3 | 金立 a30     |    2000.00 |<br>+———-+——–+————–+————+<br>3 rows in set (0.00 sec)</p><p>mysql> #limit 第一个参数为0可以不写<br>mysql> #查询出每个栏目下id号最大的一条商品<br>mysql> select goods_id,cat_id,goods_name,shop_price from goods where 1 group by cat_id order by goods_id desc limit 1;<br>+———-+——–+———————–+————+<br>| goods_id | cat_id | goods_name            | shop_price |<br>+———-+——–+———————–+————+<br>|       29 |     14 | 移动100元充值卡       |      90.00 |<br>+———-+——–+———————–+————+<br>1 row in set (0.06 sec)</p><p>mysql> select goods_id,cat_id,goods_name,shop_price from goods where 1 group by cat_id ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|        1 |      4 | kd876                          |    1388.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name,shop_price from goods  group by cat_id ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|        1 |      4 | kd876                          |    1388.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select cat_id,goods_name,shop_price from goods  group by cat_id ;<br>+——–+——————————–+————+<br>| cat_id | goods_name                     | shop_price |<br>+——–+——————————–+————+<br>|      4 | kd876                          |    1388.00 |<br>|      8 | 诺基亚n85原装充电器            |      58.00 |<br>|     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|      3 | 飞利浦9@9v                     |     399.00 |<br>|      2 | 恒基伟业g101                   |     823.33 |<br>|      5 | 诺基亚n96                      |    3700.00 |<br>|     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|     15 | 联通100元充值卡                |      95.00 |<br>|     14 | 移动100元充值卡                |      90.00 |<br>+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods   group by cat_id=3  ;<br>+———-+——–+—————+————+<br>| goods_id | cat_id | goods_name    | shop_price |<br>+———-+——–+—————+————+<br>|        1 |      4 | kd876         |    1388.00 |<br>|        8 |      3 | 飞利浦9@9v    |     399.00 |<br>+———-+——–+—————+————+<br>2 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods group by cat_id ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|        1 |      4 | kd876                          |    1388.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc ;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods group by cat_id  order by cat_id asc ,goods_id desc ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|        1 |      4 | kd876                          |    1388.00 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc ;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select * from (select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc) as tem group by cat_id  ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|        1 |      4 | kd876                          |    1388.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.04 sec)</p><p>mysql> select * from (select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc) as tem group by cat_id  order by cat_id asc ,goods_id desc limit 1  ;<br>+———-+——–+——————+————+<br>| goods_id | cat_id | goods_name       | shop_price |<br>+———-+——–+——————+————+<br>|       16 |      2 | 恒基伟业g101     |     823.33 |<br>+———-+——–+——————+————+<br>1 row in set (0.00 sec)</p><p>mysql> select * from (select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc) as tem group by cat_id  order by cat_id asc ,goods_id desc ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|        1 |      4 | kd876                          |    1388.00 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc ;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select * from (select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc) as temp order by cat_id asc ;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select * from (select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc) as temp group by cat_id order by cat_id asc ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|        1 |      4 | kd876                          |    1388.00 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select * from (select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc) as temp group by cat_id  ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|        1 |      4 | kd876                          |    1388.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods where cat_id=3 order by goods_id desc limit 1 ;<br>+———-+——–+————–+————+<br>| goods_id | cat_id | goods_name   | shop_price |<br>+———-+——–+————–+————+<br>|       32 |      3 | 诺基亚n85    |    3010.00 |<br>+———-+——–+————–+————+<br>1 row in set (0.07 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods  order by goods_id desc limit 1 ;<br>+———-+——–+————–+————+<br>| goods_id | cat_id | goods_name   | shop_price |<br>+———-+——–+————–+————+<br>|       32 |      3 | 诺基亚n85    |    3010.00 |<br>+———-+——–+————–+————+<br>1 row in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods  order by goods_id desc limit 1 ;<br>+———-+——–+————–+————+<br>| goods_id | cat_id | goods_name   | shop_price |<br>+———-+——–+————–+————+<br>|       32 |      3 | 诺基亚n85    |    3010.00 |<br>+———-+——–+————–+————+<br>1 row in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods  order by goods_id desc  ;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods group by cat_id  order by goods_id desc  ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        1 |      4 | kd876                          |    1388.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods group by cat_id  ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|        1 |      4 | kd876                          |    1388.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods group by cat_id  order by goods_id desc  ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        1 |      4 | kd876                          |    1388.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods  order by goods_id desc limit 1 ;<br>+———-+——–+————–+————+<br>| goods_id | cat_id | goods_name   | shop_price |<br>+———-+——–+————–+————+<br>|       32 |      3 | 诺基亚n85    |    3010.00 |<br>+———-+——–+————–+————+<br>1 row in set (0.00 sec)</p><p>mysql> select max(goods_id), cat_id,goods_name,shop_price from goods  order by goods_id desc ;<br>+—————+——–+————+————+<br>| max(goods_id) | cat_id | goods_name | shop_price |<br>+—————+——–+————+————+<br>|            32 |      4 | kd876      |    1388.00 |<br>+—————+——–+————+————+<br>1 row in set (0.06 sec)</p><p>mysql> select goods_id ,cat_id ,goods_name from goods<br>    -> ;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|        1 |      4 | kd876                                  |<br>|        4 |      8 | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 诺基亚原装5800耳机                     |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        8 |      3 | 飞利浦9@9v                             |<br>|        9 |      3 | 诺基亚e66                              |<br>|       10 |      3 | 索爱c702c                              |<br>|       11 |      3 | 索爱c702c                              |<br>|       12 |      3 | 摩托罗拉a810                           |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |<br>|       14 |      4 | 诺基亚5800xm                           |<br>|       15 |      3 | 摩托罗拉a810                           |<br>|       16 |      2 | 恒基伟业g101                           |<br>|       17 |      3 | 夏新n7                                 |<br>|       18 |      4 | 夏新t5                                 |<br>|       19 |      3 | 三星sgh-f258                           |<br>|       20 |      3 | 三星bc01                               |<br>|       21 |      3 | 金立 a30                               |<br>|       22 |      3 | 多普达touch hd                         |<br>|       23 |      5 | 诺基亚n96                              |<br>|       24 |      3 | p806                                   |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       27 |     15 | 联通100元充值卡                        |<br>|       28 |     15 | 联通50元充值卡                         |<br>|       29 |     14 | 移动100元充值卡                        |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       31 |      3 | 摩托罗拉e8                             |<br>|       32 |      3 | 诺基亚n85                              |<br>+———-+——–+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select max(goods_id), cat_id,goods_name,shop_price from goods group by cat_id ;<br>+—————+——–+——————————–+————+<br>| max(goods_id) | cat_id | goods_name                     | shop_price |<br>+—————+——–+——————————–+————+<br>|            18 |      4 | kd876                          |    1388.00 |<br>|             7 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|             6 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|            32 |      3 | 飞利浦9@9v                     |     399.00 |<br>|            16 |      2 | 恒基伟业g101                   |     823.33 |<br>|            23 |      5 | 诺基亚n96                      |    3700.00 |<br>|            26 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|            28 |     15 | 联通100元充值卡                |      95.00 |<br>|            30 |     14 | 移动100元充值卡                |      90.00 |<br>+—————+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select max(goods_id), cat_id from goods group by cat_id ;<br>+—————+——–+<br>| max(goods_id) | cat_id |<br>+—————+——–+<br>|            18 |      4 |<br>|             7 |      8 |<br>|             6 |     11 |<br>|            32 |      3 |<br>|            16 |      2 |<br>|            23 |      5 |<br>|            26 |     13 |<br>|            28 |     15 |<br>|            30 |     14 |<br>+—————+——–+<br>9 rows in set (0.00 sec)</p><p>mysql> select * from (select max(goods_id) as goods_id, cat_id from goods group by cat_id ) as temp where cat_id=cat_id ;<br>+———-+——–+<br>| goods_id | cat_id |<br>+———-+——–+<br>|       18 |      4 |<br>|        7 |      8 |<br>|        6 |     11 |<br>|       32 |      3 |<br>|       16 |      2 |<br>|       23 |      5 |<br>|       26 |     13 |<br>|       28 |     15 |<br>|       30 |     14 |<br>+———-+——–+<br>9 rows in set (0.06 sec)</p><p>mysql> select cat_id ,count(goods_name) from goods group by cat_id;<br>+——–+——————-+<br>| cat_id | count(goods_name) |<br>+——–+——————-+<br>|      4 |                 3 |<br>|      8 |                 3 |<br>|     11 |                 2 |<br>|      3 |                15 |<br>|      2 |                 1 |<br>|      5 |                 1 |<br>|     13 |                 2 |<br>|     15 |                 2 |<br>|     14 |                 2 |<br>+——–+——————-+<br>9 rows in set (0.00 sec)</p><p>mysql> select cat_id ,max(goods_id) from goods group by cat_id;<br>+——–+—————+<br>| cat_id | max(goods_id) |<br>+——–+—————+<br>|      4 |            18 |<br>|      8 |             7 |<br>|     11 |             6 |<br>|      3 |            32 |<br>|      2 |            16 |<br>|      5 |            23 |<br>|     13 |            26 |<br>|     15 |            28 |<br>|     14 |            30 |<br>+——–+—————+<br>9 rows in set (0.00 sec)</p><p>mysql> select cat_id ,max(goods_id),max(goods_name) from goods group by cat_id;<br>+——–+—————+——————————–+<br>| cat_id | max(goods_id) | max(goods_name)                |<br>+——–+—————+——————————–+<br>|      4 |            18 | 诺基亚5800xm                   |<br>|      8 |             7 | 诺基亚原装5800耳机             |<br>|     11 |             6 | 胜创kingmax内存卡              |<br>|      3 |            32 | 飞利浦9@9v                     |<br>|      2 |            16 | 恒基伟业g101                   |<br>|      5 |            23 | 诺基亚n96                      |<br>|     13 |            26 | 小灵通/固话50元充值卡          |<br>|     15 |            28 | 联通50元充值卡                 |<br>|     14 |            30 | 移动20元充值卡                 |<br>+——–+—————+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select cat_id ,max(goods_id) from goods ;<br>+——–+—————+<br>| cat_id | max(goods_id) |<br>+——–+—————+<br>|      4 |            32 |<br>+——–+—————+<br>1 row in set (0.00 sec)</p><p>mysql> select cat_id, goods_id,goods_name from goods order by goods_id desc ;<br>+——–+———-+—————————————-+<br>| cat_id | goods_id | goods_name                             |<br>+——–+———-+—————————————-+<br>|      3 |       32 | 诺基亚n85                              |<br>|      3 |       31 | 摩托罗拉e8                             |<br>|     14 |       30 | 移动20元充值卡                         |<br>|     14 |       29 | 移动100元充值卡                        |<br>|     15 |       28 | 联通50元充值卡                         |<br>|     15 |       27 | 联通100元充值卡                        |<br>|     13 |       26 | 小灵通/固话20元充值卡                  |<br>|     13 |       25 | 小灵通/固话50元充值卡                  |<br>|      3 |       24 | p806                                   |<br>|      5 |       23 | 诺基亚n96                              |<br>|      3 |       22 | 多普达touch hd                         |<br>|      3 |       21 | 金立 a30                               |<br>|      3 |       20 | 三星bc01                               |<br>|      3 |       19 | 三星sgh-f258                           |<br>|      4 |       18 | 夏新t5                                 |<br>|      3 |       17 | 夏新n7                                 |<br>|      2 |       16 | 恒基伟业g101                           |<br>|      3 |       15 | 摩托罗拉a810                           |<br>|      4 |       14 | 诺基亚5800xm                           |<br>|      3 |       13 | 诺基亚5320 xpressmusic                 |<br>|      3 |       12 | 摩托罗拉a810                           |<br>|      3 |       11 | 索爱c702c                              |<br>|      3 |       10 | 索爱c702c                              |<br>|      3 |        9 | 诺基亚e66                              |<br>|      3 |        8 | 飞利浦9@9v                             |<br>|      8 |        7 | 诺基亚n85原装立体声耳机hs-82           |<br>|     11 |        6 | 胜创kingmax内存卡                      |<br>|     11 |        5 | 索爱原装m2卡读卡器                     |<br>|      8 |        4 | 诺基亚n85原装充电器                    |<br>|      8 |        3 | 诺基亚原装5800耳机                     |<br>|      4 |        1 | kd876                                  |<br>+——–+———-+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select cat_id ,max(goods_id) from goods ;<br>+——–+—————+<br>| cat_id | max(goods_id) |<br>+——–+—————+<br>|      4 |            32 |<br>+——–+—————+<br>1 row in set (0.00 sec)</p><p>mysql> select cat_id, goods_id,goods_name from goods order by goods_id desc ;<br>+——–+———-+—————————————-+<br>| cat_id | goods_id | goods_name                             |<br>+——–+———-+—————————————-+<br>|      3 |       32 | 诺基亚n85                              |<br>|      3 |       31 | 摩托罗拉e8                             |<br>|     14 |       30 | 移动20元充值卡                         |<br>|     14 |       29 | 移动100元充值卡                        |<br>|     15 |       28 | 联通50元充值卡                         |<br>|     15 |       27 | 联通100元充值卡                        |<br>|     13 |       26 | 小灵通/固话20元充值卡                  |<br>|     13 |       25 | 小灵通/固话50元充值卡                  |<br>|      3 |       24 | p806                                   |<br>|      5 |       23 | 诺基亚n96                              |<br>|      3 |       22 | 多普达touch hd                         |<br>|      3 |       21 | 金立 a30                               |<br>|      3 |       20 | 三星bc01                               |<br>|      3 |       19 | 三星sgh-f258                           |<br>|      4 |       18 | 夏新t5                                 |<br>|      3 |       17 | 夏新n7                                 |<br>|      2 |       16 | 恒基伟业g101                           |<br>|      3 |       15 | 摩托罗拉a810                           |<br>|      4 |       14 | 诺基亚5800xm                           |<br>|      3 |       13 | 诺基亚5320 xpressmusic                 |<br>|      3 |       12 | 摩托罗拉a810                           |<br>|      3 |       11 | 索爱c702c                              |<br>|      3 |       10 | 索爱c702c                              |<br>|      3 |        9 | 诺基亚e66                              |<br>|      3 |        8 | 飞利浦9@9v                             |<br>|      8 |        7 | 诺基亚n85原装立体声耳机hs-82           |<br>|     11 |        6 | 胜创kingmax内存卡                      |<br>|     11 |        5 | 索爱原装m2卡读卡器                     |<br>|      8 |        4 | 诺基亚n85原装充电器                    |<br>|      8 |        3 | 诺基亚原装5800耳机                     |<br>|      4 |        1 | kd876                                  |<br>+——–+———-+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select cat_id ,max(goods_id) from goods ;<br>+——–+—————+<br>| cat_id | max(goods_id) |<br>+——–+—————+<br>|      4 |            32 |<br>+——–+—————+<br>1 row in set (0.00 sec)</p><p>mysql> select cat_id ,max(goods_id) from goods group by cat_id;<br>+——–+—————+<br>| cat_id | max(goods_id) |<br>+——–+—————+<br>|      4 |            18 |<br>|      8 |             7 |<br>|     11 |             6 |<br>|      3 |            32 |<br>|      2 |            16 |<br>|      5 |            23 |<br>|     13 |            26 |<br>|     15 |            28 |<br>|     14 |            30 |<br>+——–+—————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id ,goods_name,cat_id from goods where goods_id in(select max(goods_id) from goods group by cat_id) ;<br>+———-+—————————————-+——–+<br>| goods_id | goods_name                             | cat_id |<br>+———-+—————————————-+——–+<br>|        6 | 胜创kingmax内存卡                      |     11 |<br>|        7 | 诺基亚n85原装立体声耳机hs-82           |      8 |<br>|       16 | 恒基伟业g101                           |      2 |<br>|       18 | 夏新t5                                 |      4 |<br>|       23 | 诺基亚n96                              |      5 |<br>|       26 | 小灵通/固话20元充值卡                  |     13 |<br>|       28 | 联通50元充值卡                         |     15 |<br>|       30 | 移动20元充值卡                         |     14 |<br>|       32 | 诺基亚n85                              |      3 |<br>+———-+—————————————-+——–+<br>9 rows in set (0.06 sec)</p><p>mysql> select * from(select goods_id,cat_id ,goods_name from goods order by goods_id desc ) as temp  group by cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select * from(select goods_id,cat_id ,goods_name from goods order by goods_id desc)  as temp  group by temp.cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id ,goods_name from goods order by goods_id desc;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       32 |      3 | 诺基亚n85                              |<br>|       31 |      3 | 摩托罗拉e8                             |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       29 |     14 | 移动100元充值卡                        |<br>|       28 |     15 | 联通50元充值卡                         |<br>|       27 |     15 | 联通100元充值卡                        |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |<br>|       24 |      3 | p806                                   |<br>|       23 |      5 | 诺基亚n96                              |<br>|       22 |      3 | 多普达touch hd                         |<br>|       21 |      3 | 金立 a30                               |<br>|       20 |      3 | 三星bc01                               |<br>|       19 |      3 | 三星sgh-f258                           |<br>|       18 |      4 | 夏新t5                                 |<br>|       17 |      3 | 夏新n7                                 |<br>|       16 |      2 | 恒基伟业g101                           |<br>|       15 |      3 | 摩托罗拉a810                           |<br>|       14 |      4 | 诺基亚5800xm                           |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |<br>|       12 |      3 | 摩托罗拉a810                           |<br>|       11 |      3 | 索爱c702c                              |<br>|       10 |      3 | 索爱c702c                              |<br>|        9 |      3 | 诺基亚e66                              |<br>|        8 |      3 | 飞利浦9@9v                             |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |<br>|        4 |      8 | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 诺基亚原装5800耳机                     |<br>|        1 |      4 | kd876                                  |<br>+———-+——–+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select cat_id,goods_name from (select goods_id,cat_id ,goods_name from goods order by goods_id desc) as temp group by cat_id;<br>+——–+——————————–+<br>| cat_id | goods_name                     |<br>+——–+——————————–+<br>|      4 | kd876                          |<br>|      8 | 诺基亚n85原装充电器            |<br>|     11 | 索爱原装m2卡读卡器             |<br>|      3 | 飞利浦9@9v                     |<br>|      2 | 恒基伟业g101                   |<br>|      5 | 诺基亚n96                      |<br>|     13 | 小灵通/固话50元充值卡          |<br>|     15 | 联通100元充值卡                |<br>|     14 | 移动100元充值卡                |<br>+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select temp.cat_id,goods_name from (select goods_id,cat_id ,goods_name from goods order by goods_id desc) as temp group by temp.cat_id;<br>+——–+——————————–+<br>| cat_id | goods_name                     |<br>+——–+——————————–+<br>|      4 | kd876                          |<br>|      8 | 诺基亚n85原装充电器            |<br>|     11 | 索爱原装m2卡读卡器             |<br>|      3 | 飞利浦9@9v                     |<br>|      2 | 恒基伟业g101                   |<br>|      5 | 诺基亚n96                      |<br>|     13 | 小灵通/固话50元充值卡          |<br>|     15 | 联通100元充值卡                |<br>|     14 | 移动100元充值卡                |<br>+——–+——————————–+<br>9 rows in set (0.05 sec)</p><p>mysql> #子查询<br>mysql> #查询商品id最大的商品不用排序<br>mysql> select goods_id ,cat_id ,goods_name from goods where goods_id=(select max(goods_id) from goods);<br>+———-+——–+————–+<br>| goods_id | cat_id | goods_name   |<br>+———-+——–+————–+<br>|       32 |      3 | 诺基亚n85    |<br>+———-+——–+————–+<br>1 row in set (0.05 sec)</p><p>mysql> #如果where型子查询 即where 列=(内层sql 返回的是必是单行单列单个值,) 若where 列 in(内层sql)只能是单列多行<br>mysql> #from型子查询,内部查询的结果当作外部查询的表s<br>mysql> select goods_id ,cat_id ,goods_name from (select goods_id ,cat_id ,goods_name from goods order by cat_id asc,goods_id desc) as temp group by cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id ,cat_id ,goods_name from goods order by cat_id asc,goods_id desc;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       16 |      2 | 恒基伟业g101                           |<br>|       32 |      3 | 诺基亚n85                              |<br>|       31 |      3 | 摩托罗拉e8                             |<br>|       24 |      3 | p806                                   |<br>|       22 |      3 | 多普达touch hd                         |<br>|       21 |      3 | 金立 a30                               |<br>|       20 |      3 | 三星bc01                               |<br>|       19 |      3 | 三星sgh-f258                           |<br>|       17 |      3 | 夏新n7                                 |<br>|       15 |      3 | 摩托罗拉a810                           |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |<br>|       12 |      3 | 摩托罗拉a810                           |<br>|       11 |      3 | 索爱c702c                              |<br>|       10 |      3 | 索爱c702c                              |<br>|        9 |      3 | 诺基亚e66                              |<br>|        8 |      3 | 飞利浦9@9v                             |<br>|       18 |      4 | 夏新t5                                 |<br>|       14 |      4 | 诺基亚5800xm                           |<br>|        1 |      4 | kd876                                  |<br>|       23 |      5 | 诺基亚n96                              |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        4 |      8 | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 诺基亚原装5800耳机                     |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       29 |     14 | 移动100元充值卡                        |<br>|       28 |     15 | 联通50元充值卡                         |<br>|       27 |     15 | 联通100元充值卡                        |<br>+———-+——–+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select * from (select goods_id ,cat_id ,goods_name from goods order by cat_id asc,goods_id desc) as temp group by cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select * from (select goods_id ,cat_id ,goods_name from goods order by cat_id asc,goods_id desc) as temp group by temp.cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name from (select goods_id as goods_id ,cat_id as cat_id ,goods_name as goods_name from goods order by cat_id asc,goods_id desc) as temp group by temp.cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id, goods_name from (select goods_id, goods_name, cat_id from goods order by cat_id asc, goods_id desc) as tmp group by cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> exit<br>mysql> show databases;<br>+——————–+<br>| Database           |<br>+——————–+<br>| bookstore          |<br>| clouddb01          |<br>| clouddb02          |<br>| clouddb03          |<br>| information_schema |<br>| mydb               |<br>| mysql              |<br>| performance_schema |<br>| shop               |<br>| ssm_crud           |<br>| struts             |<br>| student            |<br>| sys                |<br>| test               |<br>| test01             |<br>+——————–+<br>15 rows in set (0.35 sec)</p><p>mysql> use test01;<br>Database changed<br>mysql> select goods_id,cat_id,goods_name from goods order by goods_id desc ,cat_id asc;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       32 |      3 | 诺基亚n85                              |<br>|       31 |      3 | 摩托罗拉e8                             |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       29 |     14 | 移动100元充值卡                        |<br>|       28 |     15 | 联通50元充值卡                         |<br>|       27 |     15 | 联通100元充值卡                        |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |<br>|       24 |      3 | p806                                   |<br>|       23 |      5 | 诺基亚n96                              |<br>|       22 |      3 | 多普达touch hd                         |<br>|       21 |      3 | 金立 a30                               |<br>|       20 |      3 | 三星bc01                               |<br>|       19 |      3 | 三星sgh-f258                           |<br>|       18 |      4 | 夏新t5                                 |<br>|       17 |      3 | 夏新n7                                 |<br>|       16 |      2 | 恒基伟业g101                           |<br>|       15 |      3 | 摩托罗拉a810                           |<br>|       14 |      4 | 诺基亚5800xm                           |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |<br>|       12 |      3 | 摩托罗拉a810                           |<br>|       11 |      3 | 索爱c702c                              |<br>|       10 |      3 | 索爱c702c                              |<br>|        9 |      3 | 诺基亚e66                              |<br>|        8 |      3 | 飞利浦9@9v                             |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |<br>|        4 |      8 | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 诺基亚原装5800耳机                     |<br>|        1 |      4 | kd876                                  |<br>+———-+——–+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name from  goods order by cat_id  desc ;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       27 |     15 | 联通100元充值卡                        |<br>|       28 |     15 | 联通50元充值卡                         |<br>|       29 |     14 | 移动100元充值卡                        |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|        4 |      8 | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 诺基亚原装5800耳机                     |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|       23 |      5 | 诺基亚n96                              |<br>|        1 |      4 | kd876                                  |<br>|       14 |      4 | 诺基亚5800xm                           |<br>|       18 |      4 | 夏新t5                                 |<br>|        8 |      3 | 飞利浦9@9v                             |<br>|        9 |      3 | 诺基亚e66                              |<br>|       10 |      3 | 索爱c702c                              |<br>|       11 |      3 | 索爱c702c                              |<br>|       12 |      3 | 摩托罗拉a810                           |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |<br>|       15 |      3 | 摩托罗拉a810                           |<br>|       17 |      3 | 夏新n7                                 |<br>|       19 |      3 | 三星sgh-f258                           |<br>|       20 |      3 | 三星bc01                               |<br>|       21 |      3 | 金立 a30                               |<br>|       22 |      3 | 多普达touch hd                         |<br>|       24 |      3 | p806                                   |<br>|       31 |      3 | 摩托罗拉e8                             |<br>|       32 |      3 | 诺基亚n85                              |<br>|       16 |      2 | 恒基伟业g101                           |<br>+———-+——–+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name from(select goods_id,cat_id,goods_name from goods order by cat_id,goods_id desc) as tmp;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       16 |      2 | 恒基伟业g101                           |<br>|       32 |      3 | 诺基亚n85                              |<br>|       31 |      3 | 摩托罗拉e8                             |<br>|       24 |      3 | p806                                   |<br>|       22 |      3 | 多普达touch hd                         |<br>|       21 |      3 | 金立 a30                               |<br>|       20 |      3 | 三星bc01                               |<br>|       19 |      3 | 三星sgh-f258                           |<br>|       17 |      3 | 夏新n7                                 |<br>|       15 |      3 | 摩托罗拉a810                           |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |<br>|       12 |      3 | 摩托罗拉a810                           |<br>|       11 |      3 | 索爱c702c                              |<br>|       10 |      3 | 索爱c702c                              |<br>|        9 |      3 | 诺基亚e66                              |<br>|        8 |      3 | 飞利浦9@9v                             |<br>|       18 |      4 | 夏新t5                                 |<br>|       14 |      4 | 诺基亚5800xm                           |<br>|        1 |      4 | kd876                                  |<br>|       23 |      5 | 诺基亚n96                              |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        4 |      8 | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 诺基亚原装5800耳机                     |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       29 |     14 | 移动100元充值卡                        |<br>|       28 |     15 | 联通50元充值卡                         |<br>|       27 |     15 | 联通100元充值卡                        |<br>+———-+——–+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name from(select goods_id,cat_id,goods_name from goods order by cat_id,goods_id desc) as tmp group by cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> desc goods;<br>+————–+————————+——+—–+———+—————-+<br>| Field        | Type                   | Null | Key | Default | Extra          |<br>+————–+————————+——+—–+———+—————-+<br>| goods_id     | mediumint(8) unsigned  | NO   | PRI | NULL    | auto_increment |<br>| goods_name   | varchar(120)           | NO   |     |         |                |<br>| cat_id       | smallint(5) unsigned   | NO   |     | 0       |                |<br>| brand_id     | smallint(5) unsigned   | NO   |     | 0       |                |<br>| goods_sn     | char(15)               | NO   |     |         |                |<br>| goods_number | smallint(5) unsigned   | NO   |     | 0       |                |<br>| shop_price   | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| market_price | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| click_count  | int(10) unsigned       | NO   |     | 0       |                |<br>+————–+————————+——+—–+———+—————-+<br>9 rows in set (0.18 sec)</p><p>mysql> alter table goods add index cat(cat_id);<br>Query OK, 31 rows affected (1.05 sec)<br>Records: 31  Duplicates: 0  Warnings: 0</p><p>mysql> select goods_id,cat_id,goods_name from(select goods_id,cat_id,goods_name from goods order by cat_id,goods_id desc) as tmp group by cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|       16 |      2 | 恒基伟业g101                   |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|        1 |      4 | kd876                          |<br>|       23 |      5 | 诺基亚n96                      |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       29 |     14 | 移动100元充值卡                |<br>|       27 |     15 | 联通100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name from(select goods_id,cat_id,goods_name from goods order by cat_id,goods_id desc limit 1000) as tmp group by cat_id;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       16 |      2 | 恒基伟业g101                           |<br>|       32 |      3 | 诺基亚n85                              |<br>|       18 |      4 | 夏新t5                                 |<br>|       23 |      5 | 诺基亚n96                              |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       28 |     15 | 联通50元充值卡                         |<br>+———-+——–+—————————————-+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name from goods where goods_id in(select max(goods_id) from goods group by cat_id) group by cat_id;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       16 |      2 | 恒基伟业g101                           |<br>|       32 |      3 | 诺基亚n85                              |<br>|       18 |      4 | 夏新t5                                 |<br>|       23 |      5 | 诺基亚n96                              |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       28 |     15 | 联通50元充值卡                         |<br>+———-+——–+—————————————-+<br>9 rows in set (0.04 sec)</p><p>mysql> #exits子查询<br>mysql> #from子查询的排序要加limit<br>mysql> #exists 存在,exists 子查询<br>mysql> #查出有商品的栏目<br>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| girl             |<br>| goods            |<br>| m                |<br>| mian             |<br>| result           |<br>| t                |<br>| user             |<br>+——————+<br>11 rows in set (0.06 sec)</p><p>mysql> desc category;<br>+———–+———————-+——+—–+———+—————-+<br>| Field     | Type                 | Null | Key | Default | Extra          |<br>+———–+———————-+——+—–+———+—————-+<br>| cat_id    | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |<br>| cat_name  | varchar(90)          | NO   |     |         |                |<br>| parent_id | smallint(5) unsigned | YES  |     | NULL    |                |<br>+———–+———————-+——+—–+———+—————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select * from  category;<br>+——–+—————————+———–+<br>| cat_id | cat_name                  | parent_id |<br>+——–+—————————+———–+<br>|      1 | 手机类型                  |         0 |<br>|      2 | CDMA手机                  |         1 |<br>|      3 | GSM手机                   |         1 |<br>|      4 | 3G手机                    |         1 |<br>|      5 | 双模手机                  |         1 |<br>|      6 | 手机配件                  |         0 |<br>|      7 | 充电器                    |         6 |<br>|      8 | 耳机                      |         6 |<br>|      9 | 电池                      |         6 |<br>|     11 | 读卡器和内存卡            |         6 |<br>|     12 | 充值卡                    |         0 |<br>|     13 | 小灵通/固话充值卡         |        12 |<br>|     14 | 移动手机充值卡            |        12 |<br>|     15 | 联通手机充值卡            |        12 |<br>+——–+—————————+———–+<br>14 rows in set (0.07 sec)</p><p>mysql> desc goods;<br>+————–+————————+——+—–+———+—————-+<br>| Field        | Type                   | Null | Key | Default | Extra          |<br>+————–+————————+——+—–+———+—————-+<br>| goods_id     | mediumint(8) unsigned  | NO   | PRI | NULL    | auto_increment |<br>| goods_name   | varchar(120)           | NO   |     |         |                |<br>| cat_id       | smallint(5) unsigned   | NO   | MUL | 0       |                |<br>| brand_id     | smallint(5) unsigned   | NO   |     | 0       |                |<br>| goods_sn     | char(15)               | NO   |     |         |                |<br>| goods_number | smallint(5) unsigned   | NO   |     | 0       |                |<br>| shop_price   | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| market_price | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| click_count  | int(10) unsigned       | NO   |     | 0       |                |<br>+————–+————————+——+—–+———+—————-+<br>9 rows in set (0.00 sec)</p><p>mysql> show index from goods;<br>+——-+————+———-+————–+————-+———–+————-+———-+——–+——+————+———+—————+———+<br>| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible |<br>+——-+————+———-+————–+————-+———–+————-+———-+——–+——+————+———+—————+———+<br>| goods |          0 | PRIMARY  |            1 | goods_id    | A         |          31 |     NULL |   NULL |      | BTREE      |         |               | YES     |<br>| goods |          1 | cat      |            1 | cat_id      | A         |        NULL |     NULL |   NULL |      | BTREE      |         |               | YES     |<br>+——-+————+———-+————–+————-+———–+————-+———-+——–+——+————+———+—————+———+<br>2 rows in set (0.17 sec)</p><p>mysql> drop index cat on goods;<br>Query OK, 31 rows affected (0.55 sec)<br>Records: 31  Duplicates: 0  Warnings: 0</p><p>mysql> show index from goods;<br>+——-+————+———-+————–+————-+———–+————-+———-+——–+——+————+———+—————+———+<br>| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible |<br>+——-+————+———-+————–+————-+———–+————-+———-+——–+——+————+———+—————+———+<br>| goods |          0 | PRIMARY  |            1 | goods_id    | A         |          31 |     NULL |   NULL |      | BTREE      |         |               | YES     |<br>+——-+————+———-+————–+————-+———–+————-+———-+——–+——+————+———+—————+———+<br>1 row in set (0.00 sec)</p><p>mysql> desc goods;<br>+————–+————————+——+—–+———+—————-+<br>| Field        | Type                   | Null | Key | Default | Extra          |<br>+————–+————————+——+—–+———+—————-+<br>| goods_id     | mediumint(8) unsigned  | NO   | PRI | NULL    | auto_increment |<br>| goods_name   | varchar(120)           | NO   |     |         |                |<br>| cat_id       | smallint(5) unsigned   | NO   |     | 0       |                |<br>| brand_id     | smallint(5) unsigned   | NO   |     | 0       |                |<br>| goods_sn     | char(15)               | NO   |     |         |                |<br>| goods_number | smallint(5) unsigned   | NO   |     | 0       |                |<br>| shop_price   | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| market_price | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| click_count  | int(10) unsigned       | NO   |     | 0       |                |<br>+————–+————————+——+—–+———+—————-+<br>9 rows in set (0.00 sec)</p><p>mysql> desc category;<br>+———–+———————-+——+—–+———+—————-+<br>| Field     | Type                 | Null | Key | Default | Extra          |<br>+———–+———————-+——+—–+———+—————-+<br>| cat_id    | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |<br>| cat_name  | varchar(90)          | NO   |     |         |                |<br>| parent_id | smallint(5) unsigned | YES  |     | NULL    |                |<br>+———–+———————-+——+—–+———+—————-+<br>3 rows in set (0.03 sec)</p><p>mysql> select cat_name from category;<br>+—————————+<br>| cat_name                  |<br>+—————————+<br>| 手机类型                  |<br>| CDMA手机                  |<br>| GSM手机                   |<br>| 3G手机                    |<br>| 双模手机                  |<br>| 手机配件                  |<br>| 充电器                    |<br>| 耳机                      |<br>| 电池                      |<br>| 读卡器和内存卡            |<br>| 充值卡                    |<br>| 小灵通/固话充值卡         |<br>| 移动手机充值卡            |<br>| 联通手机充值卡            |<br>+—————————+<br>14 rows in set (0.00 sec)</p><p>mysql> select cat_id,cat_name from category where exists(select * from goods where category.cat_id=goods_id);<br>+——–+—————————+<br>| cat_id | cat_name                  |<br>+——–+—————————+<br>|      1 | 手机类型                  |<br>|      3 | GSM手机                   |<br>|      4 | 3G手机                    |<br>|      5 | 双模手机                  |<br>|      6 | 手机配件                  |<br>|      7 | 充电器                    |<br>|      8 | 耳机                      |<br>|      9 | 电池                      |<br>|     11 | 读卡器和内存卡            |<br>|     12 | 充值卡                    |<br>|     13 | 小灵通/固话充值卡         |<br>|     14 | 移动手机充值卡            |<br>|     15 | 联通手机充值卡            |<br>+——–+—————————+<br>13 rows in set (0.00 sec)</p><p>mysql> select cat_id,cat_name from category where exists(select * from goods where category.cat_id=goods.cat_id);<br>+——–+—————————+<br>| cat_id | cat_name                  |<br>+——–+—————————+<br>|      2 | CDMA手机                  |<br>|      3 | GSM手机                   |<br>|      4 | 3G手机                    |<br>|      5 | 双模手机                  |<br>|      8 | 耳机                      |<br>|     11 | 读卡器和内存卡            |<br>|     13 | 小灵通/固话充值卡         |<br>|     14 | 移动手机充值卡            |<br>|     15 | 联通手机充值卡            |<br>+——–+—————————+<br>9 rows in set (0.00 sec)</p><p>mysql> #为什么建表时加not null或default 0  ,不想出现null值<br>mysql> #null判断只能用 is null 或is not nul<br>mysql><br>mysql> #效率不高,影响索引效率<br>mysql> select 100000<em>232344242<br>    -> ;<br>+——————+<br>| 100000</em>232344242 |<br>+——————+<br>|   23234424200000 |<br>+——————+<br>1 row in set (0.00 sec)</p><p>mysql> #左连接的语法<br>mysql> a表不动,b表在右边滑动<br>    -> #<br>    -> \n<br>ERROR:<br>Unknown command ‘\n’.<br>    -> ;<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘a表不动,b表在右边滑动</p><p>\n’ at line 1<br>mysql> #a表与b表通过什么关联行<br>mysql> # a 表left join b on 条件 条件为真,则b表对应的行取出<br>mysql> # a left join b on<br>mysql> #将a left join b on 条件 设为c 表<br>mysql> #可以对c表进行查询,可以查询a和b的列<br>mysql> select  goods_id,cat_id,cat_name from goods left join category on goods.cat_id=category.cat_id;<br>ERROR 1052 (23000): Column ‘cat_id’ in field list is ambiguous<br>mysql> select  goods_id,goods.cat_id,cat_name from goods left join category on goods.cat_id=category.cat_id;<br>+———-+——–+—————————+<br>| goods_id | cat_id | cat_name                  |<br>+———-+——–+—————————+<br>|        1 |      4 | 3G手机                    |<br>|        4 |      8 | 耳机                      |<br>|        3 |      8 | 耳机                      |<br>|        5 |     11 | 读卡器和内存卡            |<br>|        6 |     11 | 读卡器和内存卡            |<br>|        7 |      8 | 耳机                      |<br>|        8 |      3 | GSM手机                   |<br>|        9 |      3 | GSM手机                   |<br>|       10 |      3 | GSM手机                   |<br>|       11 |      3 | GSM手机                   |<br>|       12 |      3 | GSM手机                   |<br>|       13 |      3 | GSM手机                   |<br>|       14 |      4 | 3G手机                    |<br>|       15 |      3 | GSM手机                   |<br>|       16 |      2 | CDMA手机                  |<br>|       17 |      3 | GSM手机                   |<br>|       18 |      4 | 3G手机                    |<br>|       19 |      3 | GSM手机                   |<br>|       20 |      3 | GSM手机                   |<br>|       21 |      3 | GSM手机                   |<br>|       22 |      3 | GSM手机                   |<br>|       23 |      5 | 双模手机                  |<br>|       24 |      3 | GSM手机                   |<br>|       25 |     13 | 小灵通/固话充值卡         |<br>|       26 |     13 | 小灵通/固话充值卡         |<br>|       27 |     15 | 联通手机充值卡            |<br>|       28 |     15 | 联通手机充值卡            |<br>|       29 |     14 | 移动手机充值卡            |<br>|       30 |     14 | 移动手机充值卡            |<br>|       31 |      3 | GSM手机                   |<br>|       32 |      3 | GSM手机                   |<br>+———-+——–+—————————+<br>31 rows in set (0.00 sec)</p><p>mysql> select  goods_id,goods.cat_id,cat_name,goods_name from goods left join category on goods.cat_id=category.cat_id;<br>+———-+——–+—————————+—————————————-+<br>| goods_id | cat_id | cat_name                  | goods_name                             |<br>+———-+——–+—————————+—————————————-+<br>|        1 |      4 | 3G手机                    | kd876                                  |<br>|        4 |      8 | 耳机                      | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 耳机                      | 诺基亚原装5800耳机                     |<br>|        5 |     11 | 读卡器和内存卡            | 索爱原装m2卡读卡器                     |<br>|        6 |     11 | 读卡器和内存卡            | 胜创kingmax内存卡                      |<br>|        7 |      8 | 耳机                      | 诺基亚n85原装立体声耳机hs-82           |<br>|        8 |      3 | GSM手机                   | 飞利浦9@9v                             |<br>|        9 |      3 | GSM手机                   | 诺基亚e66                              |<br>|       10 |      3 | GSM手机                   | 索爱c702c                              |<br>|       11 |      3 | GSM手机                   | 索爱c702c                              |<br>|       12 |      3 | GSM手机                   | 摩托罗拉a810                           |<br>|       13 |      3 | GSM手机                   | 诺基亚5320 xpressmusic                 |<br>|       14 |      4 | 3G手机                    | 诺基亚5800xm                           |<br>|       15 |      3 | GSM手机                   | 摩托罗拉a810                           |<br>|       16 |      2 | CDMA手机                  | 恒基伟业g101                           |<br>|       17 |      3 | GSM手机                   | 夏新n7                                 |<br>|       18 |      4 | 3G手机                    | 夏新t5                                 |<br>|       19 |      3 | GSM手机                   | 三星sgh-f258                           |<br>|       20 |      3 | GSM手机                   | 三星bc01                               |<br>|       21 |      3 | GSM手机                   | 金立 a30                               |<br>|       22 |      3 | GSM手机                   | 多普达touch hd                         |<br>|       23 |      5 | 双模手机                  | 诺基亚n96                              |<br>|       24 |      3 | GSM手机                   | p806                                   |<br>|       25 |     13 | 小灵通/固话充值卡         | 小灵通/固话50元充值卡                  |<br>|       26 |     13 | 小灵通/固话充值卡         | 小灵通/固话20元充值卡                  |<br>|       27 |     15 | 联通手机充值卡            | 联通100元充值卡                        |<br>|       28 |     15 | 联通手机充值卡            | 联通50元充值卡                         |<br>|       29 |     14 | 移动手机充值卡            | 移动100元充值卡                        |<br>|       30 |     14 | 移动手机充值卡            | 移动20元充值卡                         |<br>|       31 |      3 | GSM手机                   | 摩托罗拉e8                             |<br>|       32 |      3 | GSM手机                   | 诺基亚n85                              |<br>+———-+——–+—————————+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select  goods_id,goods.cat_id,goods_name,cat_name from goods left join category on goods.cat_id=category.cat_id;<br>+———-+——–+—————————————-+—————————+<br>| goods_id | cat_id | goods_name                             | cat_name                  |<br>+———-+——–+—————————————-+—————————+<br>|        1 |      4 | kd876                                  | 3G手机                    |<br>|        4 |      8 | 诺基亚n85原装充电器                    | 耳机                      |<br>|        3 |      8 | 诺基亚原装5800耳机                     | 耳机                      |<br>|        5 |     11 | 索爱原装m2卡读卡器                     | 读卡器和内存卡            |<br>|        6 |     11 | 胜创kingmax内存卡                      | 读卡器和内存卡            |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           | 耳机                      |<br>|        8 |      3 | 飞利浦9@9v                             | GSM手机                   |<br>|        9 |      3 | 诺基亚e66                              | GSM手机                   |<br>|       10 |      3 | 索爱c702c                              | GSM手机                   |<br>|       11 |      3 | 索爱c702c                              | GSM手机                   |<br>|       12 |      3 | 摩托罗拉a810                           | GSM手机                   |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 | GSM手机                   |<br>|       14 |      4 | 诺基亚5800xm                           | 3G手机                    |<br>|       15 |      3 | 摩托罗拉a810                           | GSM手机                   |<br>|       16 |      2 | 恒基伟业g101                           | CDMA手机                  |<br>|       17 |      3 | 夏新n7                                 | GSM手机                   |<br>|       18 |      4 | 夏新t5                                 | 3G手机                    |<br>|       19 |      3 | 三星sgh-f258                           | GSM手机                   |<br>|       20 |      3 | 三星bc01                               | GSM手机                   |<br>|       21 |      3 | 金立 a30                               | GSM手机                   |<br>|       22 |      3 | 多普达touch hd                         | GSM手机                   |<br>|       23 |      5 | 诺基亚n96                              | 双模手机                  |<br>|       24 |      3 | p806                                   | GSM手机                   |<br>|       25 |     13 | 小灵通/固话50元充值卡                  | 小灵通/固话充值卡         |<br>|       26 |     13 | 小灵通/固话20元充值卡                  | 小灵通/固话充值卡         |<br>|       27 |     15 | 联通100元充值卡                        | 联通手机充值卡            |<br>|       28 |     15 | 联通50元充值卡                         | 联通手机充值卡            |<br>|       29 |     14 | 移动100元充值卡                        | 移动手机充值卡            |<br>|       30 |     14 | 移动20元充值卡                         | 移动手机充值卡            |<br>|       31 |      3 | 摩托罗拉e8                             | GSM手机                   |<br>|       32 |      3 | 诺基亚n85                              | GSM手机                   |<br>+———-+——–+—————————————-+—————————+<br>31 rows in set (0.00 sec)</p><p>mysql> #取出第四个栏目的商品以及商品的栏目名称<br>mysql> select  goods_id,goods.cat_id,goods_name,cat_name from goods left join category on goods.cat_id=category.cat_id where goods.cat_id=4;<br>+———-+——–+—————–+———-+<br>| goods_id | cat_id | goods_name      | cat_name |<br>+———-+——–+—————–+———-+<br>|        1 |      4 | kd876           | 3G手机   |<br>|       14 |      4 | 诺基亚5800xm    | 3G手机   |<br>|       18 |      4 | 夏新t5          | 3G手机   |<br>+———-+——–+—————–+———-+<br>3 rows in set (0.07 sec)</p><p>mysql> #左右连接,左连接即左表不动,<br>mysql> #a left join b 并不是说 a 一定是在b的左边<br>mysql> #左右连接可以互换, a left join b =b right join a<br>mysql> # 内链接 特点 所有有配偶的男生/女生 走到舞台上来, 其 左表和右表不匹配的不能出现<br>mysql> # 集合的角度看,内链接是左右连接的交集;<br>mysql> # 外连接,求的是并集,但是在mysql中不支持<br>mysql> #左连接<br>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| girl             |<br>| goods            |<br>| m                |<br>| mian             |<br>| result           |<br>| t                |<br>| user             |<br>+——————+<br>11 rows in set (0.60 sec)</p><p>mysql> select * from t;<br>+——+————–+<br>| tid  | tname        |<br>+——+————–+<br>|    1 | 国安         |<br>|    2 | 申花         |<br>|    3 | 布尔联队     |<br>+——+————–+<br>3 rows in set (0.40 sec)</p><p>mysql> select * from m;<br>+——+——+——+——+————+<br>| mid  | hid  | gid  | mres | matime     |<br>+——+——+——+——+————+<br>|    1 |    1 |    2 | 2:0  | 2006-05-21 |<br>|    2 |    2 |    3 | 1:2  | 2006-06-21 |<br>|    3 |    3 |    1 | 2:5  | 2006-06-25 |<br>|    4 |    2 |    1 | 3:2  | 2006-07-21 |<br>+——+——+——+——+————+<br>4 rows in set (0.10 sec)</p><p>mysql> select m.mid,m.hid,t.tname,m.gid,t.tname from m left join t on m.hid=t.tid;<br>+——+——+————–+——+————–+<br>| mid  | hid  | tname        | gid  | tname        |<br>+——+——+————–+——+————–+<br>|    1 |    1 | 国安         |    2 | 国安         |<br>|    2 |    2 | 申花         |    3 | 申花         |<br>|    4 |    2 | 申花         |    1 | 申花         |<br>|    3 |    3 | 布尔联队     |    1 | 布尔联队     |<br>+——+——+————–+——+————–+<br>4 rows in set (0.00 sec)</p><p>mysql> select m.mid,m.hid,t.tname,m.gid from m left join t on m.hid=t.tid;<br>+——+——+————–+——+<br>| mid  | hid  | tname        | gid  |<br>+——+——+————–+——+<br>|    1 |    1 | 国安         |    2 |<br>|    2 |    2 | 申花         |    3 |<br>|    4 |    2 | 申花         |    1 |<br>|    3 |    3 | 布尔联队     |    1 |<br>+——+——+————–+——+<br>4 rows in set (0.00 sec)</p><p>mysql> select tem.mid,tem.hid,t.tname,tem.gid,t.tname from (select m.mid,m.hid,t.tname,m.gid from m left join t on m.hid=t.tid) as tem  left join t on t.tid=tem.gid;<br>+——+——+————–+——+————–+<br>| mid  | hid  | tname        | gid  | tname        |<br>+——+——+————–+——+————–+<br>|    4 |    2 | 国安         |    1 | 国安         |<br>|    3 |    3 | 国安         |    1 | 国安         |<br>|    1 |    1 | 申花         |    2 | 申花         |<br>|    2 |    2 | 布尔联队     |    3 | 布尔联队     |<br>+——+——+————–+——+————–+<br>4 rows in set (0.00 sec)</p><p>mysql> select tem.mid,tem.hid,t.tname,tem.gid,t.tname from (select m.mid,m.hid,t.tname,m.gid from m left join t on m.hid=t.tid) as tem  left join t on t.tid=tem.gid order by tem.mid asc;<br>+——+——+————–+——+————–+<br>| mid  | hid  | tname        | gid  | tname        |<br>+——+——+————–+——+————–+<br>|    1 |    1 | 申花         |    2 | 申花         |<br>|    2 |    2 | 布尔联队     |    3 | 布尔联队     |<br>|    3 |    3 | 国安         |    1 | 国安         |<br>|    4 |    2 | 国安         |    1 | 国安         |<br>+——+——+————–+——+————–+<br>4 rows in set (0.00 sec)</p><p>mysql> select tem.mid,tem.hid,t.tname,tem.gid,t.tname from (select m.mid,m.hid,t.tname,m.gid from m left join t on m.hid=t.tid) as tem  left join t on tem.gid=t.tid order by tem.mid asc;<br>+——+——+————–+——+————–+<br>| mid  | hid  | tname        | gid  | tname        |<br>+——+——+————–+——+————–+<br>|    1 |    1 | 申花         |    2 | 申花         |<br>|    2 |    2 | 布尔联队     |    3 | 布尔联队     |<br>|    3 |    3 | 国安         |    1 | 国安         |<br>|    4 |    2 | 国安         |    1 | 国安         |<br>+——+——+————–+——+————–+<br>4 rows in set (0.00 sec)</p><p>mysql> select tem.mid,tem.hid,tem.tname,tem.gid,tem.tname from (select m.mid,m.hid,t.tname,m.gid from m left join t on m.hid=t.tid) as tem  left join t on tem.gid=t.tid order by tem.mid asc;<br>+——+——+————–+——+————–+<br>| mid  | hid  | tname        | gid  | tname        |<br>+——+——+————–+——+————–+<br>|    1 |    1 | 国安         |    2 | 国安         |<br>|    2 |    2 | 申花         |    3 | 申花         |<br>|    3 |    3 | 布尔联队     |    1 | 布尔联队     |<br>|    4 |    2 | 申花         |    1 | 申花         |<br>+——+——+————–+——+————–+<br>4 rows in set (0.00 sec)</p><p>mysql> select m.* from m left join t on m.hid=t.tid;<br>+——+——+——+——+————+<br>| mid  | hid  | gid  | mres | matime     |<br>+——+——+——+——+————+<br>|    1 |    1 |    2 | 2:0  | 2006-05-21 |<br>|    2 |    2 |    3 | 1:2  | 2006-06-21 |<br>|    4 |    2 |    1 | 3:2  | 2006-07-21 |<br>|    3 |    3 |    1 | 2:5  | 2006-06-25 |<br>+——+——+——+——+————+<br>4 rows in set (0.00 sec)</p><p>mysql> select m.*,t.tname from m left join t on m.hid=t.tid;<br>+——+——+——+——+————+————–+<br>| mid  | hid  | gid  | mres | matime     | tname        |<br>+——+——+——+——+————+————–+<br>|    1 |    1 |    2 | 2:0  | 2006-05-21 | 国安         |<br>|    2 |    2 |    3 | 1:2  | 2006-06-21 | 申花         |<br>|    4 |    2 |    1 | 3:2  | 2006-07-21 | 申花         |<br>|    3 |    3 |    1 | 2:5  | 2006-06-25 | 布尔联队     |<br>+——+——+——+——+————+————–+<br>4 rows in set (0.00 sec)</p><p>mysql> select tem.<em>, t.tname  from (select m.</em>,t.tname from m left join t on m.hid=t.tid) as tem left join t on tem.gid=t.tid;<br>+——+——+——+——+————+————–+————–+<br>| mid  | hid  | gid  | mres | matime     | tname        | tname        |<br>+——+——+——+——+————+————–+————–+<br>|    4 |    2 |    1 | 3:2  | 2006-07-21 | 申花         | 国安         |<br>|    3 |    3 |    1 | 2:5  | 2006-06-25 | 布尔联队     | 国安         |<br>|    1 |    1 |    2 | 2:0  | 2006-05-21 | 国安         | 申花         |<br>|    2 |    2 |    3 | 1:2  | 2006-06-21 | 申花         | 布尔联队     |<br>+——+——+——+——+————+————–+————–+<br>4 rows in set (0.00 sec)</p><p>mysql> select * from t;<br>+——+————–+<br>| tid  | tname        |<br>+——+————–+<br>|    1 | 国安         |<br>|    2 | 申花         |<br>|    3 | 布尔联队     |<br>+——+————–+<br>3 rows in set (0.00 sec)</p><p>mysql> select tem.mid,tem.hid,tem.tname,tem.gid,t.tname,tem.mres,tem.matime  from (select m.mid ,m.hid,t.tname,m.gid,m.mres,m.matime from m left join t on m.hid=t.tid) as tem left join t on tem.gid=t.tid;<br>+——+——+————–+——+————–+——+————+<br>| mid  | hid  | tname        | gid  | tname        | mres | matime     |<br>+——+——+————–+——+————–+——+————+<br>|    4 |    2 | 申花         |    1 | 国安         | 3:2  | 2006-07-21 |<br>|    3 |    3 | 布尔联队     |    1 | 国安         | 2:5  | 2006-06-25 |<br>|    1 |    1 | 国安         |    2 | 申花         | 2:0  | 2006-05-21 |<br>|    2 |    2 | 申花         |    3 | 布尔联队     | 1:2  | 2006-06-21 |<br>+——+——+————–+——+————–+——+————+<br>4 rows in set (0.00 sec)</p><p>mysql> select tem.mid,tem.hid,tem.tname,tem.gid,t.tname,tem.mres,tem.matime  from (select m.mid ,m.hid,t.tname,m.gid,m.mres,m.matime from m left join t on m.hid=t.tid) as tem left join t on tem.gid=t.tid order by tem.mid;<br>+——+——+————–+——+————–+——+————+<br>| mid  | hid  | tname        | gid  | tname        | mres | matime     |<br>+——+——+————–+——+————–+——+————+<br>|    1 |    1 | 国安         |    2 | 申花         | 2:0  | 2006-05-21 |<br>|    2 |    2 | 申花         |    3 | 布尔联队     | 1:2  | 2006-06-21 |<br>|    3 |    3 | 布尔联队     |    1 | 国安         | 2:5  | 2006-06-25 |<br>|    4 |    2 | 申花         |    1 | 国安         | 3:2  | 2006-07-21 |<br>+——+——+————–+——+————–+——+————+<br>4 rows in set (0.00 sec)</p><p>mysql> select * from m;<br>+——+——+——+——+————+<br>| mid  | hid  | gid  | mres | matime     |<br>+——+——+——+——+————+<br>|    1 |    1 |    2 | 2:0  | 2006-05-21 |<br>|    2 |    2 |    3 | 1:2  | 2006-06-21 |<br>|    3 |    3 |    1 | 2:5  | 2006-06-25 |<br>|    4 |    2 |    1 | 3:2  | 2006-07-21 |<br>+——+——+——+——+————+<br>4 rows in set (0.00 sec)</p><p>mysql> select tem.mid,tem.hid,tem.tname,tem.gid,t.tname,tem.mres,tem.matime  from (select m.mid ,m.hid,t.tname,m.gid,m.mres,m.matime from m left join t on m.hid=t.tid) as tem left join t on tem.gid=t.tid where tem.matime between “2006-6-1” and “2006-7-1”  order by tem.mid;<br>+——+——+————–+——+————–+——+————+<br>| mid  | hid  | tname        | gid  | tname        | mres | matime     |<br>+——+——+————–+——+————–+——+————+<br>|    2 |    2 | 申花         |    3 | 布尔联队     | 1:2  | 2006-06-21 |<br>|    3 |    3 | 布尔联队     |    1 | 国安         | 2:5  | 2006-06-25 |<br>+——+——+————–+——+————–+——+————+<br>2 rows in set (0.06 sec)</p><p>mysql> select m.mid ,m.hid,t.tname,m.gid,tem.tname,m.mres,m.matime from m left join t on m.hid=t.tid  left join t  as tem on m.gid=tem.tid where m.matime between “2006-6-1” and “2006-7-1”  order by m.mid;<br>+——+——+————–+——+————–+——+————+<br>| mid  | hid  | tname        | gid  | tname        | mres | matime     |<br>+——+——+————–+——+————–+——+————+<br>|    2 |    2 | 申花         |    3 | 布尔联队     | 1:2  | 2006-06-21 |<br>|    3 |    3 | 布尔联队     |    1 | 国安         | 2:5  | 2006-06-25 |<br>+——+——+————–+——+————–+——+————+<br>2 rows in set (0.00 sec)</p><p>mysql> exit<br>mysql> use test01;<br>Database changed<br>mysql> select goods_id,goods_name,shop_price from goods where shop_price<50<br>    -> ;<br>+———-+——————————–+————+<br>| goods_id | goods_name                     | shop_price |<br>+———-+——————————–+————+<br>|        5 | 索爱原装m2卡读卡器             |      20.00 |<br>|        6 | 胜创kingmax内存卡              |      42.00 |<br>|       25 | 小灵通/固话50元充值卡          |      48.00 |<br>|       26 | 小灵通/固话20元充值卡          |      19.00 |<br>|       28 | 联通50元充值卡                 |      45.00 |<br>|       30 | 移动20元充值卡                 |      18.00 |<br>+———-+——————————–+————+<br>6 rows in set (0.14 sec)</p><p>mysql> #union 联合 语法 sql1 union sql2<br>mysql> select goods_id,goods_name,shop_price from goods where shop_price>4000;<br>+———-+——————-+————+<br>| goods_id | goods_name        | shop_price |<br>+———-+——————-+————+<br>|       22 | 多普达touch hd    |    5999.00 |<br>+———-+——————-+————+<br>1 row in set (0.00 sec)</p><p>mysql> select goods_id,goods_name,shop_price from goods where shop_price>4000 union select goods_id,goods_name,shop_price from goods where shop_price<50;<br>+———-+——————————–+————+<br>| goods_id | goods_name                     | shop_price |<br>+———-+——————————–+————+<br>|       22 | 多普达touch hd                 |    5999.00 |<br>|        5 | 索爱原装m2卡读卡器             |      20.00 |<br>|        6 | 胜创kingmax内存卡              |      42.00 |<br>|       25 | 小灵通/固话50元充值卡          |      48.00 |<br>|       26 | 小灵通/固话20元充值卡          |      19.00 |<br>|       28 | 联通50元充值卡                 |      45.00 |<br>|       30 | 移动20元充值卡                 |      18.00 |<br>+———-+——————————–+————+<br>7 rows in set (0.10 sec)</p><p>mysql> #可以从两张表union联合查询<br>mysql> #两个列名不一致 以第一个列名为准<br>mysql> #union 满足的条件,只要结果集的列数一致就可以了<br>mysql> #union后的结果集可以排序<br>mysql> #格式: sql1 union sql2 order by<br>mysql> # 用nuion 取出第4个栏目和第5个栏目的商品m,并按价格升序排列<br>mysql> select goods_id ,cat_id, goods_name ,shop_price from goods union select goods_id ,cat_id ,goods_name ,shop_price from goods order by shop_price asc;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.05 sec)</p><p>mysql> select goods_id ,cat_id, goods_name ,shop_price from goods where cat_id=4 union select goods_id ,cat_id ,goods_name ,shop_price from goods where cat_id=5 order by shop_price asc;<br>+———-+——–+—————–+————+<br>| goods_id | cat_id | goods_name      | shop_price |<br>+———-+——–+—————–+————+<br>|        1 |      4 | kd876           |    1388.00 |<br>|       14 |      4 | 诺基亚5800xm    |    2625.00 |<br>|       18 |      4 | 夏新t5          |    2878.00 |<br>|       23 |      5 | 诺基亚n96       |    3700.00 |<br>+———-+——–+—————–+————+<br>4 rows in set (0.00 sec)</p><p>mysql> #取出第3个下价格前三高 的商品,和第四个栏目下价格前两高的商品用union完成</p><p>mysql> select goods_id ,cat_id,goods_name ,shop_price from goods where cat_id=3 order by  shop_price desc limit 3;<br>+———-+——–+——————-+————+<br>| goods_id | cat_id | goods_name        | shop_price |<br>+———-+——–+——————-+————+<br>|       22 |      3 | 多普达touch hd    |    5999.00 |<br>|       32 |      3 | 诺基亚n85         |    3010.00 |<br>|       17 |      3 | 夏新n7            |    2300.00 |<br>+———-+——–+——————-+————+<br>3 rows in set (0.00 sec)</p><p>mysql> select goods_id ,cat_id ,goods_name ,shop_price from goods where cat_id=4 order by shop_price desc limit 2;<br>+———-+——–+—————–+————+<br>| goods_id | cat_id | goods_name      | shop_price |<br>+———-+——–+—————–+————+<br>|       18 |      4 | 夏新t5          |    2878.00 |<br>|       14 |      4 | 诺基亚5800xm    |    2625.00 |<br>+———-+——–+—————–+————+<br>2 rows in set (0.00 sec)</p><p>mysql> (select goods_id ,cat_id,goods_name ,shop_price from goods where cat_id=3 order by  shop_price desc limit 3) union (select goods_id ,cat_id,goods_name ,shop_price from goods where cat_id=4 order by shop_price desc limit 2);<br>+———-+——–+——————-+————+<br>| goods_id | cat_id | goods_name        | shop_price |<br>+———-+——–+——————-+————+<br>|       22 |      3 | 多普达touch hd    |    5999.00 |<br>|       32 |      3 | 诺基亚n85         |    3010.00 |<br>|       17 |      3 | 夏新n7            |    2300.00 |<br>|       18 |      4 | 夏新t5            |    2878.00 |<br>|       14 |      4 | 诺基亚5800xm      |    2625.00 |<br>+———-+——–+——————-+————+<br>5 rows in set (0.00 sec)</p><p>mysql> #这次内层的order by 不会失效是因为有limit,单纯的order by不会对结果集有影响,需要配合limit<br>mysql> #如果union后的结果有重复如何解决<br>mysql> #union会有去重的效果,不想去重可以用union all<br>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| girl             |<br>| goods            |<br>| m                |<br>| mian             |<br>| result           |<br>| t                |<br>| user             |<br>+——————+<br>11 rows in set (0.08 sec)</p><p>mysql> select * from a;<br>+——+——+<br>| id   | num  |<br>+——+——+<br>| a    |    5 |<br>| b    |   10 |<br>| c    |   15 |<br>| d    |   10 |<br>+——+——+<br>4 rows in set (0.15 sec)</p><p>mysql> select  * from b;<br>+——+——+<br>| id   | num  |<br>+——+——+<br>| b    |    5 |<br>| c    |   15 |<br>| d    |   20 |<br>| e    |   99 |<br>+——+——+<br>4 rows in set (0.02 sec)</p><p>mysql> select * from a union select * from b;<br>+——+——+<br>| id   | num  |<br>+——+——+<br>| a    |    5 |<br>| b    |   10 |<br>| c    |   15 |<br>| d    |   10 |<br>| b    |    5 |<br>| d    |   20 |<br>| e    |   99 |<br>+——+——+<br>7 rows in set (0.00 sec)</p><p>mysql> select * from a union all select * from b;<br>+——+——+<br>| id   | num  |<br>+——+——+<br>| a    |    5 |<br>| b    |   10 |<br>| c    |   15 |<br>| d    |   10 |<br>| b    |    5 |<br>| c    |   15 |<br>| d    |   20 |<br>| e    |   99 |<br>+——+——+<br>8 rows in set (0.00 sec)</p><p>mysql> select * from a union all select * from b group by id;<br>+——+——+<br>| id   | num  |<br>+——+——+<br>| a    |    5 |<br>| b    |   10 |<br>| c    |   15 |<br>| d    |   10 |<br>| b    |    5 |<br>| c    |   15 |<br>| d    |   20 |<br>| e    |   99 |<br>+——+——+<br>8 rows in set (0.00 sec)</p><p>mysql> select tem.id,sum(tem.num) from(select a.id,a.num from a union all select b.id,b.num from b) as tem group by tem.id ;<br>+——+————–+<br>| id   | sum(tem.num) |<br>+——+————–+<br>| a    |            5 |<br>| b    |           15 |<br>| c    |           30 |<br>| d    |           30 |<br>| e    |           99 |<br>+——+————–+<br>5 rows in set (0.00 sec)</p><p>mysql> select a.* ,b.* from a left join b on a.id=b.id;<br>+——+——+——+——+<br>| id   | num  | id   | num  |<br>+——+——+——+——+<br>| b    |   10 | b    |    5 |<br>| c    |   15 | c    |   15 |<br>| d    |   10 | d    |   20 |<br>| a    |    5 | NULL | NULL |<br>+——+——+——+——+<br>4 rows in set (0.00 sec)</p><p>mysql> select a.* ,b.* from a inner join b on a.id=b.id;<br>+——+——+——+——+<br>| id   | num  | id   | num  |<br>+——+——+——+——+<br>| b    |   10 | b    |    5 |<br>| c    |   15 | c    |   15 |<br>| d    |   10 | d    |   20 |<br>+——+——+——+——+<br>3 rows in set (0.00 sec)</p><p>mysql> select a.* ,b.* from a left join b on a.id=b.id;<br>+——+——+——+——+<br>| id   | num  | id   | num  |<br>+——+——+——+——+<br>| b    |   10 | b    |    5 |<br>| c    |   15 | c    |   15 |<br>| d    |   10 | d    |   20 |<br>| a    |    5 | NULL | NULL |<br>+——+——+——+——+<br>4 rows in set (0.00 sec)</p><p>mysql> select a.* ,b.* from a left join b on a.id=b.id union select a.* ,b.* from a right join b on a.id=b.id;<br>+——+——+——+——+<br>| id   | num  | id   | num  |<br>+——+——+——+——+<br>| b    |   10 | b    |    5 |<br>| c    |   15 | c    |   15 |<br>| d    |   10 | d    |   20 |<br>| a    |    5 | NULL | NULL |<br>| NULL | NULL | e    |   99 |<br>+——+——+——+——+<br>5 rows in set (0.00 sec)</p><p>mysql> #先左联再u右连然后子查询;<br>mysql><br>mysql> #函数<br>mysql> #取出第四个栏目的商品及打88折的会员价<br>mysql> select goods_id,cat_id,good_name,shop_price<em>0.88 from goods where cat_id=4<br>    -> ;<br>ERROR 1054 (42S22): Unknown column ‘good_name’ in ‘field list’<br>mysql> select goods_id,cat_id,goods_name,shop_price</em>0.88 from goods where cat_id=4<br>    -> ;<br>+———-+——–+—————–+—————–+<br>| goods_id | cat_id | goods_name      | shop_price*0.88 |<br>+———-+——–+—————–+—————–+<br>|        1 |      4 | kd876           |       1221.4400 |<br>|       14 |      4 | 诺基亚5800xm    |       2310.0000 |<br>|       18 |      4 | 夏新t5          |       2532.6400 |<br>+———-+——–+—————–+—————–+<br>3 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name,floor(shop_price<em>0.88) from goods where cat_id=4 ;<br>+———-+——–+—————–+————————+<br>| goods_id | cat_id | goods_name      | floor(shop_price</em>0.88) |<br>+———-+——–+—————–+————————+<br>|        1 |      4 | kd876           |                   1221 |<br>|       14 |      4 | 诺基亚5800xm    |                   2310 |<br>|       18 |      4 | 夏新t5          |                   2532 |<br>+———-+——–+—————–+————————+<br>3 rows in set (0.00 sec)</p><p>mysql> #随机生成5-15之间的数字;</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                  7 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                 13 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                  8 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                  9 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                  8 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                  5 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                  8 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                 11 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> #ceiling 向上取整<br>mysql> #group concat 取出4栏目下goods_id拼接<br>mysql> select group_concat(goods_id) from goods where cat_id=4;<br>+————————+<br>| group_concat(goods_id) |<br>+————————+<br>| 1,14,18                |<br>+————————+<br>1 row in set (0.08 sec)</p><p>mysql> #计算字符的ascil码<br>mysql> select ascil(a);<br>ERROR 1305 (42000): FUNCTION test01.ascil does not exist<br>mysql> select ascii(a);<br>ERROR 1054 (42S22): Unknown column ‘a’ in ‘field list’<br>mysql> select ascii(‘a’);<br>+————+<br>| ascii(‘a’) |<br>+————+<br>|         97 |<br>+————+<br>1 row in set (0.00 sec)</p><p>mysql> select length(“中华”);<br>+——————+<br>| length(“中华”)   |<br>+——————+<br>|                6 |<br>+——————+<br>1 row in set (0.06 sec)</p><p>mysql> #length 计算的字节场地<br>mysql> #length 计算的字符数<br>mysql> #char_length 计算的字符数<br>mysql> select char_length(‘中国’);<br>+———————–+<br>| char_length(‘中国’)   |<br>+———————–+<br>|                     2 |<br>+———————–+<br>1 row in set (0.00 sec)</p><p>mysql> #反转字符串<br>mysql> select reverse(‘zh’)<br>    -> ;<br>+—————+<br>| reverse(‘zh’) |<br>+—————+<br>| hz            |<br>+—————+<br>1 row in set (0.05 sec)</p><p>mysql> select reverse(‘zh中国’);<br>+———————+<br>| reverse(‘zh中国’)   |<br>+———————+<br>| 国中hz              |<br>+———————+<br>1 row in set (0.00 sec)</p><p>mysql> #position<br>mysql> select position(‘@’ in ‘abc@sina.com’);<br>+———————————+<br>| position(‘@’ in ‘abc@sina.com’) |<br>+———————————+<br>|                               4 |<br>+———————————+<br>1 row in set (0.05 sec)</p><p>mysql> select right(‘abc@sina.com’ ,2);<br>+————————–+<br>| right(‘abc@sina.com’ ,2) |<br>+————————–+<br>| om                       |<br>+————————–+<br>1 row in set (0.00 sec)</p><p>mysql> #某网站有email字段,有邮件地址,想调查163.qq.com的u邮箱的比例<br>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| girl             |<br>| goods            |<br>| m                |<br>| mian             |<br>| result           |<br>| t                |<br>| user             |<br>+——————+<br>11 rows in set (0.01 sec)</p><p>mysql> #查询邮箱后缀,<br>mysql> create table email(uname char,email char);<br>Query OK, 0 rows affected (1.76 sec)</p><p>mysql> desc email;<br>+——-+———+——+—–+———+——-+<br>| Field | Type    | Null | Key | Default | Extra |<br>+——-+———+——+—–+———+——-+<br>| uname | char(1) | YES  |     | NULL    |       |<br>| email | char(1) | YES  |     | NULL    |       |<br>+——-+———+——+—–+———+——-+<br>2 rows in set (0.09 sec)</p><p>mysql> alter table email modify column uname char(50) ;<br>Query OK, 0 rows affected (1.96 sec)<br>Records: 0  Duplicates: 0  Warnings: 0</p><p>mysql> alter table email modify column email char(50) ;<br>Query OK, 0 rows affected (1.34 sec)<br>Records: 0  Duplicates: 0  Warnings: 0</p><p>mysql> desc eamil;<br>ERROR 1146 (42S02): Table ‘test01.eamil’ doesn’t exist<br>mysql> desc email;<br>+——-+———-+——+—–+———+——-+<br>| Field | Type     | Null | Key | Default | Extra |<br>+——-+———-+——+—–+———+——-+<br>| uname | char(50) | YES  |     | NULL    |       |<br>| email | char(50) | YES  |     | NULL    |       |<br>+——-+———-+——+—–+———+——-+<br>2 rows in set (0.00 sec)</p><p>mysql> insert into email values(‘zhangsan’,‘zhan@163.com’),(‘lilie’,‘li@qq.com’),(‘hanmeimei’,‘han@126.com’);<br>Query OK, 3 rows affected (0.28 sec)<br>Records: 3  Duplicates: 0  Warnings: 0</p><p>mysql> select * from email;<br>+———–+————–+<br>| uname     | email        |<br>+———–+————–+<br>| zhangsan  | <a href="mailto:zhan@163.com">zhan@163.com</a> |<br>| lilie     | <a href="mailto:li@qq.com">li@qq.com</a>    |<br>| hanmeimei | <a href="mailto:han@126.com">han@126.com</a>  |<br>+———–+————–+<br>3 rows in set (0.00 sec)</p><p>mysql> select uname ,position(‘@’ in email) from email;<br>+———–+————————+<br>| uname     | position(‘@’ in email) |<br>+———–+————————+<br>| zhangsan  |                      5 |<br>| lilie     |                      3 |<br>| hanmeimei |                      4 |<br>+———–+————————+<br>3 rows in set (0.00 sec)</p><p>mysql> select uname ,right(email,position(‘@’ in email)) from email;<br>+———–+————————————-+<br>| uname     | right(email,position(‘@’ in email)) |<br>+———–+————————————-+<br>| zhangsan  | 3.com                               |<br>| lilie     | com                                 |<br>| hanmeimei | .com                                |<br>+———–+————————————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select uname ,right(email,char_length(email)-position(‘@’ in email)) from email;<br>+———–+——————————————————–+<br>| uname     | right(email,char_length(email)-position(‘@’ in email)) |<br>+———–+——————————————————–+<br>| zhangsan  | 163.com                                                |<br>| lilie     | qq.com                                                 |<br>| hanmeimei | 126.com                                                |<br>+———–+——————————————————–+<br>3 rows in set (0.00 sec)</p><p>mysql> select uname ,right(email,length(email)-position(‘@’ in email)) from email;<br>+———–+—————————————————+<br>| uname     | right(email,length(email)-position(‘@’ in email)) |<br>+———–+—————————————————+<br>| zhangsan  | 163.com                                           |<br>| lilie     | qq.com                                            |<br>| hanmeimei | 126.com                                           |<br>+———–+—————————————————+<br>3 rows in set (0.00 sec)</p><p>mysql> #截取邮箱<br>mysql> #截取邮箱后半部分;<br>mysql> select uname ,right(email,length(email)-position(‘@’ in email)) from email;<br>+———–+—————————————————+<br>| uname     | right(email,length(email)-position(‘@’ in email)) |<br>+———–+—————————————————+<br>| zhangsan  | 163.com                                           |<br>| lilie     | qq.com                                            |<br>| hanmeimei | 126.com                                           |<br>+———–+—————————————————+<br>3 rows in set (0.00 sec)</p><p>mysql> #日期时间函数,取当前时间<br>mysql> select now;<br>ERROR 1054 (42S22): Unknown column ‘now’ in ‘field list’<br>mysql> select now();<br>+———————+<br>| now()               |<br>+———————+<br>| 2019-10-15 20:00:44 |<br>+———————+<br>1 row in set (0.05 sec)</p><p>mysql> select curdate();<br>+————+<br>| curdate()  |<br>+————+<br>| 2019-10-15 |<br>+————+<br>1 row in set (0.01 sec)</p><p>mysql> # now()返回datetime格式,curdate返回date格式<br>mysql> select curtime();<br>+———–+<br>| curtime() |<br>+———–+<br>| 20:02:19  |<br>+———–+<br>1 row in set (0.00 sec)</p><p>mysql> #查看某一日是那一周的第几天<br>mysql> select dayofweek(‘2019-10-15’);<br>+————————-+<br>| dayofweek(‘2019-10-15’) |<br>+————————-+<br>|                       3 |<br>+————————-+<br>1 row in set (0.05 sec)</p><p>mysql> select week(‘2019-10-15’);<br>+——————–+<br>| week(‘2019-10-15’) |<br>+——————–+<br>|                 41 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select week(‘2019-12-30’);<br>+——————–+<br>| week(‘2019-12-30’) |<br>+——————–+<br>|                 52 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select week(curdate());<br>+—————–+<br>| week(curdate()) |<br>+—————–+<br>|              41 |<br>+—————–+<br>1 row in set (0.00 sec)</p><p>mysql> select week(‘2019-12-31’);<br>+——————–+<br>| week(‘2019-12-31’) |<br>+——————–+<br>|                 52 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> #案例:name<br>mysql> # overtime 日期<br>mysql> # 5        2019-9-1<br>mysql> # 6        2019-9-2<br>mysql> # 3        2019-9-3<br>mysql> # 报表统计,按星期统计加班时间<br>mysql> create table jiaban(num int(10) ,time date);<br>Query OK, 0 rows affected (0.52 sec)</p><p>mysql> insert into jiaban values(3,”2019-9-1”),(4,’2019-9-2’),(5,”2019-9-3”),(6,’2019-9-10’),(19,’2019-9-18’);<br>Query OK, 5 rows affected (0.15 sec)<br>Records: 5  Duplicates: 0  Warnings: 0</p><p>mysql> select * from jiaban;<br>+——+————+<br>| num  | time       |<br>+——+————+<br>|    3 | 2019-09-01 |<br>|    4 | 2019-09-02 |<br>|    5 | 2019-09-03 |<br>|    6 | 2019-09-10 |<br>|   19 | 2019-09-18 |<br>+——+————+<br>5 rows in set (0.00 sec)</p><p>mysql> #按星期统计加班时间;<br>mysql> select sum(num), week(time) from jiaban ;<br>+———-+————+<br>| sum(num) | week(time) |<br>+———-+————+<br>|       37 |         35 |<br>+———-+————+<br>1 row in set (0.02 sec)</p><p>mysql> select sum(num), week(time) from jiaban group by week(time);<br>+———-+————+<br>| sum(num) | week(time) |<br>+———-+————+<br>|       12 |         35 |<br>|        6 |         36 |<br>|       19 |         37 |<br>+———-+————+<br>3 rows in set (0.00 sec)</p><p>mysql> select num, week(time) from jiaban group by week(time);<br>+——+————+<br>| num  | week(time) |<br>+——+————+<br>|    3 |         35 |<br>|    6 |         36 |<br>|   19 |         37 |<br>+——+————+<br>3 rows in set (0.00 sec)</p><p>mysql> select sum(num), week(time) from jiaban group by week(time);<br>+———-+————+<br>| sum(num) | week(time) |<br>+———-+————+<br>|       12 |         35 |<br>|        6 |         36 |<br>|       19 |         37 |<br>+———-+————+<br>3 rows in set (0.00 sec)</p><p>mysql> select *, week(time) from jiaban;<br>+——+————+————+<br>| num  | time       | week(time) |<br>+——+————+————+<br>|    3 | 2019-09-01 |         35 |<br>|    4 | 2019-09-02 |         35 |<br>|    5 | 2019-09-03 |         35 |<br>|    6 | 2019-09-10 |         36 |<br>|   19 | 2019-09-18 |         37 |<br>+——+————+————+<br>5 rows in set (0.00 sec)</p><p>mysql> #加密函数,码得<br>mysql> #md5加密函数;<br>mysql> select md5(‘1’);<br>+———————————-+<br>| md5(‘1’)                         |<br>+———————————-+<br>| c4ca4238a0b923820dcc509a6f75849b |<br>+———————————-+<br>1 row in set (0.07 sec)</p><p>mysql> select md5(‘1’);<br>+———————————-+<br>| md5(‘1’)                         |<br>+———————————-+<br>| c4ca4238a0b923820dcc509a6f75849b |<br>+———————————-+<br>1 row in set (0.00 sec)</p><p>mysql> #md5是不可逆的<br>mysql> #流程h控制函数<br>mysql> #case 变量<br>mysql> 2 when 值 then 语句；<br>    -> 3 when 值 then 语句；<br>    -> 4 else 语句；<br>    -> 5 end case；<br>    -> \c<br>mysql> #if(gender=0,’优先’,’等待’) as vip<br>mysql> ifnull<br>    -> \c<br>mysql> #ifnull的用法,判断第一个表达式是否为null 如果为null 返回第2 个表达式的值<br>mysql> #如果不为null 返回自身,即表达式1<br>mysql> select ifnull(‘’,a);<br>ERROR 1054 (42S22): Unknown column ‘a’ in ‘field list’<br>mysql> select ifnull(‘’,’a’);<br>+—————-+<br>| ifnull(‘’,’a’) |<br>+—————-+<br>|                |<br>+—————-+<br>1 row in set (0.00 sec)</p><p>mysql> select ifnull(null,’a’);<br>+——————+<br>| ifnull(null,’a’) |<br>+——————+<br>| a                |<br>+——————+<br>1 row in set (0.00 sec)</p><p>mysql> #系统调试函数<br>mysql><br>mysql><br>mysql> select user();<br>+—————-+<br>| user()         |<br>+—————-+<br>| root@localhost |<br>+—————-+<br>1 row in set (0.00 sec)</p><p>mysql> #user返回用户及主机,判断自己的身份<br>mysql> #database(),返回当前操作的数据库名<br>mysql> select database();<br>+————+<br>| database() |<br>+————+<br>| test01     |<br>+————+<br>1 row in set (0.00 sec)</p><p>mysql> select version();<br>+———–+<br>| version() |<br>+———–+<br>| 8.0.12    |<br>+———–+<br>1 row in set (0.00 sec)</p><p>mysql> #vension() 返回数据库的版本<br>mysql> #时间的h格式化,优先在业务逻辑上使用,<br>mysql> #总结: where 条件中,对某列使用了函数,由此列的索引不发挥作用<br>mysql> #视图 view<br>mysql> view 将查询表当作临时表使用,<br>    -> \c<br>mysql> # 查询每个栏目下商品的平均价格,并对平均价格取前三的栏目<br>mysql> select cat_id,avg(shop_price),count(goods_id) from goods group by cat_id;<br>+——–+—————–+—————–+<br>| cat_id | avg(shop_price) | count(goods_id) |<br>+——–+—————–+—————–+<br>|      4 |     2297.000000 |               3 |<br>|      8 |       75.333333 |               3 |<br>|     11 |       31.000000 |               2 |<br>|      3 |     1746.066667 |              15 |<br>|      2 |      823.330000 |               1 |<br>|      5 |     3700.000000 |               1 |<br>|     13 |       33.500000 |               2 |<br>|     15 |       70.000000 |               2 |<br>|     14 |       54.000000 |               2 |<br>+——–+—————–+—————–+<br>9 rows in set (0.10 sec)</p><p>mysql> select cat_id,avg(shop_price) as average,count(goods_id) from goods group by cat_id order by average desc limit 3 ;<br>+——–+————-+—————–+<br>| cat_id | average     | count(goods_id) |<br>+——–+————-+—————–+<br>|      5 | 3700.000000 |               1 |<br>|      4 | 2297.000000 |               3 |<br>|      3 | 1746.066667 |              15 |<br>+——–+————-+—————–+<br>3 rows in set (0.00 sec)</p><p>mysql> select cat_id,avg(shop_price) as average,count(goods_id) from goods group by cat_id order by average asc limit 3 ;<br>+——–+———–+—————–+<br>| cat_id | average   | count(goods_id) |<br>+——–+———–+—————–+<br>|     11 | 31.000000 |               2 |<br>|     13 | 33.500000 |               2 |<br>|     14 | 54.000000 |               2 |<br>+——–+———–+—————–+<br>3 rows in set (0.00 sec)</p><p>mysql> #取平均价格由高到底第三到第5的栏目<br>mysql> select cat_id,avg(shop_price) as average,count(goods_id) from goods group by cat_id order by average asc  ;<br>+——–+————-+—————–+<br>| cat_id | average     | count(goods_id) |<br>+——–+————-+—————–+<br>|     11 |   31.000000 |               2 |<br>|     13 |   33.500000 |               2 |<br>|     14 |   54.000000 |               2 |<br>|     15 |   70.000000 |               2 |<br>|      8 |   75.333333 |               3 |<br>|      2 |  823.330000 |               1 |<br>|      3 | 1746.066667 |              15 |<br>|      4 | 2297.000000 |               3 |<br>|      5 | 3700.000000 |               1 |<br>+——–+————-+—————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select cat_id,avg(shop_price) as average,count(goods_id) from goods group by cat_id;<br>+——–+————-+—————–+<br>| cat_id | average     | count(goods_id) |<br>+——–+————-+—————–+<br>|      4 | 2297.000000 |               3 |<br>|      8 |   75.333333 |               3 |<br>|     11 |   31.000000 |               2 |<br>|      3 | 1746.066667 |              15 |<br>|      2 |  823.330000 |               1 |<br>|      5 | 3700.000000 |               1 |<br>|     13 |   33.500000 |               2 |<br>|     15 |   70.000000 |               2 |<br>|     14 |   54.000000 |               2 |<br>+——–+————-+—————–+<br>9 rows in set (0.00 sec)</p><p>mysql> # 将结果集设为a  a频繁用到,因此用到视图<br>mysql> # 表通过某种运算得到的影子<br>mysql> #如何创建视图,建视图的时候语法 create view 表名 as 查询语句;<br>mysql> create view state as select cat_id,avg(shop_price) as average,count(goods_id) from goods group by cat_id;<br>Query OK, 0 rows affected (0.27 sec)</p><p>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| email            |<br>| girl             |<br>| goods            |<br>| jiaban           |<br>| m                |<br>| mian             |<br>| result           |<br>| state            |<br>| t                |<br>| user             |<br>+——————+<br>14 rows in set (0.01 sec)</p><p>mysql> #多了一张state表<br>mysql> select * from state;<br>+——–+————-+—————–+<br>| cat_id | average     | count(goods_id) |<br>+——–+————-+—————–+<br>|      4 | 2297.000000 |               3 |<br>|      8 |   75.333333 |               3 |<br>|     11 |   31.000000 |               2 |<br>|      3 | 1746.066667 |              15 |<br>|      2 |  823.330000 |               1 |<br>|      5 | 3700.000000 |               1 |<br>|     13 |   33.500000 |               2 |<br>|     15 |   70.000000 |               2 |<br>|     14 |   54.000000 |               2 |<br>+——–+————-+—————–+<br>9 rows in set (0.06 sec)</p><p>mysql> select * from state order by average limit 3;<br>+——–+———–+—————–+<br>| cat_id | average   | count(goods_id) |<br>+——–+———–+—————–+<br>|     11 | 31.000000 |               2 |<br>|     13 | 33.500000 |               2 |<br>|     14 | 54.000000 |               2 |<br>+——–+———–+—————–+<br>3 rows in set (0.00 sec)</p><p>mysql> #视图一旦创建完毕,可以完全当表使用,<br>mysql> # 简化查询,复杂的统计,<br>mysql> #更清晰的权限控制<br>mysql> # 开放权限,但是不想开放密码字段,用视图<br>mysql> # 多表查询,分表时候用,将表头放在视图中;<br>mysql> #视图是表的影子,表与视图相互影响的关系<br>mysql> #表的数据变化,影响视图的变化,<br>mysql> #以此例,,此视图的数据不能更改,其数据来自shop_price的平均值<br>mysql> #视图是否能够增删改呢?<br>mysql> #某种情况下是可以删除的,11对应,即表的数据能够推出视图的数据,视图的数据能够推出表的数据<br>mysql> #删除视图即 drop table/view 表名/视图名<br>mysql> exit<br>mysql> show databases;<br>+——————–+<br>| Database           |<br>+——————–+<br>| bookstore          |<br>| clouddb01          |<br>| clouddb02          |<br>| clouddb03          |<br>| information_schema |<br>| mydb               |<br>| mysql              |<br>| performance_schema |<br>| shop               |<br>| ssm_crud           |<br>| struts             |<br>| student            |<br>| sys                |<br>| test               |<br>| test01             |<br>+——————–+<br>15 rows in set (0.18 sec)</p><p>mysql> use test01;<br>Database changed<br>mysql> #algorithm<br>mysql> # merge —合并查询语句<br>mysql> #tem<br>mysql> #temptable —临时表<br>mysql> #undefined –未定义,由系统判断<br>mysql> #建一张简单的查询视图,不同临时表,只用y条件合并<br>mysql> create view as select * from goods where shop_price>300;<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘as select * from goods where shop_price>300’ at line 1<br>mysql> create view v1  as  select * from goods where shop_price>300;<br>Query OK, 0 rows affected (0.52 sec)</p><p>mysql> #查询视图<br>mysql> select goods_id ,goods_name ,shop_price from v1 where shop_price<500;<br>+———-+—————+————+<br>| goods_id | goods_name    | shop_price |<br>+———-+—————+————+<br>|        8 | 飞利浦9@9v    |     399.00 |<br>+———-+—————+————+<br>1 row in set (0.01 sec)</p><p>mysql> #总的条件是>300 <500;<br>mysql> #这个简单的查询还建立临时表的话,开销有点大;<br>mysql> #这是我们可以指定algorithm为merge<br>mysql> create algorithm=merge view v2 as select * from goods where shop_price>300;<br>Query OK, 0 rows affected (0.21 sec)</p><p>mysql> select goods_id ,goods_name ,shop_price from v2 where shop_price<500;<br>+———-+—————+————+<br>| goods_id | goods_name    | shop_price |<br>+———-+—————+————+<br>|        8 | 飞利浦9@9v    |     399.00 |<br>+———-+—————+————+<br>1 row in set (0.00 sec)</p><p>mysql> #有的时候必须建临时表,<br>mysql> #比如,每个栏目的平均商品价格<br>mysql> #比如每个栏目下的最高d价格的商品<br>mysql> create algorithm=temptable view v3 as select goods_id,cat_id,goods_name from goods order by cat_id asc ,goods_id desc;<br>Query OK, 0 rows affected (0.21 sec)</p><p>mysql> select * from v3 group by cat_id;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       16 |      2 | 恒基伟业g101                           |<br>|       32 |      3 | 诺基亚n85                              |<br>|       18 |      4 | 夏新t5                                 |<br>|       23 |      5 | 诺基亚n96                              |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       28 |     15 | 联通50元充值卡                         |<br>+———-+——–+—————————————-+<br>9 rows in set (0.05 sec)</p><p>mysql> select * from v3;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       16 |      2 | 恒基伟业g101                           |<br>|       32 |      3 | 诺基亚n85                              |<br>|       31 |      3 | 摩托罗拉e8                             |<br>|       24 |      3 | p806                                   |<br>|       22 |      3 | 多普达touch hd                         |<br>|       21 |      3 | 金立 a30                               |<br>|       20 |      3 | 三星bc01                               |<br>|       19 |      3 | 三星sgh-f258                           |<br>|       17 |      3 | 夏新n7                                 |<br>|       15 |      3 | 摩托罗拉a810                           |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |<br>|       12 |      3 | 摩托罗拉a810                           |<br>|       11 |      3 | 索爱c702c                              |<br>|       10 |      3 | 索爱c702c                              |<br>|        9 |      3 | 诺基亚e66                              |<br>|        8 |      3 | 飞利浦9@9v                             |<br>|       18 |      4 | 夏新t5                                 |<br>|       14 |      4 | 诺基亚5800xm                           |<br>|        1 |      4 | kd876                                  |<br>|       23 |      5 | 诺基亚n96                              |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        4 |      8 | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 诺基亚原装5800耳机                     |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       29 |     14 | 移动100元充值卡                        |<br>|       28 |     15 | 联通50元充值卡                         |<br>|       27 |     15 | 联通100元充值卡                        |<br>+———-+——–+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> drop view v3;<br>Query OK, 0 rows affected (0.27 sec)</p><p>mysql> create algorithm=temptable view v3 as select goods_id,cat_id,goods_name,shop_price from goods order by cat_id asc ,shop_price desc;<br>Query OK, 0 rows affected (0.31 sec)</p><p>mysql> slect * form v3 ;<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘slect * form v3’ at line 1<br>mysql> select * form v3 ;<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘form v3’ at line 1<br>mysql> select * from v3 ;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select * from v3 group by cat_id;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>+———-+——–+—————————————-+————+<br>9 rows in set (0.03 sec)</p><p>mysql> #编码问题<br>mysql> #字符编码到字符集的映射<br>mysql> #gb2312,utf-8<br>mysql> #unicode 码表,—– utf-8 压缩文件的关系<br>mysql> #如何截取utf-8无乱码<br>mysql> #从头开始,取1个字节,<br>mysql> #通过位运算,计算连续的1的g个数<br>mysql> #如为0 截取1个<br>mysql> #如为n 则截取n个<br>mysql> gbk转为utf-8<br>    -> \c<br>mysql> #jbk<br>mysql> #jbk 转unicode 在转utf-8<br>mysql> #乱码是怎么形成,编码和解码不统一<br>mysql> #转码过程字节丢失<br>mysql> create table t(id int ,name varchar(50) not null default(“1244”));<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘(“1244”))’ at line 1<br>mysql> create table t(id int ,name varchar(50) not null default(1244));<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘(1244))’ at line 1<br>mysql> create table t(id int ,name varchar(50) not null default ‘1244’);<br>ERROR 1050 (42S01): Table ‘t’ already exists<br>mysql> create table tem(id int ,time datetime not null default now() );;<br>Query OK, 0 rows affected (0.95 sec)</p><p>ERROR:<br>No query specified</p><p>mysql> desc time;<br>ERROR 1146 (42S02): Table ‘test01.time’ doesn’t exist<br>mysql> desc tem;<br>+——-+———-+——+—–+——————-+——-+<br>| Field | Type     | Null | Key | Default           | Extra |<br>+——-+———-+——+—–+——————-+——-+<br>| id    | int(11)  | YES  |     | NULL              |       |<br>| time  | datetime | NO   |     | CURRENT_TIMESTAMP |       |<br>+——-+———-+——+—–+——————-+——-+<br>2 rows in set (0.13 sec)</p><p>mysql> drop tem;<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘tem’ at line 1<br>mysql> drop table tem;<br>Query OK, 0 rows affected (0.49 sec)</p><p>mysql> create table tem(id int(11) not null primary key ,name varchar(50) not null ,time datetime not null default now());<br>Query OK, 0 rows affected (0.39 sec)</p><p>mysql> insert into tem values(1,”lili”),(2,”韩梅梅”),(3,”笑话”),(4,”哈哈”);<br>ERROR 1136 (21S01): Column count doesn’t match value count at row 1<br>mysql> insert into tem values(1,”lili”,null),(2,”韩梅梅”,null),(3,”笑话”,null),(4,”哈哈”,null);<br>ERROR 1048 (23000): Column ‘time’ cannot be null<br>mysql> insert into tem(id,name) values(1,”lili”),(2,”韩梅梅”),(3,”笑话”),(4,”哈哈”);<br>Query OK, 4 rows affected (0.20 sec)<br>Records: 4  Duplicates: 0  Warnings: 0</p><p>mysql> select * from tem;<br>+—-+———–+———————+<br>| id | name      | time                |<br>+—-+———–+———————+<br>|  1 | lili      | 2019-10-16 19:45:54 |<br>|  2 | 韩梅梅    | 2019-10-16 19:45:54 |<br>|  3 | 笑话      | 2019-10-16 19:45:54 |<br>|  4 | 哈哈      | 2019-10-16 19:45:54 |<br>+—-+———–+———————+<br>4 rows in set (0.00 sec)</p><p>mysql> delete from tem order by id desc limit 2;<br>Query OK, 2 rows affected (0.33 sec)</p><p>mysql> select * from tem;<br>+—-+———–+———————+<br>| id | name      | time                |<br>+—-+———–+———————+<br>|  1 | lili      | 2019-10-16 19:45:54 |<br>|  2 | 韩梅梅    | 2019-10-16 19:45:54 |<br>+—-+———–+———————+<br>2 rows in set (0.00 sec)</p><p>mysql> select *,week(time) from tem;<br>+—-+———–+———————+————+<br>| id | name      | time                | week(time) |<br>+—-+———–+———————+————+<br>|  1 | lili      | 2019-10-16 19:45:54 |         41 |<br>|  2 | 韩梅梅    | 2019-10-16 19:45:54 |         41 |<br>+—-+———–+———————+————+<br>2 rows in set (0.01 sec)</p><p>mysql> #设置client 和connection的字符集<br>mysql> # set character_set_client=gbk;<br>mysql> # set character_set_connection=utf8<br>mysql> # set character_set_ressults=gbk;<br>mysql> # set character_set_results=gbk;<br>mysql> # 1366 字符编码问题<br>mysql> 大转小会丢失<br>    -> \c<br>mysql> #即 server> connection> client 编码范围<br>mysql> #client con results 都是hgbk<br>mysql> #client con results 都是gbk<br>mysql> #若三者都是gbk 则可以简写<br>mysql> # 即 set names gbk<br>mysql> #utf8中文截取无乱码<br>mysql> #存储引擎,<br>mysql> # innodb myisam  innodb支持事务,<br>mysql><br>mysql> #start transaction;<br>mysql> commit;<br>Query OK, 0 rows affected (0.00 sec)</p><p>mysql> #commit;<br>mysql> #rollback;<br>mysql> exit</p></body></html>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;mysql&quot;&gt;&lt;a href=&quot;#mysql&quot; class=&quot;headerlink&quot; title=&quot;mysql&quot;&gt;&lt;/a&gt;mysql&lt;/h2&gt;&lt;p&gt;作者: philxling&lt;/p&gt;
&lt;p&gt;通过多个表,然后用log记录的方式记录知识:&lt;/p&gt;
    
    </summary>
    
    
      <category term="mysql" scheme="http://philxling.cn/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://philxling.cn/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql连表查询续</title>
    <link href="http://philxling.cn/[object%20Object]/2020/03/04/mysql/mysql2/"/>
    <id>http://philxling.cn/[object%20Object]/2020/03/04/mysql/mysql2/</id>
    <published>2020-03-04T04:32:08.000Z</published>
    <updated>2020-04-02T14:50:35.925Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="mysql查询基本知识-通过记录log的方式记录知识点"><a href="#mysql查询基本知识-通过记录log的方式记录知识点" class="headerlink" title="mysql查询基本知识,通过记录log的方式记录知识点"></a>mysql查询基本知识,通过记录log的方式记录知识点</h2><p>作者: philxling</p><p>mysql> select goods_name,goods_id, concat(“HTC”,substring(goods_name,4)) as name from goods where goods_name like “诺基亚%”;</p><a id="more"></a><p>+—————————————-+———-+———————————-+<br>| goods_name                             | goods_id | name                             |<br>+—————————————-+———-+———————————-+<br>| 诺基亚n85原装充电器                    |        4 | HTCn85原装充电器                 |<br>| 诺基亚原装5800耳机                     |        3 | HTC原装5800耳机                  |<br>| 诺基亚n85原装立体声耳机hs-82           |        7 | HTCn85原装立体声耳机hs-82        |<br>| 诺基亚e66                              |        9 | HTCe66                           |<br>| 诺基亚5320 xpressmusic                 |       13 | HTC5320 xpressmusic              |<br>| 诺基亚5800xm                           |       14 | HTC5800xm                        |<br>| 诺基亚n96                              |       23 | HTCn96                           |<br>| 诺基亚n85                              |       32 | HTCn85                           |<br>+—————————————-+———-+———————————-+<br>8 rows in set (0.00 sec)</p><p>mysql> select * from mian<br>    -> ;<br>+——+<br>| num  |<br>+——+<br>|    3 |<br>|   12 |<br>|   15 |<br>|   20 |<br>|   20 |<br>|   20 |<br>|   30 |<br>|   30 |<br>|   30 |<br>+——+<br>9 rows in set (0.00 sec)</p><p>mysql> #取出第三个栏目下价格小于1000或者大于3000 同时点击量大于5的商品<br>mysql> select goods_id ,goods_name, shop_price,cat_id,click_count from goods where cat_id=3 and (shop_price<1000 || shop_price>3000) and click_count >=5 ;<br>+———-+——————-+————+——–+————-+<br>| goods_id | goods_name        | shop_price | cat_id | click_count |<br>+———-+——————-+————+——–+————-+<br>|        8 | 飞利浦9@9v        |     399.00 |      3 |          10 |<br>|       12 | 摩托罗拉a810      |     983.00 |      3 |          13 |<br>|       15 | 摩托罗拉a810      |     788.00 |      3 |           8 |<br>|       19 | 三星sgh-f258      |     858.00 |      3 |           7 |<br>|       20 | 三星bc01          |     280.00 |      3 |          14 |<br>|       22 | 多普达touch hd    |    5999.00 |      3 |          16 |<br>|       32 | 诺基亚n85         |    3010.00 |      3 |           9 |<br>+———-+——————-+————+——–+————-+<br>7 rows in set (0.00 sec)</p><p>mysql> #最贵的商品的价格<br>mysql> select max(shop_price) from goods;<br>+—————–+<br>| max(shop_price) |<br>+—————–+<br>|         5999.00 |<br>+—————–+<br>1 row in set (0.06 sec)</p><p>mysql> #查询最便宜的商品的价格<br>mysql> select min(shop_price) from goods ;<br>+—————–+<br>| min(shop_price) |<br>+—————–+<br>|           18.00 |<br>+—————–+<br>1 row in set (0.00 sec)</p><p>mysql> #查出最旧的商品<br>mysql> select min(goods_id) from goods;<br>+—————+<br>| min(goods_id) |<br>+—————+<br>|             1 |<br>+—————+<br>1 row in set (0.10 sec)</p><p>mysql> #goods_number是库存量<br>mysql> select sum(goods_number) from goods<br>    -> ;<br>+——————-+<br>| sum(goods_number) |<br>+——————-+<br>|               313 |<br>+——————-+<br>1 row in set (0.00 sec)</p><p>mysql> #查看自己店里的商品的平均价格</p><p>mysql> select avg(shop_price) from goods;<br>+—————–+<br>| avg(shop_price) |<br>+—————–+<br>|     1232.526774 |<br>+—————–+<br>1 row in set (0.00 sec)</p><p>mysql> #统计多少种商品<br>mysql> select count(<em>) from goods;<br>+———-+<br>| count(</em>) |<br>+———-+<br>|       31 |<br>+———-+<br>1 row in set (0.00 sec)</p><p>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| girl             |<br>| goods            |<br>| m                |<br>| mian             |<br>| result           |<br>| t                |<br>| user             |<br>+——————+<br>11 rows in set (0.17 sec)</p><p>mysql> select * from t;<br>+——+————–+<br>| tid  | tname        |<br>+——+————–+<br>|    1 | 国安         |<br>|    2 | 申花         |<br>|    3 | 布尔联队     |<br>+——+————–+<br>3 rows in set (0.06 sec)</p><p>mysql> #select count(<em>) from 表名,表示查询的是绝对的行数,哪怕某一行所有字段全为null的时候也能计算在内,<br>mysql> #而select count(字段) from 表名 查询的是该列不为null的所有行的行数<br>mysql> #用count(</em>)和count(1) 那个好,对于myisamm的表咩有区别,这种引擎计数器在维护,innodb的用count(*))直接读行数,效率很低<br>mysql> #计算第三个栏目下所有商品的库存量之和<br>mysql> select sum(goods_number) from goods where cat_id =3;<br>+——————-+<br>| sum(goods_number) |<br>+——————-+<br>|               203 |<br>+——————-+<br>1 row in set (0.00 sec)</p><p>mysql> #计算每个栏目下的库存量之和<br>mysql> select cat_id, sum(goods_number) from goods  group by cat_id ;<br>+——–+——————-+<br>| cat_id | sum(goods_number) |<br>+——–+——————-+<br>|      4 |                 3 |<br>|      8 |                61 |<br>|     11 |                23 |<br>|      3 |               203 |<br>|      2 |                 0 |<br>|      5 |                 8 |<br>|     13 |                 4 |<br>|     15 |                 2 |<br>|     14 |                 9 |<br>+——–+——————-+<br>9 rows in set (0.05 sec)</p><p>mysql> #having 筛选<br>mysql> #查询每种商品积压的货款<br>mysql> show databases;<br>+——————–+<br>| Database           |<br>+——————–+<br>| bookstore          |<br>| clouddb01          |<br>| clouddb02          |<br>| clouddb03          |<br>| information_schema |<br>| mydb               |<br>| mysql              |<br>| performance_schema |<br>| shop               |<br>| ssm_crud           |<br>| struts             |<br>| student            |<br>| sys                |<br>| test               |<br>| test01             |<br>+——————–+<br>15 rows in set (0.00 sec)</p><p>mysql> #查询每种商品积压的货款<br>mysql> select market_price,shop_price, market_price-shop_price as discount from goods where 1 having discount >200;<br>ERROR 1046 (3D000): No database selected<br>mysql> use test01;<br>Database changed</p><p>mysql> #查询每种商品积压的货款<br>mysql> #提示: 商品的库存量*价格</p><p>mysql> select goods_id ,shop_price,goods_number*shop_price as hk from goods;<br>+———-+————+———–+<br>| goods_id | shop_price | hk        |<br>+———-+————+———–+<br>|        1 |    1388.00 |   1388.00 |<br>|        4 |      58.00 |    986.00 |<br>|        3 |      68.00 |   1632.00 |<br>|        5 |      20.00 |    160.00 |<br>|        6 |      42.00 |    630.00 |<br>|        7 |     100.00 |   2000.00 |<br>|        8 |     399.00 |    399.00 |<br>|        9 |    2298.00 |   9192.00 |<br>|       10 |    1328.00 |   9296.00 |<br>|       11 |    1300.00 |   1300.00 |<br>|       12 |     983.00 |   7864.00 |<br>|       13 |    1311.00 |  10488.00 |<br>|       14 |    2625.00 |   2625.00 |<br>|       15 |     788.00 |   2364.00 |<br>|       16 |     823.33 |      0.00 |<br>|       17 |    2300.00 |   2300.00 |<br>|       18 |    2878.00 |   2878.00 |<br>|       19 |     858.00 |  10296.00 |<br>|       20 |     280.00 |   3360.00 |<br>|       21 |    2000.00 |  80000.00 |<br>|       22 |    5999.00 |   5999.00 |<br>|       23 |    3700.00 |  29600.00 |<br>|       24 |    2000.00 | 200000.00 |<br>|       25 |      48.00 |     96.00 |<br>|       26 |      19.00 |     38.00 |<br>|       27 |      95.00 |    190.00 |<br>|       28 |      45.00 |      0.00 |<br>|       29 |      90.00 |      0.00 |<br>|       30 |      18.00 |    162.00 |<br>|       31 |    1337.00 |   1337.00 |<br>|       32 |    3010.00 |  12040.00 |<br>+———-+————+———–+<br>31 rows in set (0.00 sec)</p><p>mysql> #查询该店积压的总货款<br>mysql> select goods_number ,sum(goods_number*shop_price) as sum from goods;<br>+————–+———–+<br>| goods_number | sum       |<br>+————–+———–+<br>|            1 | 398620.00 |<br>+————–+———–+<br>1 row in set (0.07 sec)</p><p>mysql> select sum(goods_number*shop_price) as sum from goods;<br>+———–+<br>| sum       |<br>+———–+<br>| 398620.00 |<br>+———–+<br>1 row in set (0.00 sec)</p><p>mysql> #查询每个栏目下积压的k货款<br>mysql> select cat_id, sum(goods_number*shop_price) as sum from goods group by cat_id;<br>+——–+———–+<br>| cat_id | sum       |<br>+——–+———–+<br>|      4 |   6891.00 |<br>|      8 |   4618.00 |<br>|     11 |    790.00 |<br>|      3 | 356235.00 |<br>|      2 |      0.00 |<br>|      5 |  29600.00 |<br>|     13 |    134.00 |<br>|     15 |    190.00 |<br>|     14 |    162.00 |<br>+——–+———–+<br>9 rows in set (0.03 sec)</p><p>mysql> #查询栏目的积压货款金额,且查出挤压金额超出20000的货款<br>mysql> select cat_id, sum(goods_number*shop_price) as sum from goods  group by cat_id having sum>20000;<br>+——–+———–+<br>| cat_id | sum       |<br>+——–+———–+<br>|      3 | 356235.00 |<br>|      5 |  29600.00 |<br>+——–+———–+<br>2 rows in set (0.00 sec)</p><p>mysql> #查询本店市场价与本店价省的钱,且筛选出省钱200以上的商品<br>mysql> select goods_name, market_price-shop_price as discount from goods having discount>200;<br>ERROR 1690 (22003): DECIMAL UNSIGNED value is out of range in ‘(<code>test01</code>.<code>goods</code>.<code>market_price</code> - <code>test01</code>.<code>goods</code>.<code>shop_price</code>)’<br>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| girl             |<br>| goods            |<br>| m                |<br>| mian             |<br>| result           |<br>| t                |<br>| user             |<br>+——————+<br>11 rows in set (0.14 sec)</p><p>mysql> select * from result;<br>+——–+———+——-+<br>| name   | subject | score |<br>+——–+———+——-+<br>| 张三   | 数学    |    90 |<br>| 张三   | 语文    |    50 |<br>| 张三   | 地理    |    40 |<br>| 李四   | 语文    |    55 |<br>| 李四   | 政治    |    45 |<br>| 王五   | 政治    |    30 |<br>+——–+———+——-+<br>6 rows in set (0.07 sec)</p><p>mysql> #查询出两门及两门以上不及格者的平均成绩<br>mysql> select avg(score) as average ,subject from result where subject>=2  group by name having average<60;<br>Empty set, 6 warnings (0.00 sec)</p><p>mysql> select avg(score) as average ,subject from result group by name;<br>+———+———+<br>| average | subject |<br>+———+———+<br>| 60.0000 | 数学    |<br>| 50.0000 | 语文    |<br>| 30.0000 | 政治    |<br>+———+———+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result group by name;<br>+———+——–+<br>| average | name   |<br>+———+——–+<br>| 60.0000 | 张三   |<br>| 50.0000 | 李四   |<br>| 30.0000 | 王五   |<br>+———+——–+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result where 1  group by name;<br>+———+——–+<br>| average | name   |<br>+———+——–+<br>| 60.0000 | 张三   |<br>| 50.0000 | 李四   |<br>| 30.0000 | 王五   |<br>+———+——–+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result where 1  group by name having average<60 ;<br>+———+——–+<br>| average | name   |<br>+———+——–+<br>| 50.0000 | 李四   |<br>| 30.0000 | 王五   |<br>+———+——–+<br>2 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result where score<60  group by name having avg(average) ;<br>Empty set (0.00 sec)</p><p>mysql> select avg(score<60) as average ,name from result where 1  group by name having avg(average) ;<br>Empty set (0.00 sec)</p><p>mysql> select avg(score<60) as average ,name from result where 1  group by name ;<br>+———+——–+<br>| average | name   |<br>+———+——–+<br>|  0.6667 | 张三   |<br>|  1.0000 | 李四   |<br>|  1.0000 | 王五   |<br>+———+——–+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result where score<60  group by name ;<br>+———+——–+<br>| average | name   |<br>+———+——–+<br>| 45.0000 | 张三   |<br>| 50.0000 | 李四   |<br>| 30.0000 | 王五   |<br>+———+——–+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result where subject>=2  group by name ;<br>Empty set, 6 warnings (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject) from result where score<60  group by name ;<br>+———+——–+—————-+<br>| average | name   | count(subject) |<br>+———+——–+—————-+<br>| 45.0000 | 张三   |              2 |<br>| 50.0000 | 李四   |              2 |<br>| 30.0000 | 王五   |              1 |<br>+———+——–+—————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject) as subject from result where score<60   group by name having subject>=2  ;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 45.0000 | 张三   |       2 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject) as subject from result where score<60   group by name having subject>=2 and avg(average);<br>Empty set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject)>=2 as subject from result where score<60   group by name having avg(average);<br>Empty set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject) as subject from result where score<60   group by name having subject>=2;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 45.0000 | 张三   |       2 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result where score<60  group by name ;<br>+———+——–+<br>| average | name   |<br>+———+——–+<br>| 45.0000 | 张三   |<br>| 50.0000 | 李四   |<br>| 30.0000 | 王五   |<br>+———+——–+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject) from result where score<60  group by name ;<br>+———+——–+—————-+<br>| average | name   | count(subject) |<br>+———+——–+—————-+<br>| 45.0000 | 张三   |              2 |<br>| 50.0000 | 李四   |              2 |<br>| 30.0000 | 王五   |              1 |<br>+———+——–+—————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject)>=2 from result where score<60  group by name ;<br>+———+——–+——————-+<br>| average | name   | count(subject)>=2 |<br>+———+——–+——————-+<br>| 45.0000 | 张三   |                 1 |<br>| 50.0000 | 李四   |                 1 |<br>| 30.0000 | 王五   |                 0 |<br>+———+——–+——————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject)>=2 from result where score<60  group by name ;<br>+———+——–+——————-+<br>| average | name   | count(subject)>=2 |<br>+———+——–+——————-+<br>| 45.0000 | 张三   |                 1 |<br>| 50.0000 | 李四   |                 1 |<br>| 30.0000 | 王五   |                 0 |<br>+———+——–+——————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name,count(subject) from result where score<60  group by name ;<br>+———+——–+—————-+<br>| average | name   | count(subject) |<br>+———+——–+—————-+<br>| 45.0000 | 张三   |              2 |<br>| 50.0000 | 李四   |              2 |<br>| 30.0000 | 王五   |              1 |<br>+———+——–+—————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name from result where score<60 and subject>=2   group by name ;<br>Empty set, 5 warnings (0.00 sec)</p><p>mysql> select avg(score) as average ,name, count(subject) from result where score<60 and subject>=2   group by name ;<br>Empty set, 5 warnings (0.00 sec)</p><p>mysql> select avg(score) as average ,name, count(subject) from result where score<60    group by name ;<br>+———+——–+—————-+<br>| average | name   | count(subject) |<br>+———+——–+—————-+<br>| 45.0000 | 张三   |              2 |<br>| 50.0000 | 李四   |              2 |<br>| 30.0000 | 王五   |              1 |<br>+———+——–+—————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select avg(score) as average ,name, count(subject) as subject from result where score<60    group by name having subject>=2  ;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 45.0000 | 张三   |       2 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql> use test01<br>Database changed<br>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| girl             |<br>| goods            |<br>| m                |<br>| mian             |<br>| result           |<br>| t                |<br>| user             |<br>+——————+<br>11 rows in set (0.42 sec)</p><p>mysql> select avg(score) as average ,name, count(subject) as subject from result where score<60    group by name having subject>=2  ;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 45.0000 | 张三   |       2 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.14 sec)</p><p>mysql> insert into resule values(“赵六”,”语文”,100),<br>    -> (“赵六”,”数学”,99),<br>    -> (“赵六”,”英语”,98);<br>ERROR 1146 (42S02): Table ‘test01.resule’ doesn’t exist<br>mysql> insert into result values(“赵六”,”语文”,100),<br>    -> (“赵六”,”数学”,99),<br>    -> (“赵六”,”英语”,98);<br>Query OK, 3 rows affected (0.19 sec)<br>Records: 3  Duplicates: 0  Warnings: 0</p><p>mysql> select * from result;<br>+——–+———+——-+<br>| name   | subject | score |<br>+——–+———+——-+<br>| 张三   | 数学    |    90 |<br>| 张三   | 语文    |    50 |<br>| 张三   | 地理    |    40 |<br>| 李四   | 语文    |    55 |<br>| 李四   | 政治    |    45 |<br>| 王五   | 政治    |    30 |<br>| 赵六   | 语文    |   100 |<br>| 赵六   | 数学    |    99 |<br>| 赵六   | 英语    |    98 |<br>+——–+———+——-+<br>9 rows in set (0.00 sec)</p><p>mysql>  select avg(score) as average ,name, count(subject) as subject from result where score<60    group by name having subject>=2;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 45.0000 | 张三   |       2 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql> insert into result values(“张三”,”英语”,34);<br>Query OK, 1 row affected (0.05 sec)</p><p>mysql>  select avg(score) as average ,name, count(subject) as subject from result where score<60    group by name having subject>=2;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 41.3333 | 张三   |       3 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql>  select avg(score) as average ,name, sum(score<60) as subject from result   group by name having subject>=2;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 53.5000 | 张三   |       3 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql>  select avg(score) as average ,name, sum(score<60) as subject from result   group by name having subject>=2 order by average;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 50.0000 | 李四   |       2 |<br>| 53.5000 | 张三   |       3 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql>  select avg(score) as average ,name, sum(score<60) as subject from result   group by name having subject>=2 order by desc average;<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘desc average’ at line 1<br>mysql>  select avg(score) as average ,name, sum(score<60) as subject from result   group by name having subject>=2 order by  average desc;<br>+———+——–+———+<br>| average | name   | subject |<br>+———+——–+———+<br>| 53.5000 | 张三   |       3 |<br>| 50.0000 | 李四   |       2 |<br>+———+——–+———+<br>2 rows in set (0.00 sec)</p><p>mysql> #降序排 order by 列名 desc 降序/asc升序<br>mysql>  select avg(score) as average ,name, sum(score<60) as subject from result   group by name having subject>=2 order by  add_time asc;<br>ERROR 1054 (42S22): Unknown column ‘add_time’ in ‘order clause’<br>mysql> desc goods;<br>+————–+————————+——+—–+———+—————-+<br>| Field        | Type                   | Null | Key | Default | Extra          |<br>+————–+————————+——+—–+———+—————-+<br>| goods_id     | mediumint(8) unsigned  | NO   | PRI | NULL    | auto_increment |<br>| goods_name   | varchar(120)           | NO   |     |         |                |<br>| cat_id       | smallint(5) unsigned   | NO   |     | 0       |                |<br>| brand_id     | smallint(5) unsigned   | NO   |     | 0       |                |<br>| goods_sn     | char(15)               | NO   |     |         |                |<br>| goods_number | smallint(5) unsigned   | NO   |     | 0       |                |<br>| shop_price   | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| market_price | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| click_count  | int(10) unsigned       | NO   |     | 0       |                |<br>+————–+————————+——+—–+———+—————-+<br>9 rows in set (0.20 sec)</p><p>mysql> select goods_name ,cat_id,goods_id,shop_price from goods order by asc cat_id ,shop_price desc;<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘asc cat_id ,shop_price desc’ at line 1<br>mysql> select goods_name ,cat_id,goods_id,shop_price from goods order by  cat_id asc ,shop_price desc;<br>+—————————————-+——–+———-+————+<br>| goods_name                             | cat_id | goods_id | shop_price |<br>+—————————————-+——–+———-+————+<br>| 恒基伟业g101                           |      2 |       16 |     823.33 |<br>| 多普达touch hd                         |      3 |       22 |    5999.00 |<br>| 诺基亚n85                              |      3 |       32 |    3010.00 |<br>| 夏新n7                                 |      3 |       17 |    2300.00 |<br>| 诺基亚e66                              |      3 |        9 |    2298.00 |<br>| 金立 a30                               |      3 |       21 |    2000.00 |<br>| p806                                   |      3 |       24 |    2000.00 |<br>| 摩托罗拉e8                             |      3 |       31 |    1337.00 |<br>| 索爱c702c                              |      3 |       10 |    1328.00 |<br>| 诺基亚5320 xpressmusic                 |      3 |       13 |    1311.00 |<br>| 索爱c702c                              |      3 |       11 |    1300.00 |<br>| 摩托罗拉a810                           |      3 |       12 |     983.00 |<br>| 三星sgh-f258                           |      3 |       19 |     858.00 |<br>| 摩托罗拉a810                           |      3 |       15 |     788.00 |<br>| 飞利浦9@9v                             |      3 |        8 |     399.00 |<br>| 三星bc01                               |      3 |       20 |     280.00 |<br>| 夏新t5                                 |      4 |       18 |    2878.00 |<br>| 诺基亚5800xm                           |      4 |       14 |    2625.00 |<br>| kd876                                  |      4 |        1 |    1388.00 |<br>| 诺基亚n96                              |      5 |       23 |    3700.00 |<br>| 诺基亚n85原装立体声耳机hs-82           |      8 |        7 |     100.00 |<br>| 诺基亚原装5800耳机                     |      8 |        3 |      68.00 |<br>| 诺基亚n85原装充电器                    |      8 |        4 |      58.00 |<br>| 胜创kingmax内存卡                      |     11 |        6 |      42.00 |<br>| 索爱原装m2卡读卡器                     |     11 |        5 |      20.00 |<br>| 小灵通/固话50元充值卡                  |     13 |       25 |      48.00 |<br>| 小灵通/固话20元充值卡                  |     13 |       26 |      19.00 |<br>| 移动100元充值卡                        |     14 |       29 |      90.00 |<br>| 移动20元充值卡                         |     14 |       30 |      18.00 |<br>| 联通100元充值卡                        |     15 |       27 |      95.00 |<br>| 联通50元充值卡                         |     15 |       28 |      45.00 |<br>+—————————————-+——–+———-+————+<br>31 rows in set (0.26 sec)</p><p>mysql> #多排 用,隔开 order by cat_id asc ,shop_price desc<br>mysql> exit<br>mysql> use test01;<br>Database changed<br>mysql> #limit 限制条目<br>mysql> select goods_id,cat_id,goods_name,shop_price from goods where cat_id=3 order by shop_price desc limit 0,3;<br>+———-+——–+——————-+————+<br>| goods_id | cat_id | goods_name        | shop_price |<br>+———-+——–+——————-+————+<br>|       22 |      3 | 多普达touch hd    |    5999.00 |<br>|       32 |      3 | 诺基亚n85         |    3010.00 |<br>|       17 |      3 | 夏新n7            |    2300.00 |<br>+———-+——–+——————-+————+<br>3 rows in set (0.01 sec)</p><p>mysql> select goods_id,cat_id,goods_name,shop_price from goods where cat_id=3 order by shop_price desc limit 2,2;<br>+———-+——–+————–+————+<br>| goods_id | cat_id | goods_name   | shop_price |<br>+———-+——–+————–+————+<br>|       17 |      3 | 夏新n7       |    2300.00 |<br>|        9 |      3 | 诺基亚e66    |    2298.00 |<br>+———-+——–+————–+————+<br>2 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name,shop_price from goods where cat_id=3 order by shop_price desc limit 2,3;<br>+———-+——–+————–+————+<br>| goods_id | cat_id | goods_name   | shop_price |<br>+———-+——–+————–+————+<br>|       17 |      3 | 夏新n7       |    2300.00 |<br>|        9 |      3 | 诺基亚e66    |    2298.00 |<br>|       21 |      3 | 金立 a30     |    2000.00 |<br>+———-+——–+————–+————+<br>3 rows in set (0.00 sec)</p><p>mysql> #limit 第一个参数为0可以不写<br>mysql> #查询出每个栏目下id号最大的一条商品<br>mysql> select goods_id,cat_id,goods_name,shop_price from goods where 1 group by cat_id order by goods_id desc limit 1;<br>+———-+——–+———————–+————+<br>| goods_id | cat_id | goods_name            | shop_price |<br>+———-+——–+———————–+————+<br>|       29 |     14 | 移动100元充值卡       |      90.00 |<br>+———-+——–+———————–+————+<br>1 row in set (0.06 sec)</p><p>mysql> select goods_id,cat_id,goods_name,shop_price from goods where 1 group by cat_id ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|        1 |      4 | kd876                          |    1388.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name,shop_price from goods  group by cat_id ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|        1 |      4 | kd876                          |    1388.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select cat_id,goods_name,shop_price from goods  group by cat_id ;<br>+——–+——————————–+————+<br>| cat_id | goods_name                     | shop_price |<br>+——–+——————————–+————+<br>|      4 | kd876                          |    1388.00 |<br>|      8 | 诺基亚n85原装充电器            |      58.00 |<br>|     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|      3 | 飞利浦9@9v                     |     399.00 |<br>|      2 | 恒基伟业g101                   |     823.33 |<br>|      5 | 诺基亚n96                      |    3700.00 |<br>|     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|     15 | 联通100元充值卡                |      95.00 |<br>|     14 | 移动100元充值卡                |      90.00 |<br>+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods   group by cat_id=3  ;<br>+———-+——–+—————+————+<br>| goods_id | cat_id | goods_name    | shop_price |<br>+———-+——–+—————+————+<br>|        1 |      4 | kd876         |    1388.00 |<br>|        8 |      3 | 飞利浦9@9v    |     399.00 |<br>+———-+——–+—————+————+<br>2 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods group by cat_id ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|        1 |      4 | kd876                          |    1388.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc ;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods group by cat_id  order by cat_id asc ,goods_id desc ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|        1 |      4 | kd876                          |    1388.00 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc ;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select * from (select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc) as tem group by cat_id  ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|        1 |      4 | kd876                          |    1388.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.04 sec)</p><p>mysql> select * from (select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc) as tem group by cat_id  order by cat_id asc ,goods_id desc limit 1  ;<br>+———-+——–+——————+————+<br>| goods_id | cat_id | goods_name       | shop_price |<br>+———-+——–+——————+————+<br>|       16 |      2 | 恒基伟业g101     |     823.33 |<br>+———-+——–+——————+————+<br>1 row in set (0.00 sec)</p><p>mysql> select * from (select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc) as tem group by cat_id  order by cat_id asc ,goods_id desc ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|        1 |      4 | kd876                          |    1388.00 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc ;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select * from (select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc) as temp order by cat_id asc ;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select * from (select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc) as temp group by cat_id order by cat_id asc ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|        1 |      4 | kd876                          |    1388.00 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select * from (select goods_id, cat_id,goods_name,shop_price from goods order by cat_id asc ,goods_id desc) as temp group by cat_id  ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|        1 |      4 | kd876                          |    1388.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods where cat_id=3 order by goods_id desc limit 1 ;<br>+———-+——–+————–+————+<br>| goods_id | cat_id | goods_name   | shop_price |<br>+———-+——–+————–+————+<br>|       32 |      3 | 诺基亚n85    |    3010.00 |<br>+———-+——–+————–+————+<br>1 row in set (0.07 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods  order by goods_id desc limit 1 ;<br>+———-+——–+————–+————+<br>| goods_id | cat_id | goods_name   | shop_price |<br>+———-+——–+————–+————+<br>|       32 |      3 | 诺基亚n85    |    3010.00 |<br>+———-+——–+————–+————+<br>1 row in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods  order by goods_id desc limit 1 ;<br>+———-+——–+————–+————+<br>| goods_id | cat_id | goods_name   | shop_price |<br>+———-+——–+————–+————+<br>|       32 |      3 | 诺基亚n85    |    3010.00 |<br>+———-+——–+————–+————+<br>1 row in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods  order by goods_id desc  ;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods group by cat_id  order by goods_id desc  ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        1 |      4 | kd876                          |    1388.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods group by cat_id  ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|        1 |      4 | kd876                          |    1388.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods group by cat_id  order by goods_id desc  ;<br>+———-+——–+——————————–+————+<br>| goods_id | cat_id | goods_name                     | shop_price |<br>+———-+——–+——————————–+————+<br>|       29 |     14 | 移动100元充值卡                |      90.00 |<br>|       27 |     15 | 联通100元充值卡                |      95.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|       23 |      5 | 诺基亚n96                      |    3700.00 |<br>|       16 |      2 | 恒基伟业g101                   |     823.33 |<br>|        8 |      3 | 飞利浦9@9v                     |     399.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|        4 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|        1 |      4 | kd876                          |    1388.00 |<br>+———-+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id,goods_name,shop_price from goods  order by goods_id desc limit 1 ;<br>+———-+——–+————–+————+<br>| goods_id | cat_id | goods_name   | shop_price |<br>+———-+——–+————–+————+<br>|       32 |      3 | 诺基亚n85    |    3010.00 |<br>+———-+——–+————–+————+<br>1 row in set (0.00 sec)</p><p>mysql> select max(goods_id), cat_id,goods_name,shop_price from goods  order by goods_id desc ;<br>+—————+——–+————+————+<br>| max(goods_id) | cat_id | goods_name | shop_price |<br>+—————+——–+————+————+<br>|            32 |      4 | kd876      |    1388.00 |<br>+—————+——–+————+————+<br>1 row in set (0.06 sec)</p><p>mysql> select goods_id ,cat_id ,goods_name from goods<br>    -> ;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|        1 |      4 | kd876                                  |<br>|        4 |      8 | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 诺基亚原装5800耳机                     |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        8 |      3 | 飞利浦9@9v                             |<br>|        9 |      3 | 诺基亚e66                              |<br>|       10 |      3 | 索爱c702c                              |<br>|       11 |      3 | 索爱c702c                              |<br>|       12 |      3 | 摩托罗拉a810                           |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |<br>|       14 |      4 | 诺基亚5800xm                           |<br>|       15 |      3 | 摩托罗拉a810                           |<br>|       16 |      2 | 恒基伟业g101                           |<br>|       17 |      3 | 夏新n7                                 |<br>|       18 |      4 | 夏新t5                                 |<br>|       19 |      3 | 三星sgh-f258                           |<br>|       20 |      3 | 三星bc01                               |<br>|       21 |      3 | 金立 a30                               |<br>|       22 |      3 | 多普达touch hd                         |<br>|       23 |      5 | 诺基亚n96                              |<br>|       24 |      3 | p806                                   |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       27 |     15 | 联通100元充值卡                        |<br>|       28 |     15 | 联通50元充值卡                         |<br>|       29 |     14 | 移动100元充值卡                        |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       31 |      3 | 摩托罗拉e8                             |<br>|       32 |      3 | 诺基亚n85                              |<br>+———-+——–+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select max(goods_id), cat_id,goods_name,shop_price from goods group by cat_id ;<br>+—————+——–+——————————–+————+<br>| max(goods_id) | cat_id | goods_name                     | shop_price |<br>+—————+——–+——————————–+————+<br>|            18 |      4 | kd876                          |    1388.00 |<br>|             7 |      8 | 诺基亚n85原装充电器            |      58.00 |<br>|             6 |     11 | 索爱原装m2卡读卡器             |      20.00 |<br>|            32 |      3 | 飞利浦9@9v                     |     399.00 |<br>|            16 |      2 | 恒基伟业g101                   |     823.33 |<br>|            23 |      5 | 诺基亚n96                      |    3700.00 |<br>|            26 |     13 | 小灵通/固话50元充值卡          |      48.00 |<br>|            28 |     15 | 联通100元充值卡                |      95.00 |<br>|            30 |     14 | 移动100元充值卡                |      90.00 |<br>+—————+——–+——————————–+————+<br>9 rows in set (0.00 sec)</p><p>mysql> select max(goods_id), cat_id from goods group by cat_id ;<br>+—————+——–+<br>| max(goods_id) | cat_id |<br>+—————+——–+<br>|            18 |      4 |<br>|             7 |      8 |<br>|             6 |     11 |<br>|            32 |      3 |<br>|            16 |      2 |<br>|            23 |      5 |<br>|            26 |     13 |<br>|            28 |     15 |<br>|            30 |     14 |<br>+—————+——–+<br>9 rows in set (0.00 sec)</p><p>mysql> select * from (select max(goods_id) as goods_id, cat_id from goods group by cat_id ) as temp where cat_id=cat_id ;<br>+———-+——–+<br>| goods_id | cat_id |<br>+———-+——–+<br>|       18 |      4 |<br>|        7 |      8 |<br>|        6 |     11 |<br>|       32 |      3 |<br>|       16 |      2 |<br>|       23 |      5 |<br>|       26 |     13 |<br>|       28 |     15 |<br>|       30 |     14 |<br>+———-+——–+<br>9 rows in set (0.06 sec)</p><p>mysql> select cat_id ,count(goods_name) from goods group by cat_id;<br>+——–+——————-+<br>| cat_id | count(goods_name) |<br>+——–+——————-+<br>|      4 |                 3 |<br>|      8 |                 3 |<br>|     11 |                 2 |<br>|      3 |                15 |<br>|      2 |                 1 |<br>|      5 |                 1 |<br>|     13 |                 2 |<br>|     15 |                 2 |<br>|     14 |                 2 |<br>+——–+——————-+<br>9 rows in set (0.00 sec)</p><p>mysql> select cat_id ,max(goods_id) from goods group by cat_id;<br>+——–+—————+<br>| cat_id | max(goods_id) |<br>+——–+—————+<br>|      4 |            18 |<br>|      8 |             7 |<br>|     11 |             6 |<br>|      3 |            32 |<br>|      2 |            16 |<br>|      5 |            23 |<br>|     13 |            26 |<br>|     15 |            28 |<br>|     14 |            30 |<br>+——–+—————+<br>9 rows in set (0.00 sec)</p><p>mysql> select cat_id ,max(goods_id),max(goods_name) from goods group by cat_id;<br>+——–+—————+——————————–+<br>| cat_id | max(goods_id) | max(goods_name)                |<br>+——–+—————+——————————–+<br>|      4 |            18 | 诺基亚5800xm                   |<br>|      8 |             7 | 诺基亚原装5800耳机             |<br>|     11 |             6 | 胜创kingmax内存卡              |<br>|      3 |            32 | 飞利浦9@9v                     |<br>|      2 |            16 | 恒基伟业g101                   |<br>|      5 |            23 | 诺基亚n96                      |<br>|     13 |            26 | 小灵通/固话50元充值卡          |<br>|     15 |            28 | 联通50元充值卡                 |<br>|     14 |            30 | 移动20元充值卡                 |<br>+——–+—————+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select cat_id ,max(goods_id) from goods ;<br>+——–+—————+<br>| cat_id | max(goods_id) |<br>+——–+—————+<br>|      4 |            32 |<br>+——–+—————+<br>1 row in set (0.00 sec)</p><p>mysql> select cat_id, goods_id,goods_name from goods order by goods_id desc ;<br>+——–+———-+—————————————-+<br>| cat_id | goods_id | goods_name                             |<br>+——–+———-+—————————————-+<br>|      3 |       32 | 诺基亚n85                              |<br>|      3 |       31 | 摩托罗拉e8                             |<br>|     14 |       30 | 移动20元充值卡                         |<br>|     14 |       29 | 移动100元充值卡                        |<br>|     15 |       28 | 联通50元充值卡                         |<br>|     15 |       27 | 联通100元充值卡                        |<br>|     13 |       26 | 小灵通/固话20元充值卡                  |<br>|     13 |       25 | 小灵通/固话50元充值卡                  |<br>|      3 |       24 | p806                                   |<br>|      5 |       23 | 诺基亚n96                              |<br>|      3 |       22 | 多普达touch hd                         |<br>|      3 |       21 | 金立 a30                               |<br>|      3 |       20 | 三星bc01                               |<br>|      3 |       19 | 三星sgh-f258                           |<br>|      4 |       18 | 夏新t5                                 |<br>|      3 |       17 | 夏新n7                                 |<br>|      2 |       16 | 恒基伟业g101                           |<br>|      3 |       15 | 摩托罗拉a810                           |<br>|      4 |       14 | 诺基亚5800xm                           |<br>|      3 |       13 | 诺基亚5320 xpressmusic                 |<br>|      3 |       12 | 摩托罗拉a810                           |<br>|      3 |       11 | 索爱c702c                              |<br>|      3 |       10 | 索爱c702c                              |<br>|      3 |        9 | 诺基亚e66                              |<br>|      3 |        8 | 飞利浦9@9v                             |<br>|      8 |        7 | 诺基亚n85原装立体声耳机hs-82           |<br>|     11 |        6 | 胜创kingmax内存卡                      |<br>|     11 |        5 | 索爱原装m2卡读卡器                     |<br>|      8 |        4 | 诺基亚n85原装充电器                    |<br>|      8 |        3 | 诺基亚原装5800耳机                     |<br>|      4 |        1 | kd876                                  |<br>+——–+———-+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select cat_id ,max(goods_id) from goods ;<br>+——–+—————+<br>| cat_id | max(goods_id) |<br>+——–+—————+<br>|      4 |            32 |<br>+——–+—————+<br>1 row in set (0.00 sec)</p><p>mysql> select cat_id, goods_id,goods_name from goods order by goods_id desc ;<br>+——–+———-+—————————————-+<br>| cat_id | goods_id | goods_name                             |<br>+——–+———-+—————————————-+<br>|      3 |       32 | 诺基亚n85                              |<br>|      3 |       31 | 摩托罗拉e8                             |<br>|     14 |       30 | 移动20元充值卡                         |<br>|     14 |       29 | 移动100元充值卡                        |<br>|     15 |       28 | 联通50元充值卡                         |<br>|     15 |       27 | 联通100元充值卡                        |<br>|     13 |       26 | 小灵通/固话20元充值卡                  |<br>|     13 |       25 | 小灵通/固话50元充值卡                  |<br>|      3 |       24 | p806                                   |<br>|      5 |       23 | 诺基亚n96                              |<br>|      3 |       22 | 多普达touch hd                         |<br>|      3 |       21 | 金立 a30                               |<br>|      3 |       20 | 三星bc01                               |<br>|      3 |       19 | 三星sgh-f258                           |<br>|      4 |       18 | 夏新t5                                 |<br>|      3 |       17 | 夏新n7                                 |<br>|      2 |       16 | 恒基伟业g101                           |<br>|      3 |       15 | 摩托罗拉a810                           |<br>|      4 |       14 | 诺基亚5800xm                           |<br>|      3 |       13 | 诺基亚5320 xpressmusic                 |<br>|      3 |       12 | 摩托罗拉a810                           |<br>|      3 |       11 | 索爱c702c                              |<br>|      3 |       10 | 索爱c702c                              |<br>|      3 |        9 | 诺基亚e66                              |<br>|      3 |        8 | 飞利浦9@9v                             |<br>|      8 |        7 | 诺基亚n85原装立体声耳机hs-82           |<br>|     11 |        6 | 胜创kingmax内存卡                      |<br>|     11 |        5 | 索爱原装m2卡读卡器                     |<br>|      8 |        4 | 诺基亚n85原装充电器                    |<br>|      8 |        3 | 诺基亚原装5800耳机                     |<br>|      4 |        1 | kd876                                  |<br>+——–+———-+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select cat_id ,max(goods_id) from goods ;<br>+——–+—————+<br>| cat_id | max(goods_id) |<br>+——–+—————+<br>|      4 |            32 |<br>+——–+—————+<br>1 row in set (0.00 sec)</p><p>mysql> select cat_id ,max(goods_id) from goods group by cat_id;<br>+——–+—————+<br>| cat_id | max(goods_id) |<br>+——–+—————+<br>|      4 |            18 |<br>|      8 |             7 |<br>|     11 |             6 |<br>|      3 |            32 |<br>|      2 |            16 |<br>|      5 |            23 |<br>|     13 |            26 |<br>|     15 |            28 |<br>|     14 |            30 |<br>+——–+—————+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id ,goods_name,cat_id from goods where goods_id in(select max(goods_id) from goods group by cat_id) ;<br>+———-+—————————————-+——–+<br>| goods_id | goods_name                             | cat_id |<br>+———-+—————————————-+——–+<br>|        6 | 胜创kingmax内存卡                      |     11 |<br>|        7 | 诺基亚n85原装立体声耳机hs-82           |      8 |<br>|       16 | 恒基伟业g101                           |      2 |<br>|       18 | 夏新t5                                 |      4 |<br>|       23 | 诺基亚n96                              |      5 |<br>|       26 | 小灵通/固话20元充值卡                  |     13 |<br>|       28 | 联通50元充值卡                         |     15 |<br>|       30 | 移动20元充值卡                         |     14 |<br>|       32 | 诺基亚n85                              |      3 |<br>+———-+—————————————-+——–+<br>9 rows in set (0.06 sec)</p><p>mysql> select * from(select goods_id,cat_id ,goods_name from goods order by goods_id desc ) as temp  group by cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select * from(select goods_id,cat_id ,goods_name from goods order by goods_id desc)  as temp  group by temp.cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id ,goods_name from goods order by goods_id desc;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       32 |      3 | 诺基亚n85                              |<br>|       31 |      3 | 摩托罗拉e8                             |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       29 |     14 | 移动100元充值卡                        |<br>|       28 |     15 | 联通50元充值卡                         |<br>|       27 |     15 | 联通100元充值卡                        |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |<br>|       24 |      3 | p806                                   |<br>|       23 |      5 | 诺基亚n96                              |<br>|       22 |      3 | 多普达touch hd                         |<br>|       21 |      3 | 金立 a30                               |<br>|       20 |      3 | 三星bc01                               |<br>|       19 |      3 | 三星sgh-f258                           |<br>|       18 |      4 | 夏新t5                                 |<br>|       17 |      3 | 夏新n7                                 |<br>|       16 |      2 | 恒基伟业g101                           |<br>|       15 |      3 | 摩托罗拉a810                           |<br>|       14 |      4 | 诺基亚5800xm                           |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |<br>|       12 |      3 | 摩托罗拉a810                           |<br>|       11 |      3 | 索爱c702c                              |<br>|       10 |      3 | 索爱c702c                              |<br>|        9 |      3 | 诺基亚e66                              |<br>|        8 |      3 | 飞利浦9@9v                             |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |<br>|        4 |      8 | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 诺基亚原装5800耳机                     |<br>|        1 |      4 | kd876                                  |<br>+———-+——–+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select cat_id,goods_name from (select goods_id,cat_id ,goods_name from goods order by goods_id desc) as temp group by cat_id;<br>+——–+——————————–+<br>| cat_id | goods_name                     |<br>+——–+——————————–+<br>|      4 | kd876                          |<br>|      8 | 诺基亚n85原装充电器            |<br>|     11 | 索爱原装m2卡读卡器             |<br>|      3 | 飞利浦9@9v                     |<br>|      2 | 恒基伟业g101                   |<br>|      5 | 诺基亚n96                      |<br>|     13 | 小灵通/固话50元充值卡          |<br>|     15 | 联通100元充值卡                |<br>|     14 | 移动100元充值卡                |<br>+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select temp.cat_id,goods_name from (select goods_id,cat_id ,goods_name from goods order by goods_id desc) as temp group by temp.cat_id;<br>+——–+——————————–+<br>| cat_id | goods_name                     |<br>+——–+——————————–+<br>|      4 | kd876                          |<br>|      8 | 诺基亚n85原装充电器            |<br>|     11 | 索爱原装m2卡读卡器             |<br>|      3 | 飞利浦9@9v                     |<br>|      2 | 恒基伟业g101                   |<br>|      5 | 诺基亚n96                      |<br>|     13 | 小灵通/固话50元充值卡          |<br>|     15 | 联通100元充值卡                |<br>|     14 | 移动100元充值卡                |<br>+——–+——————————–+<br>9 rows in set (0.05 sec)</p><p>mysql> #子查询<br>mysql> #查询商品id最大的商品不用排序<br>mysql> select goods_id ,cat_id ,goods_name from goods where goods_id=(select max(goods_id) from goods);<br>+———-+——–+————–+<br>| goods_id | cat_id | goods_name   |<br>+———-+——–+————–+<br>|       32 |      3 | 诺基亚n85    |<br>+———-+——–+————–+<br>1 row in set (0.05 sec)</p><p>mysql> #如果where型子查询 即where 列=(内层sql 返回的是必是单行单列单个值,) 若where 列 in(内层sql)只能是单列多行<br>mysql> #from型子查询,内部查询的结果当作外部查询的表s<br>mysql> select goods_id ,cat_id ,goods_name from (select goods_id ,cat_id ,goods_name from goods order by cat_id asc,goods_id desc) as temp group by cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id ,cat_id ,goods_name from goods order by cat_id asc,goods_id desc;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       16 |      2 | 恒基伟业g101                           |<br>|       32 |      3 | 诺基亚n85                              |<br>|       31 |      3 | 摩托罗拉e8                             |<br>|       24 |      3 | p806                                   |<br>|       22 |      3 | 多普达touch hd                         |<br>|       21 |      3 | 金立 a30                               |<br>|       20 |      3 | 三星bc01                               |<br>|       19 |      3 | 三星sgh-f258                           |<br>|       17 |      3 | 夏新n7                                 |<br>|       15 |      3 | 摩托罗拉a810                           |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |<br>|       12 |      3 | 摩托罗拉a810                           |<br>|       11 |      3 | 索爱c702c                              |<br>|       10 |      3 | 索爱c702c                              |<br>|        9 |      3 | 诺基亚e66                              |<br>|        8 |      3 | 飞利浦9@9v                             |<br>|       18 |      4 | 夏新t5                                 |<br>|       14 |      4 | 诺基亚5800xm                           |<br>|        1 |      4 | kd876                                  |<br>|       23 |      5 | 诺基亚n96                              |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        4 |      8 | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 诺基亚原装5800耳机                     |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       29 |     14 | 移动100元充值卡                        |<br>|       28 |     15 | 联通50元充值卡                         |<br>|       27 |     15 | 联通100元充值卡                        |<br>+———-+——–+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select * from (select goods_id ,cat_id ,goods_name from goods order by cat_id asc,goods_id desc) as temp group by cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select * from (select goods_id ,cat_id ,goods_name from goods order by cat_id asc,goods_id desc) as temp group by temp.cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name from (select goods_id as goods_id ,cat_id as cat_id ,goods_name as goods_name from goods order by cat_id asc,goods_id desc) as temp group by temp.cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id, cat_id, goods_name from (select goods_id, goods_name, cat_id from goods order by cat_id asc, goods_id desc) as tmp group by cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> exit<br>mysql> show databases;<br>+——————–+<br>| Database           |<br>+——————–+<br>| bookstore          |<br>| clouddb01          |<br>| clouddb02          |<br>| clouddb03          |<br>| information_schema |<br>| mydb               |<br>| mysql              |<br>| performance_schema |<br>| shop               |<br>| ssm_crud           |<br>| struts             |<br>| student            |<br>| sys                |<br>| test               |<br>| test01             |<br>+——————–+<br>15 rows in set (0.35 sec)</p><p>mysql> use test01;<br>Database changed<br>mysql> select goods_id,cat_id,goods_name from goods order by goods_id desc ,cat_id asc;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       32 |      3 | 诺基亚n85                              |<br>|       31 |      3 | 摩托罗拉e8                             |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       29 |     14 | 移动100元充值卡                        |<br>|       28 |     15 | 联通50元充值卡                         |<br>|       27 |     15 | 联通100元充值卡                        |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |<br>|       24 |      3 | p806                                   |<br>|       23 |      5 | 诺基亚n96                              |<br>|       22 |      3 | 多普达touch hd                         |<br>|       21 |      3 | 金立 a30                               |<br>|       20 |      3 | 三星bc01                               |<br>|       19 |      3 | 三星sgh-f258                           |<br>|       18 |      4 | 夏新t5                                 |<br>|       17 |      3 | 夏新n7                                 |<br>|       16 |      2 | 恒基伟业g101                           |<br>|       15 |      3 | 摩托罗拉a810                           |<br>|       14 |      4 | 诺基亚5800xm                           |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |<br>|       12 |      3 | 摩托罗拉a810                           |<br>|       11 |      3 | 索爱c702c                              |<br>|       10 |      3 | 索爱c702c                              |<br>|        9 |      3 | 诺基亚e66                              |<br>|        8 |      3 | 飞利浦9@9v                             |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |<br>|        4 |      8 | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 诺基亚原装5800耳机                     |<br>|        1 |      4 | kd876                                  |<br>+———-+——–+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name from  goods order by cat_id  desc ;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       27 |     15 | 联通100元充值卡                        |<br>|       28 |     15 | 联通50元充值卡                         |<br>|       29 |     14 | 移动100元充值卡                        |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|        4 |      8 | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 诺基亚原装5800耳机                     |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|       23 |      5 | 诺基亚n96                              |<br>|        1 |      4 | kd876                                  |<br>|       14 |      4 | 诺基亚5800xm                           |<br>|       18 |      4 | 夏新t5                                 |<br>|        8 |      3 | 飞利浦9@9v                             |<br>|        9 |      3 | 诺基亚e66                              |<br>|       10 |      3 | 索爱c702c                              |<br>|       11 |      3 | 索爱c702c                              |<br>|       12 |      3 | 摩托罗拉a810                           |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |<br>|       15 |      3 | 摩托罗拉a810                           |<br>|       17 |      3 | 夏新n7                                 |<br>|       19 |      3 | 三星sgh-f258                           |<br>|       20 |      3 | 三星bc01                               |<br>|       21 |      3 | 金立 a30                               |<br>|       22 |      3 | 多普达touch hd                         |<br>|       24 |      3 | p806                                   |<br>|       31 |      3 | 摩托罗拉e8                             |<br>|       32 |      3 | 诺基亚n85                              |<br>|       16 |      2 | 恒基伟业g101                           |<br>+———-+——–+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name from(select goods_id,cat_id,goods_name from goods order by cat_id,goods_id desc) as tmp;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       16 |      2 | 恒基伟业g101                           |<br>|       32 |      3 | 诺基亚n85                              |<br>|       31 |      3 | 摩托罗拉e8                             |<br>|       24 |      3 | p806                                   |<br>|       22 |      3 | 多普达touch hd                         |<br>|       21 |      3 | 金立 a30                               |<br>|       20 |      3 | 三星bc01                               |<br>|       19 |      3 | 三星sgh-f258                           |<br>|       17 |      3 | 夏新n7                                 |<br>|       15 |      3 | 摩托罗拉a810                           |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |<br>|       12 |      3 | 摩托罗拉a810                           |<br>|       11 |      3 | 索爱c702c                              |<br>|       10 |      3 | 索爱c702c                              |<br>|        9 |      3 | 诺基亚e66                              |<br>|        8 |      3 | 飞利浦9@9v                             |<br>|       18 |      4 | 夏新t5                                 |<br>|       14 |      4 | 诺基亚5800xm                           |<br>|        1 |      4 | kd876                                  |<br>|       23 |      5 | 诺基亚n96                              |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        4 |      8 | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 诺基亚原装5800耳机                     |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       29 |     14 | 移动100元充值卡                        |<br>|       28 |     15 | 联通50元充值卡                         |<br>|       27 |     15 | 联通100元充值卡                        |<br>+———-+——–+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name from(select goods_id,cat_id,goods_name from goods order by cat_id,goods_id desc) as tmp group by cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|        1 |      4 | kd876                          |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|       16 |      2 | 恒基伟业g101                   |<br>|       23 |      5 | 诺基亚n96                      |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       27 |     15 | 联通100元充值卡                |<br>|       29 |     14 | 移动100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> desc goods;<br>+————–+————————+——+—–+———+—————-+<br>| Field        | Type                   | Null | Key | Default | Extra          |<br>+————–+————————+——+—–+———+—————-+<br>| goods_id     | mediumint(8) unsigned  | NO   | PRI | NULL    | auto_increment |<br>| goods_name   | varchar(120)           | NO   |     |         |                |<br>| cat_id       | smallint(5) unsigned   | NO   |     | 0       |                |<br>| brand_id     | smallint(5) unsigned   | NO   |     | 0       |                |<br>| goods_sn     | char(15)               | NO   |     |         |                |<br>| goods_number | smallint(5) unsigned   | NO   |     | 0       |                |<br>| shop_price   | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| market_price | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| click_count  | int(10) unsigned       | NO   |     | 0       |                |<br>+————–+————————+——+—–+———+—————-+<br>9 rows in set (0.18 sec)</p><p>mysql> alter table goods add index cat(cat_id);<br>Query OK, 31 rows affected (1.05 sec)<br>Records: 31  Duplicates: 0  Warnings: 0</p><p>mysql> select goods_id,cat_id,goods_name from(select goods_id,cat_id,goods_name from goods order by cat_id,goods_id desc) as tmp group by cat_id;<br>+———-+——–+——————————–+<br>| goods_id | cat_id | goods_name                     |<br>+———-+——–+——————————–+<br>|       16 |      2 | 恒基伟业g101                   |<br>|        8 |      3 | 飞利浦9@9v                     |<br>|        1 |      4 | kd876                          |<br>|       23 |      5 | 诺基亚n96                      |<br>|        4 |      8 | 诺基亚n85原装充电器            |<br>|        5 |     11 | 索爱原装m2卡读卡器             |<br>|       25 |     13 | 小灵通/固话50元充值卡          |<br>|       29 |     14 | 移动100元充值卡                |<br>|       27 |     15 | 联通100元充值卡                |<br>+———-+——–+——————————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name from(select goods_id,cat_id,goods_name from goods order by cat_id,goods_id desc limit 1000) as tmp group by cat_id;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       16 |      2 | 恒基伟业g101                           |<br>|       32 |      3 | 诺基亚n85                              |<br>|       18 |      4 | 夏新t5                                 |<br>|       23 |      5 | 诺基亚n96                              |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       28 |     15 | 联通50元充值卡                         |<br>+———-+——–+—————————————-+<br>9 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name from goods where goods_id in(select max(goods_id) from goods group by cat_id) group by cat_id;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       16 |      2 | 恒基伟业g101                           |<br>|       32 |      3 | 诺基亚n85                              |<br>|       18 |      4 | 夏新t5                                 |<br>|       23 |      5 | 诺基亚n96                              |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       28 |     15 | 联通50元充值卡                         |<br>+———-+——–+—————————————-+<br>9 rows in set (0.04 sec)</p><p>mysql> #exits子查询<br>mysql> #from子查询的排序要加limit<br>mysql> #exists 存在,exists 子查询<br>mysql> #查出有商品的栏目<br>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| girl             |<br>| goods            |<br>| m                |<br>| mian             |<br>| result           |<br>| t                |<br>| user             |<br>+——————+<br>11 rows in set (0.06 sec)</p><p>mysql> desc category;<br>+———–+———————-+——+—–+———+—————-+<br>| Field     | Type                 | Null | Key | Default | Extra          |<br>+———–+———————-+——+—–+———+—————-+<br>| cat_id    | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |<br>| cat_name  | varchar(90)          | NO   |     |         |                |<br>| parent_id | smallint(5) unsigned | YES  |     | NULL    |                |<br>+———–+———————-+——+—–+———+—————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select * from  category;<br>+——–+—————————+———–+<br>| cat_id | cat_name                  | parent_id |<br>+——–+—————————+———–+<br>|      1 | 手机类型                  |         0 |<br>|      2 | CDMA手机                  |         1 |<br>|      3 | GSM手机                   |         1 |<br>|      4 | 3G手机                    |         1 |<br>|      5 | 双模手机                  |         1 |<br>|      6 | 手机配件                  |         0 |<br>|      7 | 充电器                    |         6 |<br>|      8 | 耳机                      |         6 |<br>|      9 | 电池                      |         6 |<br>|     11 | 读卡器和内存卡            |         6 |<br>|     12 | 充值卡                    |         0 |<br>|     13 | 小灵通/固话充值卡         |        12 |<br>|     14 | 移动手机充值卡            |        12 |<br>|     15 | 联通手机充值卡            |        12 |<br>+——–+—————————+———–+<br>14 rows in set (0.07 sec)</p><p>mysql> desc goods;<br>+————–+————————+——+—–+———+—————-+<br>| Field        | Type                   | Null | Key | Default | Extra          |<br>+————–+————————+——+—–+———+—————-+<br>| goods_id     | mediumint(8) unsigned  | NO   | PRI | NULL    | auto_increment |<br>| goods_name   | varchar(120)           | NO   |     |         |                |<br>| cat_id       | smallint(5) unsigned   | NO   | MUL | 0       |                |<br>| brand_id     | smallint(5) unsigned   | NO   |     | 0       |                |<br>| goods_sn     | char(15)               | NO   |     |         |                |<br>| goods_number | smallint(5) unsigned   | NO   |     | 0       |                |<br>| shop_price   | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| market_price | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| click_count  | int(10) unsigned       | NO   |     | 0       |                |<br>+————–+————————+——+—–+———+—————-+<br>9 rows in set (0.00 sec)</p><p>mysql> show index from goods;<br>+——-+————+———-+————–+————-+———–+————-+———-+——–+——+————+———+—————+———+<br>| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible |<br>+——-+————+———-+————–+————-+———–+————-+———-+——–+——+————+———+—————+———+<br>| goods |          0 | PRIMARY  |            1 | goods_id    | A         |          31 |     NULL |   NULL |      | BTREE      |         |               | YES     |<br>| goods |          1 | cat      |            1 | cat_id      | A         |        NULL |     NULL |   NULL |      | BTREE      |         |               | YES     |<br>+——-+————+———-+————–+————-+———–+————-+———-+——–+——+————+———+—————+———+<br>2 rows in set (0.17 sec)</p><p>mysql> drop index cat on goods;<br>Query OK, 31 rows affected (0.55 sec)<br>Records: 31  Duplicates: 0  Warnings: 0</p><p>mysql> show index from goods;<br>+——-+————+———-+————–+————-+———–+————-+———-+——–+——+————+———+—————+———+<br>| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible |<br>+——-+————+———-+————–+————-+———–+————-+———-+——–+——+————+———+—————+———+<br>| goods |          0 | PRIMARY  |            1 | goods_id    | A         |          31 |     NULL |   NULL |      | BTREE      |         |               | YES     |<br>+——-+————+———-+————–+————-+———–+————-+———-+——–+——+————+———+—————+———+<br>1 row in set (0.00 sec)</p><p>mysql> desc goods;<br>+————–+————————+——+—–+———+—————-+<br>| Field        | Type                   | Null | Key | Default | Extra          |<br>+————–+————————+——+—–+———+—————-+<br>| goods_id     | mediumint(8) unsigned  | NO   | PRI | NULL    | auto_increment |<br>| goods_name   | varchar(120)           | NO   |     |         |                |<br>| cat_id       | smallint(5) unsigned   | NO   |     | 0       |                |<br>| brand_id     | smallint(5) unsigned   | NO   |     | 0       |                |<br>| goods_sn     | char(15)               | NO   |     |         |                |<br>| goods_number | smallint(5) unsigned   | NO   |     | 0       |                |<br>| shop_price   | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| market_price | decimal(10,2) unsigned | NO   |     | 0.00    |                |<br>| click_count  | int(10) unsigned       | NO   |     | 0       |                |<br>+————–+————————+——+—–+———+—————-+<br>9 rows in set (0.00 sec)</p><p>mysql> desc category;<br>+———–+———————-+——+—–+———+—————-+<br>| Field     | Type                 | Null | Key | Default | Extra          |<br>+———–+———————-+——+—–+———+—————-+<br>| cat_id    | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |<br>| cat_name  | varchar(90)          | NO   |     |         |                |<br>| parent_id | smallint(5) unsigned | YES  |     | NULL    |                |<br>+———–+———————-+——+—–+———+—————-+<br>3 rows in set (0.03 sec)</p><p>mysql> select cat_name from category;<br>+—————————+<br>| cat_name                  |<br>+—————————+<br>| 手机类型                  |<br>| CDMA手机                  |<br>| GSM手机                   |<br>| 3G手机                    |<br>| 双模手机                  |<br>| 手机配件                  |<br>| 充电器                    |<br>| 耳机                      |<br>| 电池                      |<br>| 读卡器和内存卡            |<br>| 充值卡                    |<br>| 小灵通/固话充值卡         |<br>| 移动手机充值卡            |<br>| 联通手机充值卡            |<br>+—————————+<br>14 rows in set (0.00 sec)</p><p>mysql> select cat_id,cat_name from category where exists(select * from goods where category.cat_id=goods_id);<br>+——–+—————————+<br>| cat_id | cat_name                  |<br>+——–+—————————+<br>|      1 | 手机类型                  |<br>|      3 | GSM手机                   |<br>|      4 | 3G手机                    |<br>|      5 | 双模手机                  |<br>|      6 | 手机配件                  |<br>|      7 | 充电器                    |<br>|      8 | 耳机                      |<br>|      9 | 电池                      |<br>|     11 | 读卡器和内存卡            |<br>|     12 | 充值卡                    |<br>|     13 | 小灵通/固话充值卡         |<br>|     14 | 移动手机充值卡            |<br>|     15 | 联通手机充值卡            |<br>+——–+—————————+<br>13 rows in set (0.00 sec)</p><p>mysql> select cat_id,cat_name from category where exists(select * from goods where category.cat_id=goods.cat_id);<br>+——–+—————————+<br>| cat_id | cat_name                  |<br>+——–+—————————+<br>|      2 | CDMA手机                  |<br>|      3 | GSM手机                   |<br>|      4 | 3G手机                    |<br>|      5 | 双模手机                  |<br>|      8 | 耳机                      |<br>|     11 | 读卡器和内存卡            |<br>|     13 | 小灵通/固话充值卡         |<br>|     14 | 移动手机充值卡            |<br>|     15 | 联通手机充值卡            |<br>+——–+—————————+<br>9 rows in set (0.00 sec)</p><p>mysql> #为什么建表时加not null或default 0  ,不想出现null值<br>mysql> #null判断只能用 is null 或is not nul<br>mysql><br>mysql> #效率不高,影响索引效率<br>mysql> select 100000<em>232344242<br>    -> ;<br>+——————+<br>| 100000</em>232344242 |<br>+——————+<br>|   23234424200000 |<br>+——————+<br>1 row in set (0.00 sec)</p><p>mysql> #左连接的语法<br>mysql> a表不动,b表在右边滑动<br>    -> #<br>    -> \n<br>ERROR:<br>Unknown command ‘\n’.<br>    -> ;<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘a表不动,b表在右边滑动</p><p>\n’ at line 1<br>mysql> #a表与b表通过什么关联行<br>mysql> # a 表left join b on 条件 条件为真,则b表对应的行取出<br>mysql> # a left join b on<br>mysql> #将a left join b on 条件 设为c 表<br>mysql> #可以对c表进行查询,可以查询a和b的列<br>mysql> select  goods_id,cat_id,cat_name from goods left join category on goods.cat_id=category.cat_id;<br>ERROR 1052 (23000): Column ‘cat_id’ in field list is ambiguous<br>mysql> select  goods_id,goods.cat_id,cat_name from goods left join category on goods.cat_id=category.cat_id;<br>+———-+——–+—————————+<br>| goods_id | cat_id | cat_name                  |<br>+———-+——–+—————————+<br>|        1 |      4 | 3G手机                    |<br>|        4 |      8 | 耳机                      |<br>|        3 |      8 | 耳机                      |<br>|        5 |     11 | 读卡器和内存卡            |<br>|        6 |     11 | 读卡器和内存卡            |<br>|        7 |      8 | 耳机                      |<br>|        8 |      3 | GSM手机                   |<br>|        9 |      3 | GSM手机                   |<br>|       10 |      3 | GSM手机                   |<br>|       11 |      3 | GSM手机                   |<br>|       12 |      3 | GSM手机                   |<br>|       13 |      3 | GSM手机                   |<br>|       14 |      4 | 3G手机                    |<br>|       15 |      3 | GSM手机                   |<br>|       16 |      2 | CDMA手机                  |<br>|       17 |      3 | GSM手机                   |<br>|       18 |      4 | 3G手机                    |<br>|       19 |      3 | GSM手机                   |<br>|       20 |      3 | GSM手机                   |<br>|       21 |      3 | GSM手机                   |<br>|       22 |      3 | GSM手机                   |<br>|       23 |      5 | 双模手机                  |<br>|       24 |      3 | GSM手机                   |<br>|       25 |     13 | 小灵通/固话充值卡         |<br>|       26 |     13 | 小灵通/固话充值卡         |<br>|       27 |     15 | 联通手机充值卡            |<br>|       28 |     15 | 联通手机充值卡            |<br>|       29 |     14 | 移动手机充值卡            |<br>|       30 |     14 | 移动手机充值卡            |<br>|       31 |      3 | GSM手机                   |<br>|       32 |      3 | GSM手机                   |<br>+———-+——–+—————————+<br>31 rows in set (0.00 sec)</p><p>mysql> select  goods_id,goods.cat_id,cat_name,goods_name from goods left join category on goods.cat_id=category.cat_id;<br>+———-+——–+—————————+—————————————-+<br>| goods_id | cat_id | cat_name                  | goods_name                             |<br>+———-+——–+—————————+—————————————-+<br>|        1 |      4 | 3G手机                    | kd876                                  |<br>|        4 |      8 | 耳机                      | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 耳机                      | 诺基亚原装5800耳机                     |<br>|        5 |     11 | 读卡器和内存卡            | 索爱原装m2卡读卡器                     |<br>|        6 |     11 | 读卡器和内存卡            | 胜创kingmax内存卡                      |<br>|        7 |      8 | 耳机                      | 诺基亚n85原装立体声耳机hs-82           |<br>|        8 |      3 | GSM手机                   | 飞利浦9@9v                             |<br>|        9 |      3 | GSM手机                   | 诺基亚e66                              |<br>|       10 |      3 | GSM手机                   | 索爱c702c                              |<br>|       11 |      3 | GSM手机                   | 索爱c702c                              |<br>|       12 |      3 | GSM手机                   | 摩托罗拉a810                           |<br>|       13 |      3 | GSM手机                   | 诺基亚5320 xpressmusic                 |<br>|       14 |      4 | 3G手机                    | 诺基亚5800xm                           |<br>|       15 |      3 | GSM手机                   | 摩托罗拉a810                           |<br>|       16 |      2 | CDMA手机                  | 恒基伟业g101                           |<br>|       17 |      3 | GSM手机                   | 夏新n7                                 |<br>|       18 |      4 | 3G手机                    | 夏新t5                                 |<br>|       19 |      3 | GSM手机                   | 三星sgh-f258                           |<br>|       20 |      3 | GSM手机                   | 三星bc01                               |<br>|       21 |      3 | GSM手机                   | 金立 a30                               |<br>|       22 |      3 | GSM手机                   | 多普达touch hd                         |<br>|       23 |      5 | 双模手机                  | 诺基亚n96                              |<br>|       24 |      3 | GSM手机                   | p806                                   |<br>|       25 |     13 | 小灵通/固话充值卡         | 小灵通/固话50元充值卡                  |<br>|       26 |     13 | 小灵通/固话充值卡         | 小灵通/固话20元充值卡                  |<br>|       27 |     15 | 联通手机充值卡            | 联通100元充值卡                        |<br>|       28 |     15 | 联通手机充值卡            | 联通50元充值卡                         |<br>|       29 |     14 | 移动手机充值卡            | 移动100元充值卡                        |<br>|       30 |     14 | 移动手机充值卡            | 移动20元充值卡                         |<br>|       31 |      3 | GSM手机                   | 摩托罗拉e8                             |<br>|       32 |      3 | GSM手机                   | 诺基亚n85                              |<br>+———-+——–+—————————+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> select  goods_id,goods.cat_id,goods_name,cat_name from goods left join category on goods.cat_id=category.cat_id;<br>+———-+——–+—————————————-+—————————+<br>| goods_id | cat_id | goods_name                             | cat_name                  |<br>+———-+——–+—————————————-+—————————+<br>|        1 |      4 | kd876                                  | 3G手机                    |<br>|        4 |      8 | 诺基亚n85原装充电器                    | 耳机                      |<br>|        3 |      8 | 诺基亚原装5800耳机                     | 耳机                      |<br>|        5 |     11 | 索爱原装m2卡读卡器                     | 读卡器和内存卡            |<br>|        6 |     11 | 胜创kingmax内存卡                      | 读卡器和内存卡            |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           | 耳机                      |<br>|        8 |      3 | 飞利浦9@9v                             | GSM手机                   |<br>|        9 |      3 | 诺基亚e66                              | GSM手机                   |<br>|       10 |      3 | 索爱c702c                              | GSM手机                   |<br>|       11 |      3 | 索爱c702c                              | GSM手机                   |<br>|       12 |      3 | 摩托罗拉a810                           | GSM手机                   |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 | GSM手机                   |<br>|       14 |      4 | 诺基亚5800xm                           | 3G手机                    |<br>|       15 |      3 | 摩托罗拉a810                           | GSM手机                   |<br>|       16 |      2 | 恒基伟业g101                           | CDMA手机                  |<br>|       17 |      3 | 夏新n7                                 | GSM手机                   |<br>|       18 |      4 | 夏新t5                                 | 3G手机                    |<br>|       19 |      3 | 三星sgh-f258                           | GSM手机                   |<br>|       20 |      3 | 三星bc01                               | GSM手机                   |<br>|       21 |      3 | 金立 a30                               | GSM手机                   |<br>|       22 |      3 | 多普达touch hd                         | GSM手机                   |<br>|       23 |      5 | 诺基亚n96                              | 双模手机                  |<br>|       24 |      3 | p806                                   | GSM手机                   |<br>|       25 |     13 | 小灵通/固话50元充值卡                  | 小灵通/固话充值卡         |<br>|       26 |     13 | 小灵通/固话20元充值卡                  | 小灵通/固话充值卡         |<br>|       27 |     15 | 联通100元充值卡                        | 联通手机充值卡            |<br>|       28 |     15 | 联通50元充值卡                         | 联通手机充值卡            |<br>|       29 |     14 | 移动100元充值卡                        | 移动手机充值卡            |<br>|       30 |     14 | 移动20元充值卡                         | 移动手机充值卡            |<br>|       31 |      3 | 摩托罗拉e8                             | GSM手机                   |<br>|       32 |      3 | 诺基亚n85                              | GSM手机                   |<br>+———-+——–+—————————————-+—————————+<br>31 rows in set (0.00 sec)</p><p>mysql> #取出第四个栏目的商品以及商品的栏目名称<br>mysql> select  goods_id,goods.cat_id,goods_name,cat_name from goods left join category on goods.cat_id=category.cat_id where goods.cat_id=4;<br>+———-+——–+—————–+———-+<br>| goods_id | cat_id | goods_name      | cat_name |<br>+———-+——–+—————–+———-+<br>|        1 |      4 | kd876           | 3G手机   |<br>|       14 |      4 | 诺基亚5800xm    | 3G手机   |<br>|       18 |      4 | 夏新t5          | 3G手机   |<br>+———-+——–+—————–+———-+<br>3 rows in set (0.07 sec)</p><p>mysql> #左右连接,左连接即左表不动,<br>mysql> #a left join b 并不是说 a 一定是在b的左边<br>mysql> #左右连接可以互换, a left join b =b right join a<br>mysql> # 内链接 特点 所有有配偶的男生/女生 走到舞台上来, 其 左表和右表不匹配的不能出现<br>mysql> # 集合的角度看,内链接是左右连接的交集;<br>mysql> # 外连接,求的是并集,但是在mysql中不支持<br>mysql> #左连接<br>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| girl             |<br>| goods            |<br>| m                |<br>| mian             |<br>| result           |<br>| t                |<br>| user             |<br>+——————+<br>11 rows in set (0.60 sec)</p><p>mysql> select * from t;<br>+——+————–+<br>| tid  | tname        |<br>+——+————–+<br>|    1 | 国安         |<br>|    2 | 申花         |<br>|    3 | 布尔联队     |<br>+——+————–+<br>3 rows in set (0.40 sec)</p><p>mysql> select * from m;<br>+——+——+——+——+————+<br>| mid  | hid  | gid  | mres | matime     |<br>+——+——+——+——+————+<br>|    1 |    1 |    2 | 2:0  | 2006-05-21 |<br>|    2 |    2 |    3 | 1:2  | 2006-06-21 |<br>|    3 |    3 |    1 | 2:5  | 2006-06-25 |<br>|    4 |    2 |    1 | 3:2  | 2006-07-21 |<br>+——+——+——+——+————+<br>4 rows in set (0.10 sec)</p><p>mysql> select m.mid,m.hid,t.tname,m.gid,t.tname from m left join t on m.hid=t.tid;<br>+——+——+————–+——+————–+<br>| mid  | hid  | tname        | gid  | tname        |<br>+——+——+————–+——+————–+<br>|    1 |    1 | 国安         |    2 | 国安         |<br>|    2 |    2 | 申花         |    3 | 申花         |<br>|    4 |    2 | 申花         |    1 | 申花         |<br>|    3 |    3 | 布尔联队     |    1 | 布尔联队     |<br>+——+——+————–+——+————–+<br>4 rows in set (0.00 sec)</p><p>mysql> select m.mid,m.hid,t.tname,m.gid from m left join t on m.hid=t.tid;<br>+——+——+————–+——+<br>| mid  | hid  | tname        | gid  |<br>+——+——+————–+——+<br>|    1 |    1 | 国安         |    2 |<br>|    2 |    2 | 申花         |    3 |<br>|    4 |    2 | 申花         |    1 |<br>|    3 |    3 | 布尔联队     |    1 |<br>+——+——+————–+——+<br>4 rows in set (0.00 sec)</p><p>mysql> select tem.mid,tem.hid,t.tname,tem.gid,t.tname from (select m.mid,m.hid,t.tname,m.gid from m left join t on m.hid=t.tid) as tem  left join t on t.tid=tem.gid;<br>+——+——+————–+——+————–+<br>| mid  | hid  | tname        | gid  | tname        |<br>+——+——+————–+——+————–+<br>|    4 |    2 | 国安         |    1 | 国安         |<br>|    3 |    3 | 国安         |    1 | 国安         |<br>|    1 |    1 | 申花         |    2 | 申花         |<br>|    2 |    2 | 布尔联队     |    3 | 布尔联队     |<br>+——+——+————–+——+————–+<br>4 rows in set (0.00 sec)</p><p>mysql> select tem.mid,tem.hid,t.tname,tem.gid,t.tname from (select m.mid,m.hid,t.tname,m.gid from m left join t on m.hid=t.tid) as tem  left join t on t.tid=tem.gid order by tem.mid asc;<br>+——+——+————–+——+————–+<br>| mid  | hid  | tname        | gid  | tname        |<br>+——+——+————–+——+————–+<br>|    1 |    1 | 申花         |    2 | 申花         |<br>|    2 |    2 | 布尔联队     |    3 | 布尔联队     |<br>|    3 |    3 | 国安         |    1 | 国安         |<br>|    4 |    2 | 国安         |    1 | 国安         |<br>+——+——+————–+——+————–+<br>4 rows in set (0.00 sec)</p><p>mysql> select tem.mid,tem.hid,t.tname,tem.gid,t.tname from (select m.mid,m.hid,t.tname,m.gid from m left join t on m.hid=t.tid) as tem  left join t on tem.gid=t.tid order by tem.mid asc;<br>+——+——+————–+——+————–+<br>| mid  | hid  | tname        | gid  | tname        |<br>+——+——+————–+——+————–+<br>|    1 |    1 | 申花         |    2 | 申花         |<br>|    2 |    2 | 布尔联队     |    3 | 布尔联队     |<br>|    3 |    3 | 国安         |    1 | 国安         |<br>|    4 |    2 | 国安         |    1 | 国安         |<br>+——+——+————–+——+————–+<br>4 rows in set (0.00 sec)</p><p>mysql> select tem.mid,tem.hid,tem.tname,tem.gid,tem.tname from (select m.mid,m.hid,t.tname,m.gid from m left join t on m.hid=t.tid) as tem  left join t on tem.gid=t.tid order by tem.mid asc;<br>+——+——+————–+——+————–+<br>| mid  | hid  | tname        | gid  | tname        |<br>+——+——+————–+——+————–+<br>|    1 |    1 | 国安         |    2 | 国安         |<br>|    2 |    2 | 申花         |    3 | 申花         |<br>|    3 |    3 | 布尔联队     |    1 | 布尔联队     |<br>|    4 |    2 | 申花         |    1 | 申花         |<br>+——+——+————–+——+————–+<br>4 rows in set (0.00 sec)</p><p>mysql> select m.* from m left join t on m.hid=t.tid;<br>+——+——+——+——+————+<br>| mid  | hid  | gid  | mres | matime     |<br>+——+——+——+——+————+<br>|    1 |    1 |    2 | 2:0  | 2006-05-21 |<br>|    2 |    2 |    3 | 1:2  | 2006-06-21 |<br>|    4 |    2 |    1 | 3:2  | 2006-07-21 |<br>|    3 |    3 |    1 | 2:5  | 2006-06-25 |<br>+——+——+——+——+————+<br>4 rows in set (0.00 sec)</p><p>mysql> select m.*,t.tname from m left join t on m.hid=t.tid;<br>+——+——+——+——+————+————–+<br>| mid  | hid  | gid  | mres | matime     | tname        |<br>+——+——+——+——+————+————–+<br>|    1 |    1 |    2 | 2:0  | 2006-05-21 | 国安         |<br>|    2 |    2 |    3 | 1:2  | 2006-06-21 | 申花         |<br>|    4 |    2 |    1 | 3:2  | 2006-07-21 | 申花         |<br>|    3 |    3 |    1 | 2:5  | 2006-06-25 | 布尔联队     |<br>+——+——+——+——+————+————–+<br>4 rows in set (0.00 sec)</p><p>mysql> select tem.<em>, t.tname  from (select m.</em>,t.tname from m left join t on m.hid=t.tid) as tem left join t on tem.gid=t.tid;<br>+——+——+——+——+————+————–+————–+<br>| mid  | hid  | gid  | mres | matime     | tname        | tname        |<br>+——+——+——+——+————+————–+————–+<br>|    4 |    2 |    1 | 3:2  | 2006-07-21 | 申花         | 国安         |<br>|    3 |    3 |    1 | 2:5  | 2006-06-25 | 布尔联队     | 国安         |<br>|    1 |    1 |    2 | 2:0  | 2006-05-21 | 国安         | 申花         |<br>|    2 |    2 |    3 | 1:2  | 2006-06-21 | 申花         | 布尔联队     |<br>+——+——+——+——+————+————–+————–+<br>4 rows in set (0.00 sec)</p><p>mysql> select * from t;<br>+——+————–+<br>| tid  | tname        |<br>+——+————–+<br>|    1 | 国安         |<br>|    2 | 申花         |<br>|    3 | 布尔联队     |<br>+——+————–+<br>3 rows in set (0.00 sec)</p><p>mysql> select tem.mid,tem.hid,tem.tname,tem.gid,t.tname,tem.mres,tem.matime  from (select m.mid ,m.hid,t.tname,m.gid,m.mres,m.matime from m left join t on m.hid=t.tid) as tem left join t on tem.gid=t.tid;<br>+——+——+————–+——+————–+——+————+<br>| mid  | hid  | tname        | gid  | tname        | mres | matime     |<br>+——+——+————–+——+————–+——+————+<br>|    4 |    2 | 申花         |    1 | 国安         | 3:2  | 2006-07-21 |<br>|    3 |    3 | 布尔联队     |    1 | 国安         | 2:5  | 2006-06-25 |<br>|    1 |    1 | 国安         |    2 | 申花         | 2:0  | 2006-05-21 |<br>|    2 |    2 | 申花         |    3 | 布尔联队     | 1:2  | 2006-06-21 |<br>+——+——+————–+——+————–+——+————+<br>4 rows in set (0.00 sec)</p><p>mysql> select tem.mid,tem.hid,tem.tname,tem.gid,t.tname,tem.mres,tem.matime  from (select m.mid ,m.hid,t.tname,m.gid,m.mres,m.matime from m left join t on m.hid=t.tid) as tem left join t on tem.gid=t.tid order by tem.mid;<br>+——+——+————–+——+————–+——+————+<br>| mid  | hid  | tname        | gid  | tname        | mres | matime     |<br>+——+——+————–+——+————–+——+————+<br>|    1 |    1 | 国安         |    2 | 申花         | 2:0  | 2006-05-21 |<br>|    2 |    2 | 申花         |    3 | 布尔联队     | 1:2  | 2006-06-21 |<br>|    3 |    3 | 布尔联队     |    1 | 国安         | 2:5  | 2006-06-25 |<br>|    4 |    2 | 申花         |    1 | 国安         | 3:2  | 2006-07-21 |<br>+——+——+————–+——+————–+——+————+<br>4 rows in set (0.00 sec)</p><p>mysql> select * from m;<br>+——+——+——+——+————+<br>| mid  | hid  | gid  | mres | matime     |<br>+——+——+——+——+————+<br>|    1 |    1 |    2 | 2:0  | 2006-05-21 |<br>|    2 |    2 |    3 | 1:2  | 2006-06-21 |<br>|    3 |    3 |    1 | 2:5  | 2006-06-25 |<br>|    4 |    2 |    1 | 3:2  | 2006-07-21 |<br>+——+——+——+——+————+<br>4 rows in set (0.00 sec)</p><p>mysql> select tem.mid,tem.hid,tem.tname,tem.gid,t.tname,tem.mres,tem.matime  from (select m.mid ,m.hid,t.tname,m.gid,m.mres,m.matime from m left join t on m.hid=t.tid) as tem left join t on tem.gid=t.tid where tem.matime between “2006-6-1” and “2006-7-1”  order by tem.mid;<br>+——+——+————–+——+————–+——+————+<br>| mid  | hid  | tname        | gid  | tname        | mres | matime     |<br>+——+——+————–+——+————–+——+————+<br>|    2 |    2 | 申花         |    3 | 布尔联队     | 1:2  | 2006-06-21 |<br>|    3 |    3 | 布尔联队     |    1 | 国安         | 2:5  | 2006-06-25 |<br>+——+——+————–+——+————–+——+————+<br>2 rows in set (0.06 sec)</p><p>mysql> select m.mid ,m.hid,t.tname,m.gid,tem.tname,m.mres,m.matime from m left join t on m.hid=t.tid  left join t  as tem on m.gid=tem.tid where m.matime between “2006-6-1” and “2006-7-1”  order by m.mid;<br>+——+——+————–+——+————–+——+————+<br>| mid  | hid  | tname        | gid  | tname        | mres | matime     |<br>+——+——+————–+——+————–+——+————+<br>|    2 |    2 | 申花         |    3 | 布尔联队     | 1:2  | 2006-06-21 |<br>|    3 |    3 | 布尔联队     |    1 | 国安         | 2:5  | 2006-06-25 |<br>+——+——+————–+——+————–+——+————+<br>2 rows in set (0.00 sec)</p><p>mysql> exit<br>mysql> use test01;<br>Database changed<br>mysql> select goods_id,goods_name,shop_price from goods where shop_price<50<br>    -> ;<br>+———-+——————————–+————+<br>| goods_id | goods_name                     | shop_price |<br>+———-+——————————–+————+<br>|        5 | 索爱原装m2卡读卡器             |      20.00 |<br>|        6 | 胜创kingmax内存卡              |      42.00 |<br>|       25 | 小灵通/固话50元充值卡          |      48.00 |<br>|       26 | 小灵通/固话20元充值卡          |      19.00 |<br>|       28 | 联通50元充值卡                 |      45.00 |<br>|       30 | 移动20元充值卡                 |      18.00 |<br>+———-+——————————–+————+<br>6 rows in set (0.14 sec)</p><p>mysql> #union 联合 语法 sql1 union sql2<br>mysql> select goods_id,goods_name,shop_price from goods where shop_price>4000;<br>+———-+——————-+————+<br>| goods_id | goods_name        | shop_price |<br>+———-+——————-+————+<br>|       22 | 多普达touch hd    |    5999.00 |<br>+———-+——————-+————+<br>1 row in set (0.00 sec)</p><p>mysql> select goods_id,goods_name,shop_price from goods where shop_price>4000 union select goods_id,goods_name,shop_price from goods where shop_price<50;<br>+———-+——————————–+————+<br>| goods_id | goods_name                     | shop_price |<br>+———-+——————————–+————+<br>|       22 | 多普达touch hd                 |    5999.00 |<br>|        5 | 索爱原装m2卡读卡器             |      20.00 |<br>|        6 | 胜创kingmax内存卡              |      42.00 |<br>|       25 | 小灵通/固话50元充值卡          |      48.00 |<br>|       26 | 小灵通/固话20元充值卡          |      19.00 |<br>|       28 | 联通50元充值卡                 |      45.00 |<br>|       30 | 移动20元充值卡                 |      18.00 |<br>+———-+——————————–+————+<br>7 rows in set (0.10 sec)</p><p>mysql> #可以从两张表union联合查询<br>mysql> #两个列名不一致 以第一个列名为准<br>mysql> #union 满足的条件,只要结果集的列数一致就可以了<br>mysql> #union后的结果集可以排序<br>mysql> #格式: sql1 union sql2 order by<br>mysql> # 用nuion 取出第4个栏目和第5个栏目的商品m,并按价格升序排列<br>mysql> select goods_id ,cat_id, goods_name ,shop_price from goods union select goods_id ,cat_id ,goods_name ,shop_price from goods order by shop_price asc;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.05 sec)</p><p>mysql> select goods_id ,cat_id, goods_name ,shop_price from goods where cat_id=4 union select goods_id ,cat_id ,goods_name ,shop_price from goods where cat_id=5 order by shop_price asc;<br>+———-+——–+—————–+————+<br>| goods_id | cat_id | goods_name      | shop_price |<br>+———-+——–+—————–+————+<br>|        1 |      4 | kd876           |    1388.00 |<br>|       14 |      4 | 诺基亚5800xm    |    2625.00 |<br>|       18 |      4 | 夏新t5          |    2878.00 |<br>|       23 |      5 | 诺基亚n96       |    3700.00 |<br>+———-+——–+—————–+————+<br>4 rows in set (0.00 sec)</p><p>mysql> #取出第3个下价格前三高 的商品,和第四个栏目下价格前两高的商品用union完成</p><p>mysql> select goods_id ,cat_id,goods_name ,shop_price from goods where cat_id=3 order by  shop_price desc limit 3;<br>+———-+——–+——————-+————+<br>| goods_id | cat_id | goods_name        | shop_price |<br>+———-+——–+——————-+————+<br>|       22 |      3 | 多普达touch hd    |    5999.00 |<br>|       32 |      3 | 诺基亚n85         |    3010.00 |<br>|       17 |      3 | 夏新n7            |    2300.00 |<br>+———-+——–+——————-+————+<br>3 rows in set (0.00 sec)</p><p>mysql> select goods_id ,cat_id ,goods_name ,shop_price from goods where cat_id=4 order by shop_price desc limit 2;<br>+———-+——–+—————–+————+<br>| goods_id | cat_id | goods_name      | shop_price |<br>+———-+——–+—————–+————+<br>|       18 |      4 | 夏新t5          |    2878.00 |<br>|       14 |      4 | 诺基亚5800xm    |    2625.00 |<br>+———-+——–+—————–+————+<br>2 rows in set (0.00 sec)</p><p>mysql> (select goods_id ,cat_id,goods_name ,shop_price from goods where cat_id=3 order by  shop_price desc limit 3) union (select goods_id ,cat_id,goods_name ,shop_price from goods where cat_id=4 order by shop_price desc limit 2);<br>+———-+——–+——————-+————+<br>| goods_id | cat_id | goods_name        | shop_price |<br>+———-+——–+——————-+————+<br>|       22 |      3 | 多普达touch hd    |    5999.00 |<br>|       32 |      3 | 诺基亚n85         |    3010.00 |<br>|       17 |      3 | 夏新n7            |    2300.00 |<br>|       18 |      4 | 夏新t5            |    2878.00 |<br>|       14 |      4 | 诺基亚5800xm      |    2625.00 |<br>+———-+——–+——————-+————+<br>5 rows in set (0.00 sec)</p><p>mysql> #这次内层的order by 不会失效是因为有limit,单纯的order by不会对结果集有影响,需要配合limit<br>mysql> #如果union后的结果有重复如何解决<br>mysql> #union会有去重的效果,不想去重可以用union all<br>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| girl             |<br>| goods            |<br>| m                |<br>| mian             |<br>| result           |<br>| t                |<br>| user             |<br>+——————+<br>11 rows in set (0.08 sec)</p><p>mysql> select * from a;<br>+——+——+<br>| id   | num  |<br>+——+——+<br>| a    |    5 |<br>| b    |   10 |<br>| c    |   15 |<br>| d    |   10 |<br>+——+——+<br>4 rows in set (0.15 sec)</p><p>mysql> select  * from b;<br>+——+——+<br>| id   | num  |<br>+——+——+<br>| b    |    5 |<br>| c    |   15 |<br>| d    |   20 |<br>| e    |   99 |<br>+——+——+<br>4 rows in set (0.02 sec)</p><p>mysql> select * from a union select * from b;<br>+——+——+<br>| id   | num  |<br>+——+——+<br>| a    |    5 |<br>| b    |   10 |<br>| c    |   15 |<br>| d    |   10 |<br>| b    |    5 |<br>| d    |   20 |<br>| e    |   99 |<br>+——+——+<br>7 rows in set (0.00 sec)</p><p>mysql> select * from a union all select * from b;<br>+——+——+<br>| id   | num  |<br>+——+——+<br>| a    |    5 |<br>| b    |   10 |<br>| c    |   15 |<br>| d    |   10 |<br>| b    |    5 |<br>| c    |   15 |<br>| d    |   20 |<br>| e    |   99 |<br>+——+——+<br>8 rows in set (0.00 sec)</p><p>mysql> select * from a union all select * from b group by id;<br>+——+——+<br>| id   | num  |<br>+——+——+<br>| a    |    5 |<br>| b    |   10 |<br>| c    |   15 |<br>| d    |   10 |<br>| b    |    5 |<br>| c    |   15 |<br>| d    |   20 |<br>| e    |   99 |<br>+——+——+<br>8 rows in set (0.00 sec)</p><p>mysql> select tem.id,sum(tem.num) from(select a.id,a.num from a union all select b.id,b.num from b) as tem group by tem.id ;<br>+——+————–+<br>| id   | sum(tem.num) |<br>+——+————–+<br>| a    |            5 |<br>| b    |           15 |<br>| c    |           30 |<br>| d    |           30 |<br>| e    |           99 |<br>+——+————–+<br>5 rows in set (0.00 sec)</p><p>mysql> select a.* ,b.* from a left join b on a.id=b.id;<br>+——+——+——+——+<br>| id   | num  | id   | num  |<br>+——+——+——+——+<br>| b    |   10 | b    |    5 |<br>| c    |   15 | c    |   15 |<br>| d    |   10 | d    |   20 |<br>| a    |    5 | NULL | NULL |<br>+——+——+——+——+<br>4 rows in set (0.00 sec)</p><p>mysql> select a.* ,b.* from a inner join b on a.id=b.id;<br>+——+——+——+——+<br>| id   | num  | id   | num  |<br>+——+——+——+——+<br>| b    |   10 | b    |    5 |<br>| c    |   15 | c    |   15 |<br>| d    |   10 | d    |   20 |<br>+——+——+——+——+<br>3 rows in set (0.00 sec)</p><p>mysql> select a.* ,b.* from a left join b on a.id=b.id;<br>+——+——+——+——+<br>| id   | num  | id   | num  |<br>+——+——+——+——+<br>| b    |   10 | b    |    5 |<br>| c    |   15 | c    |   15 |<br>| d    |   10 | d    |   20 |<br>| a    |    5 | NULL | NULL |<br>+——+——+——+——+<br>4 rows in set (0.00 sec)</p><p>mysql> select a.* ,b.* from a left join b on a.id=b.id union select a.* ,b.* from a right join b on a.id=b.id;<br>+——+——+——+——+<br>| id   | num  | id   | num  |<br>+——+——+——+——+<br>| b    |   10 | b    |    5 |<br>| c    |   15 | c    |   15 |<br>| d    |   10 | d    |   20 |<br>| a    |    5 | NULL | NULL |<br>| NULL | NULL | e    |   99 |<br>+——+——+——+——+<br>5 rows in set (0.00 sec)</p><p>mysql> #先左联再u右连然后子查询;<br>mysql><br>mysql> #函数<br>mysql> #取出第四个栏目的商品及打88折的会员价<br>mysql> select goods_id,cat_id,good_name,shop_price<em>0.88 from goods where cat_id=4<br>    -> ;<br>ERROR 1054 (42S22): Unknown column ‘good_name’ in ‘field list’<br>mysql> select goods_id,cat_id,goods_name,shop_price</em>0.88 from goods where cat_id=4<br>    -> ;<br>+———-+——–+—————–+—————–+<br>| goods_id | cat_id | goods_name      | shop_price*0.88 |<br>+———-+——–+—————–+—————–+<br>|        1 |      4 | kd876           |       1221.4400 |<br>|       14 |      4 | 诺基亚5800xm    |       2310.0000 |<br>|       18 |      4 | 夏新t5          |       2532.6400 |<br>+———-+——–+—————–+—————–+<br>3 rows in set (0.00 sec)</p><p>mysql> select goods_id,cat_id,goods_name,floor(shop_price<em>0.88) from goods where cat_id=4 ;<br>+———-+——–+—————–+————————+<br>| goods_id | cat_id | goods_name      | floor(shop_price</em>0.88) |<br>+———-+——–+—————–+————————+<br>|        1 |      4 | kd876           |                   1221 |<br>|       14 |      4 | 诺基亚5800xm    |                   2310 |<br>|       18 |      4 | 夏新t5          |                   2532 |<br>+———-+——–+—————–+————————+<br>3 rows in set (0.00 sec)</p><p>mysql> #随机生成5-15之间的数字;</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                  7 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                 13 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                  8 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                  9 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                  8 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                  5 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                  8 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select floor(rand()<em>10+5);<br>+——————–+<br>| floor(rand()</em>10+5) |<br>+——————–+<br>|                 11 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> #ceiling 向上取整<br>mysql> #group concat 取出4栏目下goods_id拼接<br>mysql> select group_concat(goods_id) from goods where cat_id=4;<br>+————————+<br>| group_concat(goods_id) |<br>+————————+<br>| 1,14,18                |<br>+————————+<br>1 row in set (0.08 sec)</p><p>mysql> #计算字符的ascil码<br>mysql> select ascil(a);<br>ERROR 1305 (42000): FUNCTION test01.ascil does not exist<br>mysql> select ascii(a);<br>ERROR 1054 (42S22): Unknown column ‘a’ in ‘field list’<br>mysql> select ascii(‘a’);<br>+————+<br>| ascii(‘a’) |<br>+————+<br>|         97 |<br>+————+<br>1 row in set (0.00 sec)</p><p>mysql> select length(“中华”);<br>+——————+<br>| length(“中华”)   |<br>+——————+<br>|                6 |<br>+——————+<br>1 row in set (0.06 sec)</p><p>mysql> #length 计算的字节场地<br>mysql> #length 计算的字符数<br>mysql> #char_length 计算的字符数<br>mysql> select char_length(‘中国’);<br>+———————–+<br>| char_length(‘中国’)   |<br>+———————–+<br>|                     2 |<br>+———————–+<br>1 row in set (0.00 sec)</p><p>mysql> #反转字符串<br>mysql> select reverse(‘zh’)<br>    -> ;<br>+—————+<br>| reverse(‘zh’) |<br>+—————+<br>| hz            |<br>+—————+<br>1 row in set (0.05 sec)</p><p>mysql> select reverse(‘zh中国’);<br>+———————+<br>| reverse(‘zh中国’)   |<br>+———————+<br>| 国中hz              |<br>+———————+<br>1 row in set (0.00 sec)</p><p>mysql> #position<br>mysql> select position(‘@’ in ‘abc@sina.com’);<br>+———————————+<br>| position(‘@’ in ‘abc@sina.com’) |<br>+———————————+<br>|                               4 |<br>+———————————+<br>1 row in set (0.05 sec)</p><p>mysql> select right(‘abc@sina.com’ ,2);<br>+————————–+<br>| right(‘abc@sina.com’ ,2) |<br>+————————–+<br>| om                       |<br>+————————–+<br>1 row in set (0.00 sec)</p><p>mysql> #某网站有email字段,有邮件地址,想调查163.qq.com的u邮箱的比例<br>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| girl             |<br>| goods            |<br>| m                |<br>| mian             |<br>| result           |<br>| t                |<br>| user             |<br>+——————+<br>11 rows in set (0.01 sec)</p><p>mysql> #查询邮箱后缀,<br>mysql> create table email(uname char,email char);<br>Query OK, 0 rows affected (1.76 sec)</p><p>mysql> desc email;<br>+——-+———+——+—–+———+——-+<br>| Field | Type    | Null | Key | Default | Extra |<br>+——-+———+——+—–+———+——-+<br>| uname | char(1) | YES  |     | NULL    |       |<br>| email | char(1) | YES  |     | NULL    |       |<br>+——-+———+——+—–+———+——-+<br>2 rows in set (0.09 sec)</p><p>mysql> alter table email modify column uname char(50) ;<br>Query OK, 0 rows affected (1.96 sec)<br>Records: 0  Duplicates: 0  Warnings: 0</p><p>mysql> alter table email modify column email char(50) ;<br>Query OK, 0 rows affected (1.34 sec)<br>Records: 0  Duplicates: 0  Warnings: 0</p><p>mysql> desc eamil;<br>ERROR 1146 (42S02): Table ‘test01.eamil’ doesn’t exist<br>mysql> desc email;<br>+——-+———-+——+—–+———+——-+<br>| Field | Type     | Null | Key | Default | Extra |<br>+——-+———-+——+—–+———+——-+<br>| uname | char(50) | YES  |     | NULL    |       |<br>| email | char(50) | YES  |     | NULL    |       |<br>+——-+———-+——+—–+———+——-+<br>2 rows in set (0.00 sec)</p><p>mysql> insert into email values(‘zhangsan’,‘zhan@163.com’),(‘lilie’,‘li@qq.com’),(‘hanmeimei’,‘han@126.com’);<br>Query OK, 3 rows affected (0.28 sec)<br>Records: 3  Duplicates: 0  Warnings: 0</p><p>mysql> select * from email;<br>+———–+————–+<br>| uname     | email        |<br>+———–+————–+<br>| zhangsan  | <a href="mailto:zhan@163.com">zhan@163.com</a> |<br>| lilie     | <a href="mailto:li@qq.com">li@qq.com</a>    |<br>| hanmeimei | <a href="mailto:han@126.com">han@126.com</a>  |<br>+———–+————–+<br>3 rows in set (0.00 sec)</p><p>mysql> select uname ,position(‘@’ in email) from email;<br>+———–+————————+<br>| uname     | position(‘@’ in email) |<br>+———–+————————+<br>| zhangsan  |                      5 |<br>| lilie     |                      3 |<br>| hanmeimei |                      4 |<br>+———–+————————+<br>3 rows in set (0.00 sec)</p><p>mysql> select uname ,right(email,position(‘@’ in email)) from email;<br>+———–+————————————-+<br>| uname     | right(email,position(‘@’ in email)) |<br>+———–+————————————-+<br>| zhangsan  | 3.com                               |<br>| lilie     | com                                 |<br>| hanmeimei | .com                                |<br>+———–+————————————-+<br>3 rows in set (0.00 sec)</p><p>mysql> select uname ,right(email,char_length(email)-position(‘@’ in email)) from email;<br>+———–+——————————————————–+<br>| uname     | right(email,char_length(email)-position(‘@’ in email)) |<br>+———–+——————————————————–+<br>| zhangsan  | 163.com                                                |<br>| lilie     | qq.com                                                 |<br>| hanmeimei | 126.com                                                |<br>+———–+——————————————————–+<br>3 rows in set (0.00 sec)</p><p>mysql> select uname ,right(email,length(email)-position(‘@’ in email)) from email;<br>+———–+—————————————————+<br>| uname     | right(email,length(email)-position(‘@’ in email)) |<br>+———–+—————————————————+<br>| zhangsan  | 163.com                                           |<br>| lilie     | qq.com                                            |<br>| hanmeimei | 126.com                                           |<br>+———–+—————————————————+<br>3 rows in set (0.00 sec)</p><p>mysql> #截取邮箱<br>mysql> #截取邮箱后半部分;<br>mysql> select uname ,right(email,length(email)-position(‘@’ in email)) from email;<br>+———–+—————————————————+<br>| uname     | right(email,length(email)-position(‘@’ in email)) |<br>+———–+—————————————————+<br>| zhangsan  | 163.com                                           |<br>| lilie     | qq.com                                            |<br>| hanmeimei | 126.com                                           |<br>+———–+—————————————————+<br>3 rows in set (0.00 sec)</p><p>mysql> #日期时间函数,取当前时间<br>mysql> select now;<br>ERROR 1054 (42S22): Unknown column ‘now’ in ‘field list’<br>mysql> select now();<br>+———————+<br>| now()               |<br>+———————+<br>| 2019-10-15 20:00:44 |<br>+———————+<br>1 row in set (0.05 sec)</p><p>mysql> select curdate();<br>+————+<br>| curdate()  |<br>+————+<br>| 2019-10-15 |<br>+————+<br>1 row in set (0.01 sec)</p><p>mysql> # now()返回datetime格式,curdate返回date格式<br>mysql> select curtime();<br>+———–+<br>| curtime() |<br>+———–+<br>| 20:02:19  |<br>+———–+<br>1 row in set (0.00 sec)</p><p>mysql> #查看某一日是那一周的第几天<br>mysql> select dayofweek(‘2019-10-15’);<br>+————————-+<br>| dayofweek(‘2019-10-15’) |<br>+————————-+<br>|                       3 |<br>+————————-+<br>1 row in set (0.05 sec)</p><p>mysql> select week(‘2019-10-15’);<br>+——————–+<br>| week(‘2019-10-15’) |<br>+——————–+<br>|                 41 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select week(‘2019-12-30’);<br>+——————–+<br>| week(‘2019-12-30’) |<br>+——————–+<br>|                 52 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> select week(curdate());<br>+—————–+<br>| week(curdate()) |<br>+—————–+<br>|              41 |<br>+—————–+<br>1 row in set (0.00 sec)</p><p>mysql> select week(‘2019-12-31’);<br>+——————–+<br>| week(‘2019-12-31’) |<br>+——————–+<br>|                 52 |<br>+——————–+<br>1 row in set (0.00 sec)</p><p>mysql> #案例:name<br>mysql> # overtime 日期<br>mysql> # 5        2019-9-1<br>mysql> # 6        2019-9-2<br>mysql> # 3        2019-9-3<br>mysql> # 报表统计,按星期统计加班时间<br>mysql> create table jiaban(num int(10) ,time date);<br>Query OK, 0 rows affected (0.52 sec)</p><p>mysql> insert into jiaban values(3,”2019-9-1”),(4,’2019-9-2’),(5,”2019-9-3”),(6,’2019-9-10’),(19,’2019-9-18’);<br>Query OK, 5 rows affected (0.15 sec)<br>Records: 5  Duplicates: 0  Warnings: 0</p><p>mysql> select * from jiaban;<br>+——+————+<br>| num  | time       |<br>+——+————+<br>|    3 | 2019-09-01 |<br>|    4 | 2019-09-02 |<br>|    5 | 2019-09-03 |<br>|    6 | 2019-09-10 |<br>|   19 | 2019-09-18 |<br>+——+————+<br>5 rows in set (0.00 sec)</p><p>mysql> #按星期统计加班时间;<br>mysql> select sum(num), week(time) from jiaban ;<br>+———-+————+<br>| sum(num) | week(time) |<br>+———-+————+<br>|       37 |         35 |<br>+———-+————+<br>1 row in set (0.02 sec)</p><p>mysql> select sum(num), week(time) from jiaban group by week(time);<br>+———-+————+<br>| sum(num) | week(time) |<br>+———-+————+<br>|       12 |         35 |<br>|        6 |         36 |<br>|       19 |         37 |<br>+———-+————+<br>3 rows in set (0.00 sec)</p><p>mysql> select num, week(time) from jiaban group by week(time);<br>+——+————+<br>| num  | week(time) |<br>+——+————+<br>|    3 |         35 |<br>|    6 |         36 |<br>|   19 |         37 |<br>+——+————+<br>3 rows in set (0.00 sec)</p><p>mysql> select sum(num), week(time) from jiaban group by week(time);<br>+———-+————+<br>| sum(num) | week(time) |<br>+———-+————+<br>|       12 |         35 |<br>|        6 |         36 |<br>|       19 |         37 |<br>+———-+————+<br>3 rows in set (0.00 sec)</p><p>mysql> select *, week(time) from jiaban;<br>+——+————+————+<br>| num  | time       | week(time) |<br>+——+————+————+<br>|    3 | 2019-09-01 |         35 |<br>|    4 | 2019-09-02 |         35 |<br>|    5 | 2019-09-03 |         35 |<br>|    6 | 2019-09-10 |         36 |<br>|   19 | 2019-09-18 |         37 |<br>+——+————+————+<br>5 rows in set (0.00 sec)</p><p>mysql> #加密函数,码得<br>mysql> #md5加密函数;<br>mysql> select md5(‘1’);<br>+———————————-+<br>| md5(‘1’)                         |<br>+———————————-+<br>| c4ca4238a0b923820dcc509a6f75849b |<br>+———————————-+<br>1 row in set (0.07 sec)</p><p>mysql> select md5(‘1’);<br>+———————————-+<br>| md5(‘1’)                         |<br>+———————————-+<br>| c4ca4238a0b923820dcc509a6f75849b |<br>+———————————-+<br>1 row in set (0.00 sec)</p><p>mysql> #md5是不可逆的<br>mysql> #流程h控制函数<br>mysql> #case 变量<br>mysql> 2 when 值 then 语句；<br>    -> 3 when 值 then 语句；<br>    -> 4 else 语句；<br>    -> 5 end case；<br>    -> \c<br>mysql> #if(gender=0,’优先’,’等待’) as vip<br>mysql> ifnull<br>    -> \c<br>mysql> #ifnull的用法,判断第一个表达式是否为null 如果为null 返回第2 个表达式的值<br>mysql> #如果不为null 返回自身,即表达式1<br>mysql> select ifnull(‘’,a);<br>ERROR 1054 (42S22): Unknown column ‘a’ in ‘field list’<br>mysql> select ifnull(‘’,’a’);<br>+—————-+<br>| ifnull(‘’,’a’) |<br>+—————-+<br>|                |<br>+—————-+<br>1 row in set (0.00 sec)</p><p>mysql> select ifnull(null,’a’);<br>+——————+<br>| ifnull(null,’a’) |<br>+——————+<br>| a                |<br>+——————+<br>1 row in set (0.00 sec)</p><p>mysql> #系统调试函数<br>mysql><br>mysql><br>mysql> select user();<br>+—————-+<br>| user()         |<br>+—————-+<br>| root@localhost |<br>+—————-+<br>1 row in set (0.00 sec)</p><p>mysql> #user返回用户及主机,判断自己的身份<br>mysql> #database(),返回当前操作的数据库名<br>mysql> select database();<br>+————+<br>| database() |<br>+————+<br>| test01     |<br>+————+<br>1 row in set (0.00 sec)</p><p>mysql> select version();<br>+———–+<br>| version() |<br>+———–+<br>| 8.0.12    |<br>+———–+<br>1 row in set (0.00 sec)</p><p>mysql> #vension() 返回数据库的版本<br>mysql> #时间的h格式化,优先在业务逻辑上使用,<br>mysql> #总结: where 条件中,对某列使用了函数,由此列的索引不发挥作用<br>mysql> #视图 view<br>mysql> view 将查询表当作临时表使用,<br>    -> \c<br>mysql> # 查询每个栏目下商品的平均价格,并对平均价格取前三的栏目<br>mysql> select cat_id,avg(shop_price),count(goods_id) from goods group by cat_id;<br>+——–+—————–+—————–+<br>| cat_id | avg(shop_price) | count(goods_id) |<br>+——–+—————–+—————–+<br>|      4 |     2297.000000 |               3 |<br>|      8 |       75.333333 |               3 |<br>|     11 |       31.000000 |               2 |<br>|      3 |     1746.066667 |              15 |<br>|      2 |      823.330000 |               1 |<br>|      5 |     3700.000000 |               1 |<br>|     13 |       33.500000 |               2 |<br>|     15 |       70.000000 |               2 |<br>|     14 |       54.000000 |               2 |<br>+——–+—————–+—————–+<br>9 rows in set (0.10 sec)</p><p>mysql> select cat_id,avg(shop_price) as average,count(goods_id) from goods group by cat_id order by average desc limit 3 ;<br>+——–+————-+—————–+<br>| cat_id | average     | count(goods_id) |<br>+——–+————-+—————–+<br>|      5 | 3700.000000 |               1 |<br>|      4 | 2297.000000 |               3 |<br>|      3 | 1746.066667 |              15 |<br>+——–+————-+—————–+<br>3 rows in set (0.00 sec)</p><p>mysql> select cat_id,avg(shop_price) as average,count(goods_id) from goods group by cat_id order by average asc limit 3 ;<br>+——–+———–+—————–+<br>| cat_id | average   | count(goods_id) |<br>+——–+———–+—————–+<br>|     11 | 31.000000 |               2 |<br>|     13 | 33.500000 |               2 |<br>|     14 | 54.000000 |               2 |<br>+——–+———–+—————–+<br>3 rows in set (0.00 sec)</p><p>mysql> #取平均价格由高到底第三到第5的栏目<br>mysql> select cat_id,avg(shop_price) as average,count(goods_id) from goods group by cat_id order by average asc  ;<br>+——–+————-+—————–+<br>| cat_id | average     | count(goods_id) |<br>+——–+————-+—————–+<br>|     11 |   31.000000 |               2 |<br>|     13 |   33.500000 |               2 |<br>|     14 |   54.000000 |               2 |<br>|     15 |   70.000000 |               2 |<br>|      8 |   75.333333 |               3 |<br>|      2 |  823.330000 |               1 |<br>|      3 | 1746.066667 |              15 |<br>|      4 | 2297.000000 |               3 |<br>|      5 | 3700.000000 |               1 |<br>+——–+————-+—————–+<br>9 rows in set (0.00 sec)</p><p>mysql> select cat_id,avg(shop_price) as average,count(goods_id) from goods group by cat_id;<br>+——–+————-+—————–+<br>| cat_id | average     | count(goods_id) |<br>+——–+————-+—————–+<br>|      4 | 2297.000000 |               3 |<br>|      8 |   75.333333 |               3 |<br>|     11 |   31.000000 |               2 |<br>|      3 | 1746.066667 |              15 |<br>|      2 |  823.330000 |               1 |<br>|      5 | 3700.000000 |               1 |<br>|     13 |   33.500000 |               2 |<br>|     15 |   70.000000 |               2 |<br>|     14 |   54.000000 |               2 |<br>+——–+————-+—————–+<br>9 rows in set (0.00 sec)</p><p>mysql> # 将结果集设为a  a频繁用到,因此用到视图<br>mysql> # 表通过某种运算得到的影子<br>mysql> #如何创建视图,建视图的时候语法 create view 表名 as 查询语句;<br>mysql> create view state as select cat_id,avg(shop_price) as average,count(goods_id) from goods group by cat_id;<br>Query OK, 0 rows affected (0.27 sec)</p><p>mysql> show tables;<br>+——————+<br>| Tables_in_test01 |<br>+——————+<br>| a                |<br>| b                |<br>| boy              |<br>| category         |<br>| email            |<br>| girl             |<br>| goods            |<br>| jiaban           |<br>| m                |<br>| mian             |<br>| result           |<br>| state            |<br>| t                |<br>| user             |<br>+——————+<br>14 rows in set (0.01 sec)</p><p>mysql> #多了一张state表<br>mysql> select * from state;<br>+——–+————-+—————–+<br>| cat_id | average     | count(goods_id) |<br>+——–+————-+—————–+<br>|      4 | 2297.000000 |               3 |<br>|      8 |   75.333333 |               3 |<br>|     11 |   31.000000 |               2 |<br>|      3 | 1746.066667 |              15 |<br>|      2 |  823.330000 |               1 |<br>|      5 | 3700.000000 |               1 |<br>|     13 |   33.500000 |               2 |<br>|     15 |   70.000000 |               2 |<br>|     14 |   54.000000 |               2 |<br>+——–+————-+—————–+<br>9 rows in set (0.06 sec)</p><p>mysql> select * from state order by average limit 3;<br>+——–+———–+—————–+<br>| cat_id | average   | count(goods_id) |<br>+——–+———–+—————–+<br>|     11 | 31.000000 |               2 |<br>|     13 | 33.500000 |               2 |<br>|     14 | 54.000000 |               2 |<br>+——–+———–+—————–+<br>3 rows in set (0.00 sec)</p><p>mysql> #视图一旦创建完毕,可以完全当表使用,<br>mysql> # 简化查询,复杂的统计,<br>mysql> #更清晰的权限控制<br>mysql> # 开放权限,但是不想开放密码字段,用视图<br>mysql> # 多表查询,分表时候用,将表头放在视图中;<br>mysql> #视图是表的影子,表与视图相互影响的关系<br>mysql> #表的数据变化,影响视图的变化,<br>mysql> #以此例,,此视图的数据不能更改,其数据来自shop_price的平均值<br>mysql> #视图是否能够增删改呢?<br>mysql> #某种情况下是可以删除的,11对应,即表的数据能够推出视图的数据,视图的数据能够推出表的数据<br>mysql> #删除视图即 drop table/view 表名/视图名<br>mysql> exit<br>mysql> show databases;<br>+——————–+<br>| Database           |<br>+——————–+<br>| bookstore          |<br>| clouddb01          |<br>| clouddb02          |<br>| clouddb03          |<br>| information_schema |<br>| mydb               |<br>| mysql              |<br>| performance_schema |<br>| shop               |<br>| ssm_crud           |<br>| struts             |<br>| student            |<br>| sys                |<br>| test               |<br>| test01             |<br>+——————–+<br>15 rows in set (0.18 sec)</p><p>mysql> use test01;<br>Database changed<br>mysql> #algorithm<br>mysql> # merge —合并查询语句<br>mysql> #tem<br>mysql> #temptable —临时表<br>mysql> #undefined –未定义,由系统判断<br>mysql> #建一张简单的查询视图,不同临时表,只用y条件合并<br>mysql> create view as select * from goods where shop_price>300;<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘as select * from goods where shop_price>300’ at line 1<br>mysql> create view v1  as  select * from goods where shop_price>300;<br>Query OK, 0 rows affected (0.52 sec)</p><p>mysql> #查询视图<br>mysql> select goods_id ,goods_name ,shop_price from v1 where shop_price<500;<br>+———-+—————+————+<br>| goods_id | goods_name    | shop_price |<br>+———-+—————+————+<br>|        8 | 飞利浦9@9v    |     399.00 |<br>+———-+—————+————+<br>1 row in set (0.01 sec)</p><p>mysql> #总的条件是>300 <500;<br>mysql> #这个简单的查询还建立临时表的话,开销有点大;<br>mysql> #这是我们可以指定algorithm为merge<br>mysql> create algorithm=merge view v2 as select * from goods where shop_price>300;<br>Query OK, 0 rows affected (0.21 sec)</p><p>mysql> select goods_id ,goods_name ,shop_price from v2 where shop_price<500;<br>+———-+—————+————+<br>| goods_id | goods_name    | shop_price |<br>+———-+—————+————+<br>|        8 | 飞利浦9@9v    |     399.00 |<br>+———-+—————+————+<br>1 row in set (0.00 sec)</p><p>mysql> #有的时候必须建临时表,<br>mysql> #比如,每个栏目的平均商品价格<br>mysql> #比如每个栏目下的最高d价格的商品<br>mysql> create algorithm=temptable view v3 as select goods_id,cat_id,goods_name from goods order by cat_id asc ,goods_id desc;<br>Query OK, 0 rows affected (0.21 sec)</p><p>mysql> select * from v3 group by cat_id;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       16 |      2 | 恒基伟业g101                           |<br>|       32 |      3 | 诺基亚n85                              |<br>|       18 |      4 | 夏新t5                                 |<br>|       23 |      5 | 诺基亚n96                              |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       28 |     15 | 联通50元充值卡                         |<br>+———-+——–+—————————————-+<br>9 rows in set (0.05 sec)</p><p>mysql> select * from v3;<br>+———-+——–+—————————————-+<br>| goods_id | cat_id | goods_name                             |<br>+———-+——–+—————————————-+<br>|       16 |      2 | 恒基伟业g101                           |<br>|       32 |      3 | 诺基亚n85                              |<br>|       31 |      3 | 摩托罗拉e8                             |<br>|       24 |      3 | p806                                   |<br>|       22 |      3 | 多普达touch hd                         |<br>|       21 |      3 | 金立 a30                               |<br>|       20 |      3 | 三星bc01                               |<br>|       19 |      3 | 三星sgh-f258                           |<br>|       17 |      3 | 夏新n7                                 |<br>|       15 |      3 | 摩托罗拉a810                           |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |<br>|       12 |      3 | 摩托罗拉a810                           |<br>|       11 |      3 | 索爱c702c                              |<br>|       10 |      3 | 索爱c702c                              |<br>|        9 |      3 | 诺基亚e66                              |<br>|        8 |      3 | 飞利浦9@9v                             |<br>|       18 |      4 | 夏新t5                                 |<br>|       14 |      4 | 诺基亚5800xm                           |<br>|        1 |      4 | kd876                                  |<br>|       23 |      5 | 诺基亚n96                              |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |<br>|        4 |      8 | 诺基亚n85原装充电器                    |<br>|        3 |      8 | 诺基亚原装5800耳机                     |<br>|        6 |     11 | 胜创kingmax内存卡                      |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |<br>|       30 |     14 | 移动20元充值卡                         |<br>|       29 |     14 | 移动100元充值卡                        |<br>|       28 |     15 | 联通50元充值卡                         |<br>|       27 |     15 | 联通100元充值卡                        |<br>+———-+——–+—————————————-+<br>31 rows in set (0.00 sec)</p><p>mysql> drop view v3;<br>Query OK, 0 rows affected (0.27 sec)</p><p>mysql> create algorithm=temptable view v3 as select goods_id,cat_id,goods_name,shop_price from goods order by cat_id asc ,shop_price desc;<br>Query OK, 0 rows affected (0.31 sec)</p><p>mysql> slect * form v3 ;<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘slect * form v3’ at line 1<br>mysql> select * form v3 ;<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘form v3’ at line 1<br>mysql> select * from v3 ;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       32 |      3 | 诺基亚n85                              |    3010.00 |<br>|       17 |      3 | 夏新n7                                 |    2300.00 |<br>|        9 |      3 | 诺基亚e66                              |    2298.00 |<br>|       21 |      3 | 金立 a30                               |    2000.00 |<br>|       24 |      3 | p806                                   |    2000.00 |<br>|       31 |      3 | 摩托罗拉e8                             |    1337.00 |<br>|       10 |      3 | 索爱c702c                              |    1328.00 |<br>|       13 |      3 | 诺基亚5320 xpressmusic                 |    1311.00 |<br>|       11 |      3 | 索爱c702c                              |    1300.00 |<br>|       12 |      3 | 摩托罗拉a810                           |     983.00 |<br>|       19 |      3 | 三星sgh-f258                           |     858.00 |<br>|       15 |      3 | 摩托罗拉a810                           |     788.00 |<br>|        8 |      3 | 飞利浦9@9v                             |     399.00 |<br>|       20 |      3 | 三星bc01                               |     280.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       14 |      4 | 诺基亚5800xm                           |    2625.00 |<br>|        1 |      4 | kd876                                  |    1388.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        3 |      8 | 诺基亚原装5800耳机                     |      68.00 |<br>|        4 |      8 | 诺基亚n85原装充电器                    |      58.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|        5 |     11 | 索爱原装m2卡读卡器                     |      20.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       26 |     13 | 小灵通/固话20元充值卡                  |      19.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       30 |     14 | 移动20元充值卡                         |      18.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>|       28 |     15 | 联通50元充值卡                         |      45.00 |<br>+———-+——–+—————————————-+————+<br>31 rows in set (0.00 sec)</p><p>mysql> select * from v3 group by cat_id;<br>+———-+——–+—————————————-+————+<br>| goods_id | cat_id | goods_name                             | shop_price |<br>+———-+——–+—————————————-+————+<br>|       16 |      2 | 恒基伟业g101                           |     823.33 |<br>|       22 |      3 | 多普达touch hd                         |    5999.00 |<br>|       18 |      4 | 夏新t5                                 |    2878.00 |<br>|       23 |      5 | 诺基亚n96                              |    3700.00 |<br>|        7 |      8 | 诺基亚n85原装立体声耳机hs-82           |     100.00 |<br>|        6 |     11 | 胜创kingmax内存卡                      |      42.00 |<br>|       25 |     13 | 小灵通/固话50元充值卡                  |      48.00 |<br>|       29 |     14 | 移动100元充值卡                        |      90.00 |<br>|       27 |     15 | 联通100元充值卡                        |      95.00 |<br>+———-+——–+—————————————-+————+<br>9 rows in set (0.03 sec)</p><p>mysql> #编码问题<br>mysql> #字符编码到字符集的映射<br>mysql> #gb2312,utf-8<br>mysql> #unicode 码表,—– utf-8 压缩文件的关系<br>mysql> #如何截取utf-8无乱码<br>mysql> #从头开始,取1个字节,<br>mysql> #通过位运算,计算连续的1的g个数<br>mysql> #如为0 截取1个<br>mysql> #如为n 则截取n个<br>mysql> gbk转为utf-8<br>    -> \c<br>mysql> #jbk<br>mysql> #jbk 转unicode 在转utf-8<br>mysql> #乱码是怎么形成,编码和解码不统一<br>mysql> #转码过程字节丢失<br>mysql> create table t(id int ,name varchar(50) not null default(“1244”));<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘(“1244”))’ at line 1<br>mysql> create table t(id int ,name varchar(50) not null default(1244));<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘(1244))’ at line 1<br>mysql> create table t(id int ,name varchar(50) not null default ‘1244’);<br>ERROR 1050 (42S01): Table ‘t’ already exists<br>mysql> create table tem(id int ,time datetime not null default now() );;<br>Query OK, 0 rows affected (0.95 sec)</p><p>ERROR:<br>No query specified</p><p>mysql> desc time;<br>ERROR 1146 (42S02): Table ‘test01.time’ doesn’t exist<br>mysql> desc tem;<br>+——-+———-+——+—–+——————-+——-+<br>| Field | Type     | Null | Key | Default           | Extra |<br>+——-+———-+——+—–+——————-+——-+<br>| id    | int(11)  | YES  |     | NULL              |       |<br>| time  | datetime | NO   |     | CURRENT_TIMESTAMP |       |<br>+——-+———-+——+—–+——————-+——-+<br>2 rows in set (0.13 sec)</p><p>mysql> drop tem;<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘tem’ at line 1<br>mysql> drop table tem;<br>Query OK, 0 rows affected (0.49 sec)</p><p>mysql> create table tem(id int(11) not null primary key ,name varchar(50) not null ,time datetime not null default now());<br>Query OK, 0 rows affected (0.39 sec)</p><p>mysql> insert into tem values(1,”lili”),(2,”韩梅梅”),(3,”笑话”),(4,”哈哈”);<br>ERROR 1136 (21S01): Column count doesn’t match value count at row 1<br>mysql> insert into tem values(1,”lili”,null),(2,”韩梅梅”,null),(3,”笑话”,null),(4,”哈哈”,null);<br>ERROR 1048 (23000): Column ‘time’ cannot be null<br>mysql> insert into tem(id,name) values(1,”lili”),(2,”韩梅梅”),(3,”笑话”),(4,”哈哈”);<br>Query OK, 4 rows affected (0.20 sec)<br>Records: 4  Duplicates: 0  Warnings: 0</p><p>mysql> select * from tem;<br>+—-+———–+———————+<br>| id | name      | time                |<br>+—-+———–+———————+<br>|  1 | lili      | 2019-10-16 19:45:54 |<br>|  2 | 韩梅梅    | 2019-10-16 19:45:54 |<br>|  3 | 笑话      | 2019-10-16 19:45:54 |<br>|  4 | 哈哈      | 2019-10-16 19:45:54 |<br>+—-+———–+———————+<br>4 rows in set (0.00 sec)</p><p>mysql> delete from tem order by id desc limit 2;<br>Query OK, 2 rows affected (0.33 sec)</p><p>mysql> select * from tem;<br>+—-+———–+———————+<br>| id | name      | time                |<br>+—-+———–+———————+<br>|  1 | lili      | 2019-10-16 19:45:54 |<br>|  2 | 韩梅梅    | 2019-10-16 19:45:54 |<br>+—-+———–+———————+<br>2 rows in set (0.00 sec)</p><p>mysql> select *,week(time) from tem;<br>+—-+———–+———————+————+<br>| id | name      | time                | week(time) |<br>+—-+———–+———————+————+<br>|  1 | lili      | 2019-10-16 19:45:54 |         41 |<br>|  2 | 韩梅梅    | 2019-10-16 19:45:54 |         41 |<br>+—-+———–+———————+————+<br>2 rows in set (0.01 sec)</p><p>mysql> #设置client 和connection的字符集<br>mysql> # set character_set_client=gbk;<br>mysql> # set character_set_connection=utf8<br>mysql> # set character_set_ressults=gbk;<br>mysql> # set character_set_results=gbk;<br>mysql> # 1366 字符编码问题<br>mysql> 大转小会丢失<br>    -> \c<br>mysql> #即 server> connection> client 编码范围<br>mysql> #client con results 都是hgbk<br>mysql> #client con results 都是gbk<br>mysql> #若三者都是gbk 则可以简写<br>mysql> # 即 set names gbk<br>mysql> #utf8中文截取无乱码<br>mysql> #存储引擎,<br>mysql> # innodb myisam  innodb支持事务,<br>mysql><br>mysql> #start transaction;<br>mysql> commit;<br>Query OK, 0 rows affected (0.00 sec)</p><p>mysql> #commit;<br>mysql> #rollback;<br>mysql> exit</p></body></html>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;mysql查询基本知识-通过记录log的方式记录知识点&quot;&gt;&lt;a href=&quot;#mysql查询基本知识-通过记录log的方式记录知识点&quot; class=&quot;headerlink&quot; title=&quot;mysql查询基本知识,通过记录log的方式记录知识点&quot;&gt;&lt;/a&gt;mysql查询基本知识,通过记录log的方式记录知识点&lt;/h2&gt;&lt;p&gt;作者: philxling&lt;/p&gt;
&lt;p&gt;mysql&amp;gt; select goods_name,goods_id, concat(“HTC”,substring(goods_name,4)) as name from goods where goods_name like “诺基亚%”;&lt;/p&gt;
    
    </summary>
    
    
      <category term="mysql" scheme="http://philxling.cn/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://philxling.cn/tags/mysql/"/>
    
  </entry>
  
</feed>
